name: Manual package creation
on:
  workflow_dispatch:
    inputs:
      skipAtomicE2E:
        description: 'Skip Atomic end to end tests'
        type: boolean
        required: false
      skipQuanticE2E:
        description: 'Skip Quantic end to end tests'
        type: boolean
        required: false
      skipUnitTests:
        description: 'Skip Unit tests'
        type: boolean
        required: false
      skipAtomicReactE2E:
        description: 'Skip Atomic React end to end tests'
        type: boolean
        required: false
      skipAtomicAngularE2E:
        description: 'Skip Atomic Angular end to end tests'
        type: boolean
        required: false
      skipAtomicInsightsPanelE2E:
        description: 'Skip Atomic Insight Panel end to end tests'
        type: boolean
        required: false
      skipAtomicStencilE2E:
        description: 'Skip Atomic stencil end to end tests'
        type: boolean
        required: false
      skipAtomicHostedPageE2E:
        description: 'Skip Atomic Hosted Page end to end tests'
        type: boolean
        required: false
      skipAtomicReactNextJSE2E:
        description: 'Skip Atomic React NextJS end to end tests'
        type: boolean
        required: false
      skipIIFEE2E:
        description: 'Skip IIFE end to end tests'
        type: boolean
        required: false


jobs:
  build:
    name: 'Build'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup
  lint-check:
    name: 'Check with linter'
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup
      - run: npm run lint:check
  unit-test:
    name: 'Run unit tests'
    if: ${{ github.event.inputs.skipUnitTests != 'true' }}
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup
      - run: npm test
  e2e-atomic-test:
    name: 'Run e2e tests on Atomic'
    if: ${{ github.event.inputs.skipAtomicE2E != 'true' }}
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup
      - uses: ./.github/actions/e2e-atomic
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

  e2e-quantic-test:
    name: 'Run e2e tests on Quantic'
    if: ${{ github.event.inputs.skipQuanticE2E != 'true' }}
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup
      - uses: ./.github/actions/e2e-quantic
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          clientid: ${{ secrets.SFDX_AUTH_CLIENT_ID }}
          jwtkey: ${{ secrets.SFDX_AUTH_JWT_KEY }}

  e2e-atomic-react-test:
    name: 'Run e2e tests on Atomic React'
    if: ${{ github.event.inputs.skipAtomicReactE2E != 'true' }}
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup
      - uses: ./.github/actions/e2e-atomic-react

  e2e-atomic-angular-test:
    name: 'Run e2e tests on Atomic Angular'
    if: ${{ github.event.inputs.skipAtomicAngularE2E != 'true' }}
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup
      - uses: ./.github/actions/e2e-atomic-angular
  e2e-atomic-vuejs-test:
    name: 'Run e2e tests on Vue.js sample'
    if: ${{ github.event.inputs.skipAtomicVueJsE2E != 'true' }}
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup
      - uses: ./.github/actions/e2e-vuejs
  e2e-atomic-insight-panel-test:
    name: 'Run e2e tests on Atomic insight panel'
    if: ${{ github.event.inputs.skipAtomicInsightsPanelE2E != 'true' }}
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup
      - uses: ./.github/actions/e2e-atomic-insight-panel

  e2e-atomic-stencil-test:
    name: 'Run e2e tests on Stencil.js sample'
    if: ${{ github.event.inputs.skipAtomicStencilE2E != 'true' }}
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup
      - uses: ./.github/actions/e2e-stencil

  e2e-atomic-hosted-page-test:
    name: 'Runs Cypress tests for Atomic Hosted Page'
    if: ${{ github.event.inputs.skipAtomicHostedPageE2E != 'true' }}
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup
      - uses: ./.github/actions/e2e-atomic-hosted-page

  e2e-atomic-react-nextjs-test:
    name: 'Run e2e tests on Atomic React NextJS'
    if: ${{ github.event.inputs.skipAtomicReactNextJSE2E != 'true' }}
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup
      - uses: ./.github/actions/e2e-atomic-next

  e2e-iife-test:
    name: 'Run e2e tests for IIFE'
    if: ${{ github.event.inputs.skipIIFEE2E != 'true' }}
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup
      - uses: ./.github/actions/e2e-iife

  bump-version:
    name: 'Bump version'
    needs:
      - 'lint-check'
      - 'unit-test'
      - 'e2e-atomic-test'
      - 'e2e-quantic-test'
    runs-on: ubuntu-latest
    if: cancelled() || failure() || success()
    steps:
      - name: fail if unit test failed
        if: ${{ needs.unit-test.result == 'failure' }}
        run: exit 1
      - name: fail if atomic e2e failed
        if: ${{ needs.e2e-atomic-test.result == 'failure' }}
        run: exit 1
      - name: fail if quantic e2e failed
        if: ${{ needs.e2e-quantic-test == 'failure' }}
        run: exit 1
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.ADMIN_GITHUB_TOKEN }}
          fetch-depth: 0
      - uses: ./.github/actions/setup
      - run: git add '**package-lock.json'
      - name: Clean directory
        run: git clean -xfd -e node_modules/ -e .husky
      - name: Commit & push
        run: |
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "<>"
          npm run bump:version
