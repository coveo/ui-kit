name: DXUI Issue Handler

on:
  issues:
    types: [opened]

permissions:
  issues: write
  contents: read

jobs:
  handle-dxui-issue:
    runs-on: ubuntu-latest
    # Only run for issues created with DXUI templates (they have the project assignment)
    if: contains(github.event.issue.title, '[DXUI')
    
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          egress-policy: audit

      - name: Check team membership
        id: check-team
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            try {
              const teamSlug = 'dxui';
              const org = 'coveo';
              const username = context.payload.issue.user.login;
              
              console.log(`Checking if ${username} is a member of @${org}/${teamSlug}`);
              
              // Check if user is a member of the team
              const { data: membership } = await github.rest.teams.getMembershipForUserInOrg({
                org: org,
                team_slug: teamSlug,
                username: username
              });
              
              console.log(`Membership status: ${membership.state}`);
              return membership.state === 'active';
            } catch (error) {
              if (error.status === 404) {
                console.log(`User is not a member of the team`);
                return false;
              }
              throw error;
            }

      - name: Close issue if not team member
        if: steps.check-team.outputs.result == 'false'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const issueNumber = context.payload.issue.number;
            const username = context.payload.issue.user.login;
            
            // Add a comment explaining why the issue is being closed
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issueNumber,
              body: `This issue was automatically closed because @${username} is not a member of the @coveo/dxui team. DXUI issue templates are reserved for DXUI team members only.`
            });
            
            // Close the issue
            await github.rest.issues.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issueNumber,
              state: 'closed'
            });
            
            console.log(`Issue #${issueNumber} closed - user not a team member`);

      - name: Confirm issue handled for team member
        if: steps.check-team.outputs.result == 'true'
        run: |
          echo "Issue created by DXUI team member - keeping open"
          echo "Project assignment is handled by the issue template (projects: coveo/21)"
