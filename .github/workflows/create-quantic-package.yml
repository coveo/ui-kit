name: Create Quantic Package Workflow

env:
  SFDX_AUTH_JWT_INSTANCE_URL: https://login.salesforce.com
  SFDX_AUTH_JWT_USERNAME: sfdc.integration.devv2.hub@coveo.com
  SFDX_AUTH_JWT_KEY: ${{ secrets.SFDX_AUTH_JWT_KEY_DEV }}
  SFDX_AUTH_JWT_CLIENT_ID: ${{ secrets.SFDX_ATH_JWT_CLIENT_ID }}
  PACKAGE_ID: 0Ho6g000000k9g8CAA

on:
  workflow_dispatch:
  schedule:
    - cron: '0 22 * * *'

defaults:
  run:
    shell: bash

jobs:
  create-and-promote-quantic-package:
    name: Create and Promote Quantic Package
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Use Node.js 14.x
        uses: actions/setup-node@v1
        with:
          node-version: 14.x
      - name: Check Out Repository
        uses: actions/checkout@v2
      - name: Create cache file
        run: |
          mkdir check-SHA
          echo ${{ github.sha }} > github-sha.txt
      - name: Check SHA
        id: check_sha
        uses: actions/cache@v1
        with:
          path: check-SHA
          key: check-SHA-${{ github.sha }}
      - name: Cancel current workflow run if no changes made
        if: steps.check_sha.outputs.cache-hit == 'true'
        uses: actions/github-script@v4
        with:
          script: |
            github.actions.cancelWorkflowRun({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: context.runId
            })
      - name: Install NPM dependencies
        run: |
          npm i -g sfdx-cli
          npm i
      - name: Build Quantic project
        run: npm run build
      - name: Create jwt key file
        run: echo "$SFDX_AUTH_JWT_KEY" > server.key
      - name: Connect to DevHub organization
        run: sfdx force:auth:jwt:grant --clientid $SFDX_AUTH_JWT_CLIENT_ID --jwtkeyfile server.key --username $SFDX_AUTH_JWT_USERNAME --setdefaultdevhubusername
      - name: Create package version
        run: |
          sfdx force:package:version:create --package $PACKAGE_ID --wait 30 -x --json >> package-version-result.json
          cat package-version-result.json
          PACKAGE_VERSION_ID="$(cat package-version-result.json | jq '.result.SubscriberPackageVersionId' -r)"
          if [ $PACKAGE_VERSION_ID == "null" ]; then echo "Null Package ID"; exit 1; fi
          echo $PACKAGE_VERSION_ID
