name: PR Robot
on: [pull_request]
jobs:
  report-size:
    name: "Report bundle size"
    runs-on: ubuntu-latest
    env:
      GITHUB_CREDENTIALS: ${{ secrets.GITHUB_TOKEN }}
      NODE_OPTIONS: --max_old_space_size=4096
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v2
        with:
          node-version-file: '.nvmrc'
      - run: npm ci
      - run: npm run pr:report
  build:
    name: "Build"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/setup
  lint-check:
    name: "Check with linter"
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/setup
      - run: npm run lint:check
  generate-doc:
    name: "Generate doc"
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/setup
      - run: npm run doc:generate
  unit-test:
    name: "Run unit tests"
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/setup
      - run: npx --no-install lerna run copy:staticresources --scope @coveo/quantic
      - run: npm test
  e2e-atomic-test:
    name: "Run e2e tests on Atomic"
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/setup
      - uses: ./.github/actions/e2e-atomic
  e2e-quantic-test:
    name: "Run e2e tests on Quantic"
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/setup
      - uses: ./.github/actions/e2e-quantic
        with:
          clientid: ${{ secrets.SFDX_AUTH_CLIENT_ID }}
          jwtkey: ${{ secrets.SFDX_AUTH_JWT_KEY }}
  is-valid:
    name: "Confirm build is valid"
    runs-on: ubuntu-latest
    needs:
      - "lint-check"
      - "generate-doc"
      - "unit-test"
      - "e2e-atomic-test"
      - "e2e-quantic-test"
    steps:
      - run: echo 'Build has been verified'