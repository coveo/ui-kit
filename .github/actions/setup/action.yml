name: 'Setup & build'
description: 'Setup node, install dependencies & build'
inputs:
  load-cache:
    description: 'Whether to restore the Nx cache.'
    required: false
    default: 'true'
runs:
  using: composite
  steps:
    - uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4
      with:
        registry-url: 'https://registry.npmjs.org'
        node-version-file: '.nvmrc'
    - name: Ensure Nx cache can be shared between different CI environments # Source: https://nx.dev/recipes/troubleshooting/unknown-local-cache
      run: echo "NX_REJECT_UNKNOWN_LOCAL_CACHE=0" >> $GITHUB_ENV
      shell: bash
    - name: Install npm
      run: npm i -g npm@10
      shell: bash
    - uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4
      id: npm-cache
      with:
        path: |
          **/node_modules/
          !node_modules/.cache/nx/
        key: npm-${{ hashFiles('package-lock.json') }}-${{ hashFiles('utils/atomic-storybook/package-lock.json') }}
    - uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4
      with:
        path: ~/.cache/Cypress
        key: cy-${{ hashFiles('package-lock.json') }}-${{ hashFiles('utils/atomic-storybook/package-lock.json') }}
    - if: inputs.load-cache == 'true'
      uses: actions/cache/restore@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4
      id: nx-cache
      with:
        path: node_modules/.cache/nx
        key: nx-${{ github.sha }}
        fail-on-cache-miss: true
    - if: steps.npm-cache.outputs.cache-hit != 'true'
      run: npm ci
      shell: bash
    - if: steps.nx-cache.outputs.cache-hit != 'true'
      run: npm run build
      shell: bash
