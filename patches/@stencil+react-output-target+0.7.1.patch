diff --git a/node_modules/@stencil/react-output-target/dist/react-output-target.cjs b/node_modules/@stencil/react-output-target/dist/react-output-target.cjs
index 295a892..a296484 100644
--- a/node_modules/@stencil/react-output-target/dist/react-output-target.cjs
+++ b/node_modules/@stencil/react-output-target/dist/react-output-target.cjs
@@ -13,12 +13,12 @@
 import React from 'react';
 import { ${f} } from '@stencil/react-output-target/runtime';
 import type { EventName, StencilReactComponent } from '@stencil/react-output-target/runtime';
-  `);for(const p of n){const u=p.tagName,l=T(u),$=`${l}Element`,b=`${l}CustomEvent`;e.addImportDeclaration({moduleSpecifier:`${s}/${i}/${u}.js`,namedImports:[{name:l,alias:$},{name:"defineCustomElement",alias:`define${l}`}]});const F=(p.events||[]).filter(o=>o.internal===!1),y=[];for(const o of F)if(Object.keys(o.complexType.references).length>0){for(const _ of Object.keys(o.complexType.references))o.complexType.references[_].location==="global"||e.addImportDeclaration({moduleSpecifier:s,namedImports:[{name:_,isTypeOnly:!0}]});e.addImportDeclaration({moduleSpecifier:s,namedImports:[{name:b,isTypeOnly:!0}]}),y.push({originalName:o.name,name:j(o.name),type:`EventName<${b}<${o.complexType.original}>>`})}else y.push({originalName:o.name,name:j(o.name),type:`EventName<CustomEvent<${o.complexType.original}>>`});const E=`${l}Events`;e.addTypeAlias({name:E,type:y.length>0?`{ ${y.map(o=>`${o.name}: ${o.type}`).join(`,
+  `);for(const p of n){const u=p.tagName,l=T(u),$=`${l}Element`,b=`${l}CustomEvent`;e.addImportDeclaration({moduleSpecifier:`${s}/${i}/${u}.js`,namedImports:[{name:l,alias:$},{name:"defineCustomElement",alias:`define${l}`}]});const F=(p.events||[]).filter(o=>o.internal===!1),y=[];for(const o of F)if(Object.keys(o.complexType.references).length>0){for(const _ of Object.keys(o.complexType.references))o.complexType.references[_].location==="global"||e.addImportDeclaration({moduleSpecifier:s,namedImports:[{name:_,isTypeOnly:!0}]});e.addImportDeclaration({moduleSpecifier:s,namedImports:[{name:b,isTypeOnly:!0}]}),y.push({originalName:o.name,name:j(o.name),type:`EventName<${b}<${o.complexType.original}>>`})}else y.push({originalName:o.name,name:j(o.name),type:`EventName<CustomEvent<${o.complexType.original}>>`});const E=`${l}Events`;e.addTypeAlias({name:E,type:y.length>0?`{ ${y.map(o=>`'${o.name}': ${o.type}`).join(`,
 `)} }`:"NonNullable<unknown>"});const N=`/*@__PURE__*/ createComponent<${$}, ${E}>({
     tagName: '${u}',
     elementClass: ${$},
     react: React,
-    events: {${y.map(o=>`${o.name}: '${o.originalName}'`).join(`,
+    events: {${y.map(o=>`'${o.name}': '${o.originalName}'`).join(`,
 `)}} as ${E},
     defineCustomElement: define${l}
   })`,R=`/*@__PURE__*/ createSSRComponent<${$}, ${E}>({
diff --git a/node_modules/@stencil/react-output-target/dist/react-output-target.js b/node_modules/@stencil/react-output-target/dist/react-output-target.js
index 3308c7f..c800d9f 100644
--- a/node_modules/@stencil/react-output-target/dist/react-output-target.js
+++ b/node_modules/@stencil/react-output-target/dist/react-output-target.js
@@ -76,14 +76,14 @@ import type { EventName, StencilReactComponent } from '@stencil/react-output-tar
     const y = `${m}Events`;
     e.addTypeAlias({
       name: y,
-      type: E.length > 0 ? `{ ${E.map((o) => `${o.name}: ${o.type}`).join(`,
+      type: E.length > 0 ? `{ ${E.map((o) => `'${o.name}': ${o.type}`).join(`,
 `)} }` : "NonNullable<unknown>"
     });
     const _ = `/*@__PURE__*/ createComponent<${T}, ${y}>({
     tagName: '${u}',
     elementClass: ${T},
     react: React,
-    events: {${E.map((o) => `${o.name}: '${o.originalName}'`).join(`,
+    events: {${E.map((o) => `'${o.name}': '${o.originalName}'`).join(`,
 `)}} as ${y},
     defineCustomElement: define${m}
   })`, j = `/*@__PURE__*/ createSSRComponent<${T}, ${y}>({
