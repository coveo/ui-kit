{
  "schemaVersion": "1.0.0",
  "readme": "",
  "modules": [
    {
      "kind": "javascript-module",
      "path": "src/utils/accessibility-utils.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/utils/debounce-utils.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/utils/dom-utils.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/utils/initialization-utils.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/utils/jsx-utils.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/utils/local-storage-utils.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/atomic-focus-detector.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/atomic-focus-trap.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/button-style.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/button.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/carousel.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/checkbox.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/fieldset-group.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/heading.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/hidden.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/iconButton.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/radio-button.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/switch.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/triStateCheckbox.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/commerce/atomic-commerce-layout/atomic-commerce-layout.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/commerce/atomic-commerce-interface/atomic-commerce-interface.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/commerce/atomic-commerce-load-more-products/atomic-commerce-load-more-products.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/commerce/atomic-commerce-pager/atomic-commerce-pager.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/commerce/atomic-commerce-product-list/atomic-commerce-product-list.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/commerce/atomic-commerce-query-error/atomic-commerce-query-error.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/commerce/atomic-commerce-query-summary/atomic-commerce-query-summary.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/commerce/atomic-commerce-recommendation-carousel/atomic-commerce-recommendation-list.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/commerce/atomic-commerce-sort-dropdown/atomic-commerce-sort-dropdown.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/commerce/atomic-commerce-search-box/atomic-commerce-search-box.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/commerce/atomic-commerce-text/atomic-commerce-text.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/commerce/atomic-product/atomic-product.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/commerce/product-template-components/product-template-decorators.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/commerce/product-template/atomic-product-template.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/commerce/product-template/product-template-common.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/atomic-icon/atomic-icon.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "The `atomic-icon` component displays an SVG icon with a 1:1 aspect ratio.\n\nThis component can display an icon from those available in the Atomic package, from a specific location, or as an inline SVG element.",
          "name": "AtomicIcon",
          "members": [
            {
              "kind": "field",
              "name": "host",
              "type": {
                "text": "HTMLElement"
              }
            },
            {
              "kind": "field",
              "name": "bindings",
              "type": {
                "text": "AnyBindings"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "icon",
              "type": {
                "text": "string"
              },
              "description": "The SVG icon to display.\n\n- Use a value that starts with `http://`, `https://`, `./`, or `../`, to fetch and display an icon from a given location.\n- Use a value that starts with `assets://`, to display an icon from the Atomic package.\n- Use a stringified SVG to display it directly."
            },
            {
              "kind": "field",
              "name": "error",
              "type": {
                "text": "Error"
              },
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "updateIcon",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "initialize",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "render",
              "privacy": "public"
            }
          ],
          "attributes": [
            {
              "name": "icon",
              "fieldName": "icon",
              "type": {
                "text": "string"
              },
              "description": "The SVG icon to display.\n\n- Use a value that starts with `http://`, `https://`, `./`, or `../`, to fetch and display an icon from a given location.\n- Use a value that starts with `assets://`, to display an icon from the Atomic package.\n- Use a stringified SVG to display it directly."
            }
          ],
          "tagName": "atomic-icon",
          "events": [],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AtomicIcon",
          "declaration": {
            "name": "AtomicIcon",
            "module": "src/components/common/atomic-icon/atomic-icon.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "atomic-icon",
          "declaration": {
            "name": "AtomicIcon",
            "module": "src/components/common/atomic-icon/atomic-icon.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/atomic-modal/atomic-modal.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/atomic-layout-section/atomic-layout-section.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "The `atomic-layout-section` lets you identify various sections for the related `atomic-layout` component.",
          "name": "AtomicLayoutSection",
          "members": [
            {
              "kind": "field",
              "name": "section",
              "type": {
                "text": "Section"
              },
              "privacy": "public",
              "description": "The name of the layout section."
            },
            {
              "kind": "field",
              "name": "minWidth",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "public",
              "description": "For column sections, the minimum horizontal space it should take.\nE.g. '300px'"
            },
            {
              "kind": "field",
              "name": "maxWidth",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "public",
              "description": "For column sections, the maximum horizontal space it should take.\nE.g. '300px'"
            }
          ],
          "attributes": [
            {
              "name": "section",
              "fieldName": "section",
              "type": {
                "text": "Section"
              },
              "description": "The name of the layout section."
            },
            {
              "name": "min-width",
              "fieldName": "minWidth",
              "type": {
                "text": "string | undefined"
              },
              "description": "For column sections, the minimum horizontal space it should take.\nE.g. '300px'"
            },
            {
              "name": "max-width",
              "fieldName": "maxWidth",
              "type": {
                "text": "string | undefined"
              },
              "description": "For column sections, the maximum horizontal space it should take.\nE.g. '300px'"
            }
          ],
          "tagName": "atomic-layout-section",
          "events": [],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AtomicLayoutSection",
          "declaration": {
            "name": "AtomicLayoutSection",
            "module": "src/components/common/atomic-layout-section/atomic-layout-section.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "atomic-layout-section",
          "declaration": {
            "name": "AtomicLayoutSection",
            "module": "src/components/common/atomic-layout-section/atomic-layout-section.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/atomic-numeric-range/atomic-numeric-range.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "The `atomic-numeric-range` component defines the range of an `atomic-numeric-facet`, and therefore must be defined within an `atomic-numeric-facet` component.",
          "name": "AtomicNumericRange",
          "members": [
            {
              "kind": "field",
              "name": "host",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "public",
              "description": "The non-localized label for the facet. When defined, it will appear instead of the formatted value.\nUsed in the `atomic-breadbox` component through the bindings store."
            },
            {
              "kind": "field",
              "name": "start",
              "type": {
                "text": "number"
              },
              "privacy": "public",
              "description": "The starting value for the numeric range."
            },
            {
              "kind": "field",
              "name": "end",
              "type": {
                "text": "number"
              },
              "privacy": "public",
              "description": "The ending value for the numeric range."
            },
            {
              "kind": "field",
              "name": "endInclusive",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "description": "Specifies whether the end value should be included in the range."
            }
          ],
          "attributes": [
            {
              "name": "label",
              "fieldName": "label",
              "type": {
                "text": "string | undefined"
              },
              "description": "The non-localized label for the facet. When defined, it will appear instead of the formatted value.\nUsed in the `atomic-breadbox` component through the bindings store."
            },
            {
              "name": "start",
              "fieldName": "start",
              "type": {
                "text": "number"
              },
              "description": "The starting value for the numeric range."
            },
            {
              "name": "end",
              "fieldName": "end",
              "type": {
                "text": "number"
              },
              "description": "The ending value for the numeric range."
            },
            {
              "name": "end-inclusive",
              "fieldName": "endInclusive",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Specifies whether the end value should be included in the range."
            }
          ],
          "tagName": "atomic-numeric-range",
          "events": [],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AtomicNumericRange",
          "declaration": {
            "name": "AtomicNumericRange",
            "module": "src/components/common/atomic-numeric-range/atomic-numeric-range.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "atomic-numeric-range",
          "declaration": {
            "name": "AtomicNumericRange",
            "module": "src/components/common/atomic-numeric-range/atomic-numeric-range.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/atomic-rating/atomic-rating.spec.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/atomic-rating/atomic-rating.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/atomic-result-placeholder/atomic-result-placeholder.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/atomic-result-placeholder/placeholders.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/atomic-timeframe/atomic-timeframe.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "The `atomic-timeframe` component defines a timeframe of an `atomic-timeframe-facet`, and therefore must be defined within an `atomic-timeframe-facet` component.\n\nA timeframe is a span of time from now to a specific time in the past.",
          "name": "AtomicTimeframe",
          "members": [
            {
              "kind": "field",
              "name": "period",
              "type": {
                "text": "'past' | 'next'"
              },
              "privacy": "public",
              "default": "'past'",
              "description": "The relative period of time to now."
            },
            {
              "kind": "field",
              "name": "unit",
              "type": {
                "text": "RelativeDateUnit"
              },
              "privacy": "public",
              "description": "The unit used to define:\n- the start date of the timeframe, if the period is `past`\n- the end date of the timeframe, if the period is `future`"
            },
            {
              "kind": "field",
              "name": "amount",
              "type": {
                "text": "number"
              },
              "privacy": "public",
              "default": "1",
              "description": "The amount of units from which to count.\n\nE.g., 10 days, 1 year, etc."
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "public",
              "description": "The non-localized label for the timeframe. When defined, it will appear instead of the formatted value.\nUsed in the `atomic-breadbox` component through the bindings store."
            }
          ],
          "attributes": [
            {
              "name": "period",
              "fieldName": "period",
              "type": {
                "text": "'past' | 'next'"
              },
              "default": "'past'",
              "description": "The relative period of time to now."
            },
            {
              "name": "unit",
              "fieldName": "unit",
              "type": {
                "text": "RelativeDateUnit"
              },
              "description": "The unit used to define:\n- the start date of the timeframe, if the period is `past`\n- the end date of the timeframe, if the period is `future`"
            },
            {
              "name": "amount",
              "fieldName": "amount",
              "type": {
                "text": "number"
              },
              "default": "1",
              "description": "The amount of units from which to count.\n\nE.g., 10 days, 1 year, etc."
            },
            {
              "name": "label",
              "fieldName": "label",
              "type": {
                "text": "string | undefined"
              },
              "description": "The non-localized label for the timeframe. When defined, it will appear instead of the formatted value.\nUsed in the `atomic-breadbox` component through the bindings store."
            }
          ],
          "tagName": "atomic-timeframe",
          "events": [],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AtomicTimeframe",
          "declaration": {
            "name": "AtomicTimeframe",
            "module": "src/components/common/atomic-timeframe/atomic-timeframe.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "atomic-timeframe",
          "declaration": {
            "name": "AtomicTimeframe",
            "module": "src/components/common/atomic-timeframe/atomic-timeframe.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/facets/facet-common.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/facets/facet-guard.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/facets/timeframe-facet-common.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/generated-answer/copy-button.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/generated-answer/feedback-button.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/generated-answer/generated-answer-common.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/generated-answer/generated-content-container.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/generated-answer/rephrase-buttons.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/generated-answer/retry-prompt.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/generated-answer/show-button.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/generated-answer/source-citations.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/generated-answer/typing-loader.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/image-carousel/image-carousel-indicators.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/image-carousel/image-carousel.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/interface/interface-common.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/item-link/attributes-slot.spec.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/item-link/item-link.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/item-list/display-grid.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/item-list/display-table.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/item-list/display-wrapper.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/item-list/item-decorators.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/item-list/item-display-guard.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/item-list/item-list-common.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/item-list/item-list-decorators.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/item-list/item-list-guard.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/load-more/button.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/load-more/container.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/load-more/guard.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/load-more/progress-bar.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/load-more/summary.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/no-results/no-results-common.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/pager/pager-buttons.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/pager/pager-guard.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/pager/pager-navigation.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/query-error/container.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/query-error/description.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/query-error/details.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/query-error/guard.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/query-error/icon.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/query-error/link.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/query-error/show-more.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/query-error/title.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/query-summary/container.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/query-summary/guard.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/query-summary/utils.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/refine-modal/refine-modal-common.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/result-templates/result-template-common.spec.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/result-templates/result-template-common.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/result-children/result-children-common.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/search-box/clear-button.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/search-box/search-box-wrapper.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/search-box/search-input.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/search-box/search-text-area.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/search-box/submit-button.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/search-box/text-area-clear-button.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/search-box/text-area-submit-button.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/smart-snippets/atomic-smart-snippet-feedback-banner.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/smart-snippets/atomic-smart-snippet-source.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/sort/container.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/sort/guard.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/sort/label.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/sort/option.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/sort/select.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/suggestions/instant-item.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/suggestions/query-suggestions.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/suggestions/recent-queries.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/tabs/tab-bar.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/tabs/tab-common.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/tabs/tab-popover.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/insight/atomic-insight-edit-toggle/atomic-insight-edit-toggle.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/insight/atomic-insight-facet/atomic-insight-facet.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/insight/atomic-insight-full-search-button/atomic-insight-full-search-button.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/insight/atomic-insight-generated-answer/atomic-insight-generated-answer.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/insight/atomic-insight-history-toggle/atomic-insight-history-toggle.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/insight/atomic-insight-interface/atomic-insight-interface.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/insight/atomic-insight-layout/atomic-insight-layout.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/insight/atomic-insight-no-results/atomic-insight-no-results.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/insight/atomic-insight-numeric-facet/atomic-insight-numeric-facet.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/insight/atomic-insight-pager/atomic-insight-pager.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/insight/atomic-insight-query-error/atomic-insight-query-error.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/insight/atomic-insight-query-summary/atomic-insight-query-summary.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/insight/atomic-insight-refine-modal/atomic-insight-refine-modal.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/insight/atomic-insight-refine-toggle/atomic-insight-refine-toggle.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/insight/atomic-insight-result/atomic-insight-result.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/insight/atomic-insight-result-action/atomic-insight-result-action.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/insight/atomic-insight-result-action-bar/atomic-insight-result-action-bar.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/insight/atomic-insight-search-box/atomic-insight-search-box.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/insight/atomic-insight-tab/atomic-insight-tab.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/insight/atomic-insight-tabs/atomic-insight-tabs.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/insight/atomic-insight-timeframe-facet/atomic-insight-timeframe-facet.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/ipx/atomic-ipx-body/atomic-ipx-body.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/ipx/atomic-ipx-button/atomic-ipx-button.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/ipx/atomic-ipx-embedded/atomic-ipx-embedded.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/ipx/atomic-ipx-modal/atomic-ipx-modal.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/ipx/atomic-ipx-refine-modal/atomic-ipx-refine-modal.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/ipx/atomic-ipx-refine-toggle/atomic-ipx-refine-toggle.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/ipx/atomic-ipx-result-link/atomic-ipx-result-link.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/ipx/atomic-ipx-tab/atomic-ipx-tab.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/ipx/atomic-ipx-tabs/atomic-ipx-tabs.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/recommendations/atomic-recs-error/atomic-recs-error.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "The `atomic-recs-error` component handles fatal errors when performing a recommendations request on the index or Search API. When the error is known, it displays a link to relevant documentation link for debugging purposes. When the error is unknown, it displays a small text area with the JSON content of the error.",
          "name": "AtomicRecsError",
          "cssParts": [
            {
              "description": "The svg related to the error.",
              "name": "icon"
            },
            {
              "description": "The title of the error.",
              "name": "title"
            },
            {
              "description": "A description of the error.",
              "name": "description"
            },
            {
              "description": "A link to the relevant documentation.",
              "name": "doc-link"
            },
            {
              "description": "A button to request additional error information.",
              "name": "more-info-btn"
            },
            {
              "description": "Additional error information.",
              "name": "error-info"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "bindings",
              "type": {
                "text": "RecsBindings"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "recommendationList",
              "type": {
                "text": "RecommendationList"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "recommendationListState",
              "type": {
                "text": "RecommendationListState"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "error",
              "type": {
                "text": "Error"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "showMoreInfo",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "ariaMessage",
              "type": {
                "text": "string"
              },
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "initialize",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "render",
              "privacy": "public"
            }
          ],
          "tagName": "atomic-recs-error",
          "events": [],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AtomicRecsError",
          "declaration": {
            "name": "AtomicRecsError",
            "module": "src/components/recommendations/atomic-recs-error/atomic-recs-error.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "atomic-recs-error",
          "declaration": {
            "name": "AtomicRecsError",
            "module": "src/components/recommendations/atomic-recs-error/atomic-recs-error.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/recommendations/atomic-recs-interface/atomic-recs-interface.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "The `atomic-recs-interface` component is the parent to all other atomic components in a recommendation interface. It handles the headless recommendation engine and localization configurations.",
          "name": "AtomicRecsInterface",
          "members": [
            {
              "kind": "field",
              "name": "host",
              "type": {
                "text": "HTMLAtomicRecsInterfaceElement"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "error",
              "type": {
                "text": "Error | undefined"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "pipeline",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "public",
              "description": "The recommendation interface [query pipeline](https://docs.coveo.com/en/180/).\n\nIf the recommendation interface is initialized using [`initializeWithRecommendationEngine`](https://docs.coveo.com/en/atomic/latest/reference/recommendation-components/atomic-recs-interface/#initializewithrecommendationengine), the query pipeline should instead be configured in the target engine."
            },
            {
              "kind": "field",
              "name": "searchHub",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "public",
              "description": "The recommendation interface [search hub](https://docs.coveo.com/en/1342/).\n\nIf the recommendation interface is initialized using [`initializeWithRecommendationEngine`](https://docs.coveo.com/en/atomic/latest/reference/recommendation-components/atomic-recs-interface/#initializewithrecommendationengine), the search hub should instead be configured in the target engine."
            },
            {
              "kind": "field",
              "name": "timezone",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "public",
              "description": "The [tz database](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones) identifier of the time zone to use to correctly interpret dates in the query expression, facets, and result items.\nBy default, the timezone will be [guessed](https://day.js.org/docs/en/timezone/guessing-user-timezone).\n\nExample: \"America/Montreal\""
            },
            {
              "kind": "field",
              "name": "engine",
              "type": {
                "text": "RecommendationEngine | undefined"
              },
              "privacy": "public",
              "description": "The recommendation interface headless engine."
            },
            {
              "kind": "field",
              "name": "analytics",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "true",
              "description": "Whether analytics should be enabled."
            },
            {
              "kind": "field",
              "name": "i18n",
              "type": {
                "text": "i18n"
              },
              "privacy": "public",
              "description": "The recommendation interface i18next instance."
            },
            {
              "kind": "field",
              "name": "logLevel",
              "type": {
                "text": "RecsLogLevel | undefined"
              },
              "privacy": "public",
              "description": "The severity level of the messages to log in the console."
            },
            {
              "kind": "field",
              "name": "localizationCompatibilityVersion",
              "type": {
                "text": "i18nCompatibilityVersion"
              },
              "privacy": "public",
              "default": "'v3'",
              "description": "The compatibility JSON version for i18next to use (see [i18next Migration Guide](https://www.i18next.com/misc/migration-guide#v20.x.x-to-v21.0.0))."
            },
            {
              "kind": "field",
              "name": "language",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "'en'",
              "description": "The recommendation interface language."
            },
            {
              "kind": "field",
              "name": "fieldsToInclude",
              "type": {
                "text": "string[] | string"
              },
              "privacy": "public",
              "default": "'[]'",
              "description": "A list of non-default fields to include in the query results.\n\nSpecify the property as an array using a JSON string representation:\n```html\n<atomic-recs-interface fields-to-include='[\"fieldA\", \"fieldB\"]'></atomic-recs-interface>\n```"
            },
            {
              "kind": "field",
              "name": "languageAssetsPath",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "'./lang'",
              "description": "The language assets path. By default, this will be a relative URL pointing to `./lang`.\n\nExample: \"/mypublicpath/languages\""
            },
            {
              "kind": "field",
              "name": "iconAssetsPath",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "'./assets'",
              "description": "The icon assets path. By default, this will be a relative URL pointing to `./assets`.\n\nExample: \"/mypublicpath/icons\""
            },
            {
              "kind": "field",
              "name": "CspNonce",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "public",
              "description": "The value to set the [nonce](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/nonce) attribute to on inline script and style elements generated by this interface and its child components.\nIf your application is served with a Content Security Policy (CSP) that doesn't include the `script-src: 'unsafe-inline'` or `style-src: 'unsafe-inline'` directives,\nyou should ensure that your application server generates a new nonce on every page load and uses the generated value to set this prop and serve the corresponding CSP response headers\n(i.e., script-src 'nonce-<YOUR_GENERATED_NONCE>' and style-src 'nonce-<YOUR_GENERATED_NONCE>').\nOtherwise you may see console errors such as\n - Refused to execute inline script because it violates the following Content Security Policy directive: [...]\n - Refused to apply inline style because it violates the following Content Security Policy directive: [...]."
            },
            {
              "kind": "field",
              "name": "bindings",
              "type": {
                "text": "RecsBindings"
              },
              "privacy": "public",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "initialize",
              "privacy": "public",
              "parameters": [
                {
                  "name": "options",
                  "type": {
                    "text": "RecsInitializationOptions"
                  }
                }
              ],
              "description": "Initializes the connection with the headless recommendation engine using options for `accessToken` (required), `organizationId` (required), `renewAccessToken`, and `platformUrl`."
            },
            {
              "kind": "method",
              "name": "initializeWithRecommendationEngine",
              "privacy": "public",
              "parameters": [
                {
                  "name": "engine",
                  "type": {
                    "text": "RecommendationEngine"
                  }
                }
              ],
              "description": "Initializes the connection with an already preconfigured headless recommendation engine.\nThis bypasses the properties set on the component, such as analytics, recommendation, searchHub, language, timezone & logLevel."
            },
            {
              "kind": "method",
              "name": "getRecommendations",
              "privacy": "public",
              "description": "\nFetches new recommendations."
            },
            {
              "kind": "method",
              "name": "getOrganizationEndpoints",
              "privacy": "public",
              "parameters": [
                {
                  "name": "organizationId",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "env",
                  "default": "'prod'",
                  "type": {
                    "text": "PlatformEnvironment"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "updateIconAssetsPath",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "handleInitialization",
              "privacy": "public",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "InitializeEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "updateLanguage",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "toggleAnalytics",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "registerFieldsToInclude",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "render",
              "privacy": "public"
            }
          ],
          "attributes": [
            {
              "name": "pipeline",
              "fieldName": "pipeline",
              "type": {
                "text": "string | undefined"
              },
              "description": "The recommendation interface [query pipeline](https://docs.coveo.com/en/180/).\n\nIf the recommendation interface is initialized using [`initializeWithRecommendationEngine`](https://docs.coveo.com/en/atomic/latest/reference/recommendation-components/atomic-recs-interface/#initializewithrecommendationengine), the query pipeline should instead be configured in the target engine."
            },
            {
              "name": "search-hub",
              "fieldName": "searchHub",
              "type": {
                "text": "string | undefined"
              },
              "description": "The recommendation interface [search hub](https://docs.coveo.com/en/1342/).\n\nIf the recommendation interface is initialized using [`initializeWithRecommendationEngine`](https://docs.coveo.com/en/atomic/latest/reference/recommendation-components/atomic-recs-interface/#initializewithrecommendationengine), the search hub should instead be configured in the target engine."
            },
            {
              "name": "timezone",
              "fieldName": "timezone",
              "type": {
                "text": "string | undefined"
              },
              "description": "The [tz database](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones) identifier of the time zone to use to correctly interpret dates in the query expression, facets, and result items.\nBy default, the timezone will be [guessed](https://day.js.org/docs/en/timezone/guessing-user-timezone).\n\nExample: \"America/Montreal\""
            },
            {
              "name": "engine",
              "fieldName": "engine",
              "type": {
                "text": "RecommendationEngine | undefined"
              },
              "description": "The recommendation interface headless engine."
            },
            {
              "name": "analytics",
              "fieldName": "analytics",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "description": "Whether analytics should be enabled."
            },
            {
              "name": "i-1-8n",
              "fieldName": "i18n",
              "type": {
                "text": "i18n"
              },
              "description": "The recommendation interface i18next instance."
            },
            {
              "name": "log-level",
              "fieldName": "logLevel",
              "type": {
                "text": "RecsLogLevel | undefined"
              },
              "description": "The severity level of the messages to log in the console."
            },
            {
              "name": "localization-compatibility-version",
              "fieldName": "localizationCompatibilityVersion",
              "type": {
                "text": "i18nCompatibilityVersion"
              },
              "default": "'v3'",
              "description": "The compatibility JSON version for i18next to use (see [i18next Migration Guide](https://www.i18next.com/misc/migration-guide#v20.x.x-to-v21.0.0))."
            },
            {
              "name": "language",
              "fieldName": "language",
              "type": {
                "text": "string"
              },
              "default": "'en'",
              "description": "The recommendation interface language."
            },
            {
              "name": "fields-to-include",
              "fieldName": "fieldsToInclude",
              "type": {
                "text": "string[] | string"
              },
              "default": "'[]'",
              "description": "A list of non-default fields to include in the query results.\n\nSpecify the property as an array using a JSON string representation:\n```html\n<atomic-recs-interface fields-to-include='[\"fieldA\", \"fieldB\"]'></atomic-recs-interface>\n```"
            },
            {
              "name": "language-assets-path",
              "fieldName": "languageAssetsPath",
              "type": {
                "text": "string"
              },
              "default": "'./lang'",
              "description": "The language assets path. By default, this will be a relative URL pointing to `./lang`.\n\nExample: \"/mypublicpath/languages\""
            },
            {
              "name": "icon-assets-path",
              "fieldName": "iconAssetsPath",
              "type": {
                "text": "string"
              },
              "default": "'./assets'",
              "description": "The icon assets path. By default, this will be a relative URL pointing to `./assets`.\n\nExample: \"/mypublicpath/icons\""
            },
            {
              "name": "csp-nonce",
              "fieldName": "CspNonce",
              "type": {
                "text": "string | undefined"
              },
              "description": "The value to set the [nonce](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/nonce) attribute to on inline script and style elements generated by this interface and its child components.\nIf your application is served with a Content Security Policy (CSP) that doesn't include the `script-src: 'unsafe-inline'` or `style-src: 'unsafe-inline'` directives,\nyou should ensure that your application server generates a new nonce on every page load and uses the generated value to set this prop and serve the corresponding CSP response headers\n(i.e., script-src 'nonce-<YOUR_GENERATED_NONCE>' and style-src 'nonce-<YOUR_GENERATED_NONCE>').\nOtherwise you may see console errors such as\n - Refused to execute inline script because it violates the following Content Security Policy directive: [...]\n - Refused to apply inline style because it violates the following Content Security Policy directive: [...]."
            }
          ],
          "tagName": "atomic-recs-interface",
          "events": [],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AtomicRecsInterface",
          "declaration": {
            "name": "AtomicRecsInterface",
            "module": "src/components/recommendations/atomic-recs-interface/atomic-recs-interface.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "atomic-recs-interface",
          "declaration": {
            "name": "AtomicRecsInterface",
            "module": "src/components/recommendations/atomic-recs-interface/atomic-recs-interface.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/recommendations/atomic-recs-list/atomic-recs-list.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "The `atomic-recs-list` component displays recommendations by applying one or more result templates.",
          "name": "AtomicRecsList",
          "cssParts": [
            {
              "description": "The element containing the list of results.",
              "name": "result-list"
            },
            {
              "description": "The parent of the result & the clickable link encompassing it.",
              "name": "result-list-grid-clickable-container"
            },
            {
              "description": "The clickable link encompassing the result.",
              "name": "result-list-grid-clickable"
            },
            {
              "description": "The label of the result list.",
              "name": "label"
            },
            {
              "description": "The previous button.",
              "name": "previous-button"
            },
            {
              "description": "The next button.",
              "name": "next-button"
            },
            {
              "description": "The list of indicators.",
              "name": "indicators"
            },
            {
              "description": "A single indicator.",
              "name": "indicator"
            },
            {
              "description": "The active indicator.",
              "name": "active-indicator"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "bindings",
              "type": {
                "text": "RecsBindings"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "recommendationList",
              "type": {
                "text": "RecommendationList"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "host",
              "type": {
                "text": "HTMLDivElement"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "error",
              "type": {
                "text": "Error"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "recommendationListState",
              "type": {
                "text": "RecommendationListState"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "recommendation",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "'Recommendation'",
              "description": "The Recommendation identifier used by the Coveo platform to retrieve recommended documents.\nMake sure to set a different value for each atomic-recs-list in your page."
            },
            {
              "kind": "field",
              "name": "display",
              "type": {
                "text": "ItemDisplayBasicLayout"
              },
              "privacy": "public",
              "default": "'list'",
              "description": "The layout to apply when displaying results themselves. This does not affect the display of the surrounding list itself.\nTo modify the number of recommendations per column, modify the --atomic-recs-number-of-columns CSS variable."
            },
            {
              "kind": "field",
              "name": "gridCellLinkTarget",
              "type": {
                "text": "ItemTarget"
              },
              "default": "'_self'",
              "description": "The target location to open the result link (see [target](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#target)).\nThis property is only leveraged when `display` is `grid`."
            },
            {
              "kind": "field",
              "name": "density",
              "type": {
                "text": "ItemDisplayDensity"
              },
              "privacy": "public",
              "default": "'normal'",
              "description": "The spacing of various elements in the result list, including the gap between results, the gap between parts of a result, and the font sizes of different parts in a result."
            },
            {
              "kind": "field",
              "name": "imageSize",
              "type": {
                "text": "ItemDisplayImageSize"
              },
              "privacy": "public",
              "default": "'small'",
              "description": "The expected size of the image displayed in the results."
            },
            {
              "kind": "field",
              "name": "numberOfRecommendations",
              "type": {
                "text": "number"
              },
              "privacy": "public",
              "default": "10",
              "description": "The total number of recommendations to display.\nThis does not modify the number of recommendations per column. To do so, modify the --atomic-recs-number-of-columns CSS variable."
            },
            {
              "kind": "field",
              "name": "numberOfRecommendationsPerPage",
              "type": {
                "text": "number | undefined"
              },
              "privacy": "public",
              "description": "The number of recommendations to display, per page.\nSetting a value greater than and lower than the numberOfRecommendations value activates the carousel.\nThis does not affect the display of the list itself, only the number of recommendation pages."
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "public",
              "description": "The non-localized label for the list of recommendations."
            },
            {
              "kind": "field",
              "name": "headingLevel",
              "type": {
                "text": "number"
              },
              "privacy": "public",
              "default": "0",
              "description": "The [heading level](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/Heading_Elements) to use for the heading label, from 1 to 6."
            },
            {
              "kind": "method",
              "name": "watchNumberOfRecommendationsPerPage",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "setRenderFunction",
              "privacy": "public",
              "parameters": [
                {
                  "name": "resultRenderingFunction",
                  "type": {
                    "text": "ItemRenderingFunction"
                  }
                }
              ],
              "description": "Sets a rendering function to bypass the standard HTML template mechanism for rendering results.\nYou can use this function while working with web frameworks that don't use plain HTML syntax, e.g., React, Angular or Vue.\n\nDo not use this method if you integrate Atomic in a plain HTML deployment."
            },
            {
              "kind": "method",
              "name": "previousPage",
              "privacy": "public",
              "description": "Moves to the previous page, when the carousel is activated."
            },
            {
              "kind": "method",
              "name": "nextPage",
              "privacy": "public",
              "description": "Moves to the next page, when the carousel is activated."
            },
            {
              "kind": "method",
              "name": "initialize",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "focusTarget",
              "privacy": "public",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "render",
              "privacy": "public"
            }
          ],
          "attributes": [
            {
              "name": "recommendation",
              "fieldName": "recommendation",
              "type": {
                "text": "string"
              },
              "default": "'Recommendation'",
              "description": "The Recommendation identifier used by the Coveo platform to retrieve recommended documents.\nMake sure to set a different value for each atomic-recs-list in your page."
            },
            {
              "name": "display",
              "fieldName": "display",
              "type": {
                "text": "ItemDisplayBasicLayout"
              },
              "default": "'list'",
              "description": "The layout to apply when displaying results themselves. This does not affect the display of the surrounding list itself.\nTo modify the number of recommendations per column, modify the --atomic-recs-number-of-columns CSS variable."
            },
            {
              "name": "grid-cell-link-target",
              "fieldName": "gridCellLinkTarget",
              "type": {
                "text": "ItemTarget"
              },
              "default": "'_self'",
              "description": "The target location to open the result link (see [target](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#target)).\nThis property is only leveraged when `display` is `grid`."
            },
            {
              "name": "density",
              "fieldName": "density",
              "type": {
                "text": "ItemDisplayDensity"
              },
              "default": "'normal'",
              "description": "The spacing of various elements in the result list, including the gap between results, the gap between parts of a result, and the font sizes of different parts in a result."
            },
            {
              "name": "image-size",
              "fieldName": "imageSize",
              "type": {
                "text": "ItemDisplayImageSize"
              },
              "default": "'small'",
              "description": "The expected size of the image displayed in the results."
            },
            {
              "name": "number-of-recommendations",
              "fieldName": "numberOfRecommendations",
              "type": {
                "text": "number"
              },
              "default": "10",
              "description": "The total number of recommendations to display.\nThis does not modify the number of recommendations per column. To do so, modify the --atomic-recs-number-of-columns CSS variable."
            },
            {
              "name": "number-of-recommendations-per-page",
              "fieldName": "numberOfRecommendationsPerPage",
              "type": {
                "text": "number | undefined"
              },
              "description": "The number of recommendations to display, per page.\nSetting a value greater than and lower than the numberOfRecommendations value activates the carousel.\nThis does not affect the display of the list itself, only the number of recommendation pages."
            },
            {
              "name": "label",
              "fieldName": "label",
              "type": {
                "text": "string | undefined"
              },
              "description": "The non-localized label for the list of recommendations."
            },
            {
              "name": "heading-level",
              "fieldName": "headingLevel",
              "type": {
                "text": "number"
              },
              "default": "0",
              "description": "The [heading level](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/Heading_Elements) to use for the heading label, from 1 to 6."
            }
          ],
          "tagName": "atomic-recs-list",
          "events": [],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AtomicRecsList",
          "declaration": {
            "name": "AtomicRecsList",
            "module": "src/components/recommendations/atomic-recs-list/atomic-recs-list.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "atomic-recs-list",
          "declaration": {
            "name": "AtomicRecsList",
            "module": "src/components/recommendations/atomic-recs-list/atomic-recs-list.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/recommendations/atomic-recs-result/atomic-recs-result.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "The `atomic-recs-result` component is used internally by the `atomic-recs-list` component.",
          "name": "AtomicRecsResult",
          "members": [
            {
              "kind": "field",
              "name": "host",
              "type": {
                "text": "HTMLElement"
              }
            },
            {
              "kind": "field",
              "name": "stopPropagation",
              "type": {
                "text": "boolean | undefined"
              },
              "description": "Whether an atomic-result-link inside atomic-recs-result should stop click event propagation."
            },
            {
              "kind": "field",
              "name": "result",
              "type": {
                "text": "RecsResult"
              },
              "description": "The result item."
            },
            {
              "kind": "field",
              "name": "content",
              "type": {
                "text": "ParentNode | undefined"
              },
              "description": "The result content to display."
            },
            {
              "kind": "field",
              "name": "display",
              "type": {
                "text": "ItemDisplayLayout"
              },
              "default": "'list'",
              "description": "The layout to apply to display results."
            },
            {
              "kind": "field",
              "name": "density",
              "type": {
                "text": "ItemDisplayDensity"
              },
              "default": "'normal'",
              "description": "The size of the results."
            },
            {
              "kind": "field",
              "name": "imageSize",
              "type": {
                "text": "ItemDisplayImageSize"
              },
              "default": "'icon'",
              "description": "The size of the visual section in result list items.\n\nThis is overwritten by the image size defined in the result content, if it exists."
            },
            {
              "kind": "field",
              "name": "classes",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "The classes to add to the result element."
            },
            {
              "kind": "method",
              "name": "resolveResult",
              "privacy": "public",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "ItemContextEvent<RecsResult>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "resolveInteractiveResult",
              "privacy": "public",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "InteractiveItemContextEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "resolveStopPropagation",
              "privacy": "public",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "CustomEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "resolveResultDisplayConfig",
              "privacy": "public",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "ItemContextEvent<DisplayConfig>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "render",
              "privacy": "public"
            }
          ],
          "attributes": [
            {
              "name": "stop-propagation",
              "fieldName": "stopPropagation",
              "type": {
                "text": "boolean | undefined"
              },
              "description": "Whether an atomic-result-link inside atomic-recs-result should stop click event propagation."
            },
            {
              "name": "result",
              "fieldName": "result",
              "type": {
                "text": "RecsResult"
              },
              "description": "The result item."
            },
            {
              "name": "content",
              "fieldName": "content",
              "type": {
                "text": "ParentNode | undefined"
              },
              "description": "The result content to display."
            },
            {
              "name": "display",
              "fieldName": "display",
              "type": {
                "text": "ItemDisplayLayout"
              },
              "default": "'list'",
              "description": "The layout to apply to display results."
            },
            {
              "name": "density",
              "fieldName": "density",
              "type": {
                "text": "ItemDisplayDensity"
              },
              "default": "'normal'",
              "description": "The size of the results."
            },
            {
              "name": "image-size",
              "fieldName": "imageSize",
              "type": {
                "text": "ItemDisplayImageSize"
              },
              "default": "'icon'",
              "description": "The size of the visual section in result list items.\n\nThis is overwritten by the image size defined in the result content, if it exists."
            },
            {
              "name": "classes",
              "fieldName": "classes",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "The classes to add to the result element."
            }
          ],
          "tagName": "atomic-recs-result",
          "events": [],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AtomicRecsResult",
          "declaration": {
            "name": "AtomicRecsResult",
            "module": "src/components/recommendations/atomic-recs-result/atomic-recs-result.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "atomic-recs-result",
          "declaration": {
            "name": "AtomicRecsResult",
            "module": "src/components/recommendations/atomic-recs-result/atomic-recs-result.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/recommendations/atomic-recs-result-template/atomic-recs-result-template.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "A [result template](https://docs.coveo.com/en/atomic/latest/usage/displaying-results#defining-a-result-template) determines the format of the query results, depending on the conditions that are defined for each template.\n\nA `template` element must be the child of an `atomic-recs-result-template`, and an `atomic-recs-list` must be the parent of each `atomic-recs-result-template`.\n\n**Note:** Any `<script>` tags that are defined inside a `<template>` element will not be executed when the results are being rendered.",
          "name": "AtomicRecsResultTemplate",
          "members": [
            {
              "kind": "field",
              "name": "error",
              "type": {
                "text": "Error"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "host",
              "type": {
                "text": "HTMLDivElement"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "matchConditions",
              "type": {
                "text": "RecsResultTemplateCondition[]"
              },
              "privacy": "public",
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "conditions",
              "type": {
                "text": "RecsResultTemplateCondition[]"
              },
              "privacy": "public",
              "default": "[]",
              "description": "A function that must return true on results for the result template to apply.\nSet programmatically before initialization, not via attribute.\n\nFor example, the following targets a template and sets a condition to make it apply only to results whose `title` contains `singapore`:\n`document.querySelector('#target-template').conditions = [(result) => /singapore/i.test(result.title)];`"
            },
            {
              "kind": "field",
              "name": "ifDefined",
              "type": {
                "text": "string | undefined"
              },
              "description": "The field that, when defined on a result item, would allow the template to be applied.\n\nFor example, a template with the following attribute only applies to result items whose `filetype` and `sourcetype` fields are defined: `if-defined=\"filetype,sourcetype\"`"
            },
            {
              "kind": "field",
              "name": "ifNotDefined",
              "type": {
                "text": "string | undefined"
              },
              "description": "The field that, when defined on a result item, would prevent the template from being applied.\n\nFor example, a template with the following attribute only applies to result items whose `filetype` and `sourcetype` fields are NOT defined: `if-not-defined=\"filetype,sourcetype\"`"
            },
            {
              "kind": "field",
              "name": "mustMatch",
              "type": {
                "text": "Record<string, string[]>"
              },
              "privacy": "public",
              "default": "{}",
              "description": "The field and values that define which result items the condition must be applied to.\n\nFor example, a template with the following attribute only applies to result items whose `filetype` is `lithiummessage` or `YouTubePlaylist`: `must-match-filetype=\"lithiummessage,YouTubePlaylist\"`"
            },
            {
              "kind": "field",
              "name": "mustNotMatch",
              "type": {
                "text": "Record<string, string[]>"
              },
              "privacy": "public",
              "default": "{}",
              "description": "The field and values that define which result items the condition must not be applied to.\n\nFor example, a template with the following attribute only applies to result items whose `filetype` is not `lithiummessage`: `must-not-match-filetype=\"lithiummessage\"`"
            },
            {
              "kind": "method",
              "name": "getTemplate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "Promise<RecsResultTemplate<DocumentFragment> | null>"
                }
              },
              "description": "Gets the appropriate result template based on the conditions applied."
            },
            {
              "kind": "method",
              "name": "render",
              "privacy": "public"
            }
          ],
          "attributes": [
            {
              "name": "conditions",
              "fieldName": "conditions",
              "type": {
                "text": "RecsResultTemplateCondition[]"
              },
              "default": "[]",
              "description": "A function that must return true on results for the result template to apply.\nSet programmatically before initialization, not via attribute.\n\nFor example, the following targets a template and sets a condition to make it apply only to results whose `title` contains `singapore`:\n`document.querySelector('#target-template').conditions = [(result) => /singapore/i.test(result.title)];`"
            },
            {
              "name": "if-defined",
              "fieldName": "ifDefined",
              "type": {
                "text": "string | undefined"
              },
              "description": "The field that, when defined on a result item, would allow the template to be applied.\n\nFor example, a template with the following attribute only applies to result items whose `filetype` and `sourcetype` fields are defined: `if-defined=\"filetype,sourcetype\"`"
            },
            {
              "name": "if-not-defined",
              "fieldName": "ifNotDefined",
              "type": {
                "text": "string | undefined"
              },
              "description": "The field that, when defined on a result item, would prevent the template from being applied.\n\nFor example, a template with the following attribute only applies to result items whose `filetype` and `sourcetype` fields are NOT defined: `if-not-defined=\"filetype,sourcetype\"`"
            }
          ],
          "tagName": "atomic-recs-result-template",
          "events": [],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AtomicRecsResultTemplate",
          "declaration": {
            "name": "AtomicRecsResultTemplate",
            "module": "src/components/recommendations/atomic-recs-result-template/atomic-recs-result-template.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "atomic-recs-result-template",
          "declaration": {
            "name": "AtomicRecsResultTemplate",
            "module": "src/components/recommendations/atomic-recs-result-template/atomic-recs-result-template.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/search/atomic-breadbox/atomic-breadbox.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "The `atomic-breadbox` component creates breadcrumbs that display a summary of the currently active facet values.",
          "name": "AtomicBreadbox",
          "cssParts": [
            {
              "description": "The container of the whole component, list & label.",
              "name": "container"
            },
            {
              "description": "The container of the list of breadcrumb buttons.",
              "name": "breadcrumb-list-container"
            },
            {
              "description": "The list of breadcrumb buttons.",
              "name": "breadcrumb-list"
            },
            {
              "description": "A single breadcrumb button.",
              "name": "breadcrumb-button"
            },
            {
              "description": "The breadcrumb label, associated with the facet.",
              "name": "breadcrumb-label"
            },
            {
              "description": "The breadcrumb formatted value.",
              "name": "breadcrumb-value"
            },
            {
              "description": "The button to clear individual filters.",
              "name": "breadcrumb-clear"
            },
            {
              "description": "The button to display all breadcrumbs.",
              "name": "show-more"
            },
            {
              "description": "The button to display less breadcrumbs.",
              "name": "show-less"
            },
            {
              "description": "The \"Filters\" label.",
              "name": "label"
            },
            {
              "description": "The button to clear all filters.",
              "name": "clear"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "bindings",
              "type": {
                "text": "Bindings"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "facetManager",
              "type": {
                "text": "FacetManager"
              }
            },
            {
              "kind": "field",
              "name": "facetManagerState",
              "type": {
                "text": "FacetManagerState"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "error",
              "type": {
                "text": "Error"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "pathLimit",
              "type": {
                "text": "number"
              },
              "privacy": "public",
              "default": "3",
              "description": "This prop allows you to control the display depth\nof the path by specifying the number of parent or ancestor\nbreadcrumbs links relative to the currently selected value.\n\nIf the path size is equal to or less than the pathLimit, all values in\nthe path will be displayed without truncation.\n\nIf the path size exceeds the pathLimit, it will truncate the path by\nreplacing the middle values with ellipses ('...').\n\nMinimum: `1`"
            },
            {
              "kind": "method",
              "name": "initialize",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "render",
              "privacy": "public"
            }
          ],
          "attributes": [
            {
              "name": "path-limit",
              "fieldName": "pathLimit",
              "type": {
                "text": "number"
              },
              "default": "3",
              "description": "This prop allows you to control the display depth\nof the path by specifying the number of parent or ancestor\nbreadcrumbs links relative to the currently selected value.\n\nIf the path size is equal to or less than the pathLimit, all values in\nthe path will be displayed without truncation.\n\nIf the path size exceeds the pathLimit, it will truncate the path by\nreplacing the middle values with ellipses ('...').\n\nMinimum: `1`"
            }
          ],
          "tagName": "atomic-breadbox",
          "events": [],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AtomicBreadbox",
          "declaration": {
            "name": "AtomicBreadbox",
            "module": "src/components/search/atomic-breadbox/atomic-breadbox.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "atomic-breadbox",
          "declaration": {
            "name": "AtomicBreadbox",
            "module": "src/components/search/atomic-breadbox/atomic-breadbox.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/search/atomic-component-error/atomic-component-error.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "The `atomic-component-error` is used by other components to return errors. This doesn't require any configuration.",
          "name": "AtomicComponentError",
          "members": [
            {
              "kind": "field",
              "name": "element",
              "type": {
                "text": "HTMLElement"
              }
            },
            {
              "kind": "field",
              "name": "error",
              "type": {
                "text": "Error"
              }
            },
            {
              "kind": "method",
              "name": "render"
            }
          ],
          "attributes": [
            {
              "name": "element",
              "fieldName": "element",
              "type": {
                "text": "HTMLElement"
              }
            },
            {
              "name": "error",
              "fieldName": "error",
              "type": {
                "text": "Error"
              }
            }
          ],
          "tagName": "atomic-component-error",
          "events": [],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AtomicComponentError",
          "declaration": {
            "name": "AtomicComponentError",
            "module": "src/components/search/atomic-component-error/atomic-component-error.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "atomic-component-error",
          "declaration": {
            "name": "AtomicComponentError",
            "module": "src/components/search/atomic-component-error/atomic-component-error.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/search/atomic-did-you-mean/atomic-did-you-mean.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "The `atomic-did-you-mean` component is responsible for handling query corrections. When a query returns no result but finds a possible query correction, the component either suggests the correction or automatically triggers a new query with the suggested term.",
          "name": "AtomicDidYouMean",
          "cssParts": [
            {
              "description": "The text displayed when there are no results.",
              "name": "no-results"
            },
            {
              "description": "The text displayed for the automatically corrected query.",
              "name": "auto-corrected"
            },
            {
              "description": "The first paragraph of the text displayed when a query trigger changes a query.",
              "name": "showing-results-for"
            },
            {
              "description": "The second paragraph of the text displayed when a query trigger changes a query.",
              "name": "search-instead-for"
            },
            {
              "description": "The text displayed around the button to manually correct a query.",
              "name": "did-you-mean"
            },
            {
              "description": "The button used to manually correct a query.",
              "name": "correction-btn"
            },
            {
              "description": "The button used to undo a query changed by a query trigger.",
              "name": "undo-btn"
            },
            {
              "description": "The query highlights.",
              "name": "highlight"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "bindings",
              "type": {
                "text": "Bindings"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "queryTrigger",
              "type": {
                "text": "QueryTrigger"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "error",
              "type": {
                "text": "Error"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "automaticallyCorrectQuery",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "true",
              "description": "Whether to automatically apply corrections for queries that would otherwise return no results.\nWhen `automaticallyCorrectQuery` is `true`, the component automatically triggers a new query using the suggested term.\nWhen `automaticallyCorrectQuery` is `false`, the component returns the suggested term without triggering a new query.\n\nThe default value is `true`."
            },
            {
              "kind": "field",
              "name": "queryCorrectionMode",
              "type": {
                "text": "'legacy' | 'next'"
              },
              "privacy": "public",
              "default": "'legacy'",
              "description": "Define which query correction system to use\n\n`legacy`: Query correction is powered by the legacy index system. This system relies on an algorithm using solely the index content to compute the suggested terms.\n`next`: Query correction is powered by a machine learning system, requiring a valid query suggestion model configured in your Coveo environment to function properly. This system relies on machine learning algorithms to compute the suggested terms.\n\nDefault value is `legacy`. In the next major version of Atomic, the default value will be `next`."
            },
            {
              "kind": "method",
              "name": "initialize",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "render",
              "privacy": "public"
            }
          ],
          "attributes": [
            {
              "name": "automatically-correct-query",
              "fieldName": "automaticallyCorrectQuery",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "description": "Whether to automatically apply corrections for queries that would otherwise return no results.\nWhen `automaticallyCorrectQuery` is `true`, the component automatically triggers a new query using the suggested term.\nWhen `automaticallyCorrectQuery` is `false`, the component returns the suggested term without triggering a new query.\n\nThe default value is `true`."
            },
            {
              "name": "query-correction-mode",
              "fieldName": "queryCorrectionMode",
              "type": {
                "text": "'legacy' | 'next'"
              },
              "default": "'legacy'",
              "description": "Define which query correction system to use\n\n`legacy`: Query correction is powered by the legacy index system. This system relies on an algorithm using solely the index content to compute the suggested terms.\n`next`: Query correction is powered by a machine learning system, requiring a valid query suggestion model configured in your Coveo environment to function properly. This system relies on machine learning algorithms to compute the suggested terms.\n\nDefault value is `legacy`. In the next major version of Atomic, the default value will be `next`."
            }
          ],
          "tagName": "atomic-did-you-mean",
          "events": [],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AtomicDidYouMean",
          "declaration": {
            "name": "AtomicDidYouMean",
            "module": "src/components/search/atomic-did-you-mean/atomic-did-you-mean.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "atomic-did-you-mean",
          "declaration": {
            "name": "AtomicDidYouMean",
            "module": "src/components/search/atomic-did-you-mean/atomic-did-you-mean.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/search/atomic-external/atomic-external.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "The `atomic-external` component allows components defined outside of the `atomic-search-interface` to initialize.",
          "name": "AtomicExternal",
          "members": [
            {
              "kind": "field",
              "name": "selector",
              "type": {
                "text": "string"
              },
              "default": "'atomic-search-interface'",
              "description": "The CSS selector that identifies the `atomic-search-interface` component with which to initialize the external components."
            },
            {
              "kind": "method",
              "name": "handleInitialization",
              "privacy": "public",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "InitializeEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleScrollToTop",
              "privacy": "public",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "CustomEvent"
                  }
                }
              ]
            }
          ],
          "attributes": [
            {
              "name": "selector",
              "fieldName": "selector",
              "type": {
                "text": "string"
              },
              "default": "'atomic-search-interface'",
              "description": "The CSS selector that identifies the `atomic-search-interface` component with which to initialize the external components."
            }
          ],
          "tagName": "atomic-external",
          "events": [],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AtomicExternal",
          "declaration": {
            "name": "AtomicExternal",
            "module": "src/components/search/atomic-external/atomic-external.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "atomic-external",
          "declaration": {
            "name": "AtomicExternal",
            "module": "src/components/search/atomic-external/atomic-external.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/search/atomic-facet-manager/atomic-facet-manager.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "The `atomic-facet-manager` helps reorder facets and their values to match the most recent search response with the most relevant results. A facet component is slotted within an `atomic-facet-manager` to leverage this functionality.",
          "name": "AtomicFacetManager",
          "members": [
            {
              "kind": "field",
              "name": "bindings",
              "type": {
                "text": "Bindings"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "facetManagerState",
              "type": {
                "text": "FacetManagerState"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "error",
              "type": {
                "text": "Error"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "collapseFacetsAfter",
              "type": {
                "text": "number"
              },
              "privacy": "public",
              "default": "4",
              "description": "The number of expanded facets inside the manager.\nRemaining facets are automatically collapsed.\n\nUsing the value `0` collapses all facets.\nUsing the value `-1` disables the feature and keeps all facets expanded. Useful when you want to set the collapse state for each facet individually."
            },
            {
              "kind": "method",
              "name": "initialize",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "render",
              "privacy": "public"
            }
          ],
          "attributes": [
            {
              "name": "collapse-facets-after",
              "fieldName": "collapseFacetsAfter",
              "type": {
                "text": "number"
              },
              "default": "4",
              "description": "The number of expanded facets inside the manager.\nRemaining facets are automatically collapsed.\n\nUsing the value `0` collapses all facets.\nUsing the value `-1` disables the feature and keeps all facets expanded. Useful when you want to set the collapse state for each facet individually."
            }
          ],
          "tagName": "atomic-facet-manager",
          "events": [],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AtomicFacetManager",
          "declaration": {
            "name": "AtomicFacetManager",
            "module": "src/components/search/atomic-facet-manager/atomic-facet-manager.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "atomic-facet-manager",
          "declaration": {
            "name": "AtomicFacetManager",
            "module": "src/components/search/atomic-facet-manager/atomic-facet-manager.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/search/atomic-frequently-bought-together/atomic-frequently-bought-together.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "The `atomic-frequently-bought-together` component suggests products frequently bought with the current product based on the shopping cart of other users.",
          "name": "AtomicProductRecommendations",
          "members": [
            {
              "kind": "field",
              "name": "state",
              "type": {
                "text": "FrequentlyBoughtTogetherListState"
              }
            },
            {
              "kind": "method",
              "name": "render",
              "privacy": "public"
            }
          ],
          "tagName": "atomic-frequently-bought-together",
          "events": [],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AtomicProductRecommendations",
          "declaration": {
            "name": "AtomicProductRecommendations",
            "module": "src/components/search/atomic-frequently-bought-together/atomic-frequently-bought-together.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "atomic-frequently-bought-together",
          "declaration": {
            "name": "AtomicProductRecommendations",
            "module": "src/components/search/atomic-frequently-bought-together/atomic-frequently-bought-together.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/search/atomic-generated-answer/atomic-generated-answer.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "The `atomic-generated-answer` component uses Coveo Machine Learning (Coveo ML) models to automatically generate an answer to a query executed by the user.\nFor more information, see [About Relevance Generative Answering (RGA)](https://docs.coveo.com/en/n9de0370/)",
          "name": "AtomicGeneratedAnswer",
          "cssParts": [
            {
              "description": "The container displaying the generated answer.",
              "name": "container"
            },
            {
              "description": "The header of the generated answer container.",
              "name": "header-label"
            },
            {
              "description": "The \"like\" and \"dislike\" buttons.",
              "name": "feedback-button"
            },
            {
              "description": "The switch to toggle the visibility of the generated answer.",
              "name": "toggle"
            },
            {
              "description": "The \"Copy answer\" button.",
              "name": "copy-button"
            },
            {
              "description": "The container for the \"retry\" section.",
              "name": "retry-container"
            },
            {
              "description": "The text of the generated answer.",
              "name": "generated-text"
            },
            {
              "description": "The header of the citations list.",
              "name": "citations-label"
            },
            {
              "description": "The header of the rephrase options.",
              "name": "rephrase-label"
            },
            {
              "description": "The container of the rephrase buttons section.",
              "name": "rephrase-buttons"
            },
            {
              "description": "The button for each of the rephrase options (step-by-step instructions, bulleted list, and summary).",
              "name": "rephrase-button"
            },
            {
              "description": "The container of the rephrase buttons.",
              "name": "rephrase-buttons-container"
            },
            {
              "description": "The label of the rephrase button.",
              "name": "rephrase-button-label"
            },
            {
              "description": "The generated answer multi-line code blocks.",
              "name": "answer-code-block"
            },
            {
              "description": "The generated answer emphasized text elements.",
              "name": "answer-emphasis"
            },
            {
              "description": "The generated answer inline code elements.",
              "name": "answer-inline-code"
            },
            {
              "description": "The generated answer level 1 heading elements.",
              "name": "answer-heading-1"
            },
            {
              "description": "The generated answer level 2 heading elements.",
              "name": "answer-heading-2"
            },
            {
              "description": "The generated answer level 3 heading elements.",
              "name": "answer-heading-3"
            },
            {
              "description": "The generated answer level 4 heading elements.",
              "name": "answer-heading-4"
            },
            {
              "description": "The generated answer level 5 heading elements.",
              "name": "answer-heading-5"
            },
            {
              "description": "The generated answer level 6 heading elements.",
              "name": "answer-heading-6"
            },
            {
              "description": "The generated answer list item elements for both ordered and unordered lists.",
              "name": "answer-list-item"
            },
            {
              "description": "The generated answer ordered list elements.",
              "name": "answer-ordered-list"
            },
            {
              "description": "The generated answer paragraph elements.",
              "name": "answer-paragraph"
            },
            {
              "description": "The generated answer quote block elements.",
              "name": "answer-quote-block"
            },
            {
              "description": "The generated answer unordered list elements.",
              "name": "answer-unordered-list"
            },
            {
              "description": "The generated answer strong text elements.",
              "name": "answer-strong"
            },
            {
              "description": "The generated answer table elements.",
              "name": "answer-table"
            },
            {
              "description": "The generated answer table container elements.",
              "name": "answer-table-container"
            },
            {
              "description": "The generated answer table content cell elements.",
              "name": "answer-table-content"
            },
            {
              "description": "The generated answer table header cell elements.",
              "name": "answer-table-header"
            },
            {
              "description": "The link that allows the user to navigate to the item.",
              "name": "citation"
            },
            {
              "description": "The pop-up that shows an item preview when the user hovers over the citation.",
              "name": "citation-popover"
            },
            {
              "description": "The content of the citation item.",
              "name": "citation-index"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "bindings",
              "type": {
                "text": "Bindings"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "generatedAnswer",
              "type": {
                "text": "GeneratedAnswer"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "searchStatus",
              "type": {
                "text": "SearchStatus"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "error",
              "type": {
                "text": "Error"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "copied",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "copyError",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "answerStyle",
              "type": {
                "text": "GeneratedAnswerStyle"
              },
              "default": "'default'",
              "description": "The answer style to apply when the component first loads.\nOptions:\n  - `default`: Generate the answer without specific formatting instructions.\n  - `bullet`: Generate the answer as a bulleted list.\n  - `step`: Generate the answer as step-by-step instructions.\n  - `concise`: Generate the answer as briefly as possible."
            },
            {
              "kind": "field",
              "name": "withToggle",
              "type": {
                "text": "boolean | undefined"
              },
              "description": "Whether to render a toggle button that lets the user hide or show the answer."
            },
            {
              "kind": "field",
              "name": "collapsible",
              "type": {
                "text": "boolean | undefined"
              },
              "description": "Whether to allow the answer to be collapsed when the text is taller than 250px."
            },
            {
              "kind": "field",
              "name": "ariaMessage",
              "type": {
                "text": "string"
              },
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "initialize",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "updateAnswerCollapsed",
              "privacy": "public",
              "parameters": [
                {
                  "name": "newState",
                  "type": {
                    "text": "GeneratedAnswerState"
                  }
                },
                {
                  "name": "oldState",
                  "type": {
                    "text": "GeneratedAnswerState"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "render",
              "privacy": "public"
            }
          ],
          "attributes": [
            {
              "name": "answer-style",
              "fieldName": "answerStyle",
              "type": {
                "text": "GeneratedAnswerStyle"
              },
              "default": "'default'",
              "description": "The answer style to apply when the component first loads.\nOptions:\n  - `default`: Generate the answer without specific formatting instructions.\n  - `bullet`: Generate the answer as a bulleted list.\n  - `step`: Generate the answer as step-by-step instructions.\n  - `concise`: Generate the answer as briefly as possible."
            },
            {
              "name": "with-toggle",
              "fieldName": "withToggle",
              "type": {
                "text": "boolean | undefined"
              },
              "description": "Whether to render a toggle button that lets the user hide or show the answer."
            },
            {
              "name": "collapsible",
              "fieldName": "collapsible",
              "type": {
                "text": "boolean | undefined"
              },
              "description": "Whether to allow the answer to be collapsed when the text is taller than 250px."
            }
          ],
          "tagName": "atomic-generated-answer",
          "events": [],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AtomicGeneratedAnswer",
          "declaration": {
            "name": "AtomicGeneratedAnswer",
            "module": "src/components/search/atomic-generated-answer/atomic-generated-answer.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "atomic-generated-answer",
          "declaration": {
            "name": "AtomicGeneratedAnswer",
            "module": "src/components/search/atomic-generated-answer/atomic-generated-answer.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/search/atomic-html/atomic-html.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "The `atomic-html` component renders the HTML value of a string.\n\nThere is an inherent XSS security concern associated with the usage of this component.\n\nUse only with values for which you are certain the content is harmless.",
          "name": "AtomicHtml",
          "members": [
            {
              "kind": "field",
              "name": "bindings",
              "type": {
                "text": "Bindings"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "error",
              "type": {
                "text": "Error"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "description": "The string value containing HTML to display;"
            },
            {
              "kind": "field",
              "name": "sanitize",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "true",
              "description": "Specify if the content should be sanitized, using [`DOMPurify`](https://www.npmjs.com/package/dompurify)."
            },
            {
              "kind": "method",
              "name": "render",
              "privacy": "public"
            }
          ],
          "attributes": [
            {
              "name": "value",
              "fieldName": "value",
              "type": {
                "text": "string"
              },
              "description": "The string value containing HTML to display;"
            },
            {
              "name": "sanitize",
              "fieldName": "sanitize",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "description": "Specify if the content should be sanitized, using [`DOMPurify`](https://www.npmjs.com/package/dompurify)."
            }
          ],
          "tagName": "atomic-html",
          "events": [],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AtomicHtml",
          "declaration": {
            "name": "AtomicHtml",
            "module": "src/components/search/atomic-html/atomic-html.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "atomic-html",
          "declaration": {
            "name": "AtomicHtml",
            "module": "src/components/search/atomic-html/atomic-html.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/search/atomic-layout/atomic-search-layout.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "The `atomic-search-layout` helps organize elements in the page.",
          "name": "AtomicSearchLayout",
          "members": [
            {
              "kind": "field",
              "name": "error",
              "type": {
                "text": "Error"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "mobileBreakpoint",
              "privacy": "public",
              "default": "DEFAULT_MOBILE_BREAKPOINT",
              "description": "CSS value that defines where the layout goes from mobile to desktop.\ne.g., 800px, 65rem."
            },
            {
              "kind": "field",
              "name": "bindings",
              "type": {
                "text": "Bindings"
              },
              "privacy": "public"
            }
          ],
          "attributes": [
            {
              "name": "mobile-breakpoint",
              "fieldName": "mobileBreakpoint",
              "default": "DEFAULT_MOBILE_BREAKPOINT",
              "description": "CSS value that defines where the layout goes from mobile to desktop.\ne.g., 800px, 65rem."
            }
          ],
          "tagName": "atomic-search-layout",
          "events": [],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AtomicSearchLayout",
          "declaration": {
            "name": "AtomicSearchLayout",
            "module": "src/components/search/atomic-layout/atomic-search-layout.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "atomic-search-layout",
          "declaration": {
            "name": "AtomicSearchLayout",
            "module": "src/components/search/atomic-layout/atomic-search-layout.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/search/atomic-load-more-children-results/atomic-load-more-children-results.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "The `atomic-load-more-children-results` component allows to load the full collection for a folded result.",
          "name": "AtomicLoadMoreChildrenResults",
          "cssParts": [
            {
              "description": "The button used to load more results.",
              "name": "button"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "bindings",
              "type": {
                "text": "Bindings"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "result",
              "type": {
                "text": "Result"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "error",
              "type": {
                "text": "Error"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "host",
              "type": {
                "text": "HTMLElement"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "'load-all-results'",
              "description": "The non-localized label for the button used to load more results."
            },
            {
              "kind": "method",
              "name": "render",
              "privacy": "public"
            }
          ],
          "attributes": [
            {
              "name": "label",
              "fieldName": "label",
              "type": {
                "text": "string"
              },
              "default": "'load-all-results'",
              "description": "The non-localized label for the button used to load more results."
            }
          ],
          "tagName": "atomic-load-more-children-results",
          "events": [],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AtomicLoadMoreChildrenResults",
          "declaration": {
            "name": "AtomicLoadMoreChildrenResults",
            "module": "src/components/search/atomic-load-more-children-results/atomic-load-more-children-results.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "atomic-load-more-children-results",
          "declaration": {
            "name": "AtomicLoadMoreChildrenResults",
            "module": "src/components/search/atomic-load-more-children-results/atomic-load-more-children-results.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/search/atomic-load-more-results/atomic-load-more-results.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "The `atomic-load-more-results` component allows the user to load additional results if more are available.",
          "name": "AtomicLoadMoreResults",
          "cssParts": [
            {
              "description": "The container of the component.",
              "name": "container"
            },
            {
              "description": "The summary displaying which results are shown and how many are available.",
              "name": "showing-results"
            },
            {
              "description": "The highlighted number of results displayed and number of results available.",
              "name": "highlight"
            },
            {
              "description": "The progress bar displaying a percentage of results shown over the total number of results available.",
              "name": "progress-bar"
            },
            {
              "description": "The \"Load more results\" button.",
              "name": "load-more-results-button"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "bindings",
              "type": {
                "text": "Bindings"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "querySummary",
              "type": {
                "text": "QuerySummary"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "resultList",
              "type": {
                "text": "ResultList"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "error",
              "type": {
                "text": "Error"
              },
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "initialize",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "render",
              "privacy": "public"
            }
          ],
          "tagName": "atomic-load-more-results",
          "events": [],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AtomicLoadMoreResults",
          "declaration": {
            "name": "AtomicLoadMoreResults",
            "module": "src/components/search/atomic-load-more-results/atomic-load-more-results.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "atomic-load-more-results",
          "declaration": {
            "name": "AtomicLoadMoreResults",
            "module": "src/components/search/atomic-load-more-results/atomic-load-more-results.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/search/atomic-no-results/atomic-no-results.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "The `atomic-no-results` component displays search tips and a \"Cancel last action\" button when there are no results. Any additional content slotted inside of its element will be displayed as well.",
          "name": "AtomicNoResults",
          "cssParts": [
            {
              "description": "The \"Cancel last action\" button.",
              "name": "cancel-button"
            },
            {
              "description": "The text indicating that no results were found for the search.",
              "name": "no-results"
            },
            {
              "description": "The search tips to help the user correct the query.",
              "name": "search-tips"
            },
            {
              "description": "The highlighted query.",
              "name": "highlight"
            },
            {
              "description": "The magnifying glass icon.",
              "name": "icon"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "bindings",
              "type": {
                "text": "Bindings"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "searchStatus",
              "type": {
                "text": "SearchStatus"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "history",
              "type": {
                "text": "HistoryManager"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "querySummary",
              "type": {
                "text": "QuerySummary"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "error",
              "type": {
                "text": "Error"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "ariaMessage",
              "type": {
                "text": "string"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "enableCancelLastAction",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "description": "Whether to display a button which cancels the last available action."
            },
            {
              "kind": "method",
              "name": "initialize",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "render",
              "privacy": "public"
            }
          ],
          "attributes": [
            {
              "name": "enable-cancel-last-action",
              "fieldName": "enableCancelLastAction",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "description": "Whether to display a button which cancels the last available action."
            }
          ],
          "tagName": "atomic-no-results",
          "events": [],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AtomicNoResults",
          "declaration": {
            "name": "AtomicNoResults",
            "module": "src/components/search/atomic-no-results/atomic-no-results.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "atomic-no-results",
          "declaration": {
            "name": "AtomicNoResults",
            "module": "src/components/search/atomic-no-results/atomic-no-results.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/search/atomic-notification/atomic-notifications.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "The `atomic-notifications` component is responsible for displaying notifications generated by the Coveo Search API (see [Trigger](https://docs.coveo.com/en/1458)).",
          "name": "AtomicNotifyTrigger",
          "cssParts": [
            {
              "description": "The wrapper around the notifications.",
              "name": "notifications"
            },
            {
              "description": "The wrapper around a single notification.",
              "name": "notification"
            },
            {
              "description": "The icon of the notification.",
              "name": "icon"
            },
            {
              "description": "The text of the notification.",
              "name": "text"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "bindings",
              "type": {
                "text": "Bindings"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "notifyTrigger",
              "type": {
                "text": "NotifyTrigger"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "error",
              "type": {
                "text": "Error"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "ariaMessage",
              "type": {
                "text": "string"
              }
            },
            {
              "kind": "field",
              "name": "headingLevel",
              "type": {
                "text": "number"
              },
              "privacy": "public",
              "default": "0",
              "description": "The [heading level](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/Heading_Elements) to use above the notifications, from 1 to 6."
            },
            {
              "kind": "field",
              "name": "icon",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "public",
              "description": "Specifies an icon to display at the left-end of a notification.\n\n- Use a value that starts with `http://`, `https://`, `./`, or `../`, to fetch and display an icon from a given location.\n- Use a value that starts with `assets://`, to display an icon from the Atomic package.\n- Use a stringified SVG to display it directly"
            },
            {
              "kind": "method",
              "name": "initialize",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "generateAriaMessage",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "renderNotification",
              "privacy": "public",
              "parameters": [
                {
                  "name": "text",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "renderNotifications",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "render",
              "privacy": "public"
            }
          ],
          "attributes": [
            {
              "name": "heading-level",
              "fieldName": "headingLevel",
              "type": {
                "text": "number"
              },
              "default": "0",
              "description": "The [heading level](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/Heading_Elements) to use above the notifications, from 1 to 6."
            },
            {
              "name": "icon",
              "fieldName": "icon",
              "type": {
                "text": "string | undefined"
              },
              "description": "Specifies an icon to display at the left-end of a notification.\n\n- Use a value that starts with `http://`, `https://`, `./`, or `../`, to fetch and display an icon from a given location.\n- Use a value that starts with `assets://`, to display an icon from the Atomic package.\n- Use a stringified SVG to display it directly"
            }
          ],
          "tagName": "atomic-notifications",
          "events": [],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AtomicNotifyTrigger",
          "declaration": {
            "name": "AtomicNotifyTrigger",
            "module": "src/components/search/atomic-notification/atomic-notifications.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "atomic-notifications",
          "declaration": {
            "name": "AtomicNotifyTrigger",
            "module": "src/components/search/atomic-notification/atomic-notifications.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/search/atomic-pager/atomic-pager.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "The `atomic-pager` provides buttons that allow the end user to navigate through the different result pages.",
          "name": "AtomicPager",
          "cssParts": [
            {
              "description": "The list of the next/previous buttons and page-buttons.",
              "name": "buttons"
            },
            {
              "description": "The list of page buttons.",
              "name": "page-buttons"
            },
            {
              "description": "The page button.",
              "name": "page-button"
            },
            {
              "description": "The active page button.",
              "name": "active-page-button"
            },
            {
              "description": "The previous button.",
              "name": "previous-button"
            },
            {
              "description": "The next button.",
              "name": "next-button"
            },
            {
              "description": "Icon of the previous button.",
              "name": "previous-button-icon"
            },
            {
              "description": "Icon of the next button.",
              "name": "next-button-icon"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "bindings",
              "type": {
                "text": "Bindings"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "pager",
              "type": {
                "text": "Pager"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "searchStatus",
              "type": {
                "text": "SearchStatus"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "pagerState",
              "type": {
                "text": "PagerState"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "searchStatusState",
              "type": {
                "text": "SearchStatusState"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "error",
              "type": {
                "text": "Error"
              }
            },
            {
              "kind": "field",
              "name": "numberOfPages",
              "type": {
                "text": "number"
              },
              "default": "5",
              "description": "Specifies how many page buttons to display in the pager."
            },
            {
              "kind": "field",
              "name": "previousButtonIcon",
              "default": "ArrowLeftIcon",
              "description": "The SVG icon to use to display the Previous button.\n\n- Use a value that starts with `http://`, `https://`, `./`, or `../`, to fetch and display an icon from a given location.\n- Use a value that starts with `assets://`, to display an icon from the Atomic package.\n- Use a stringified SVG to display it directly."
            },
            {
              "kind": "field",
              "name": "nextButtonIcon",
              "default": "ArrowRightIcon",
              "description": "The SVG icon to use to display the Next button.\n\n- Use a value that starts with `http://`, `https://`, `./`, or `../`, to fetch and display an icon from a given location.\n- Use a value that starts with `assets://`, to display an icon from the Atomic package.\n- Use a stringified SVG to display it directly."
            },
            {
              "kind": "method",
              "name": "initialize",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "render",
              "privacy": "public"
            }
          ],
          "attributes": [
            {
              "name": "number-of-pages",
              "fieldName": "numberOfPages",
              "type": {
                "text": "number"
              },
              "default": "5",
              "description": "Specifies how many page buttons to display in the pager."
            },
            {
              "name": "previous-button-icon",
              "fieldName": "previousButtonIcon",
              "default": "ArrowLeftIcon",
              "description": "The SVG icon to use to display the Previous button.\n\n- Use a value that starts with `http://`, `https://`, `./`, or `../`, to fetch and display an icon from a given location.\n- Use a value that starts with `assets://`, to display an icon from the Atomic package.\n- Use a stringified SVG to display it directly."
            },
            {
              "name": "next-button-icon",
              "fieldName": "nextButtonIcon",
              "default": "ArrowRightIcon",
              "description": "The SVG icon to use to display the Next button.\n\n- Use a value that starts with `http://`, `https://`, `./`, or `../`, to fetch and display an icon from a given location.\n- Use a value that starts with `assets://`, to display an icon from the Atomic package.\n- Use a stringified SVG to display it directly."
            }
          ],
          "tagName": "atomic-pager",
          "events": [
            {
              "name": "atomic/scrollToTop",
              "type": {
                "text": "EventEmitter"
              }
            }
          ],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AtomicPager",
          "declaration": {
            "name": "AtomicPager",
            "module": "src/components/search/atomic-pager/atomic-pager.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "atomic-pager",
          "declaration": {
            "name": "AtomicPager",
            "module": "src/components/search/atomic-pager/atomic-pager.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/search/atomic-query-error/atomic-query-error.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "The `atomic-query-error` component handles fatal errors when performing a query on the index or Search API. When the error is known, it displays a link to relevant documentation link for debugging purposes. When the error is unknown, it displays a small text area with the JSON content of the error.",
          "name": "AtomicQueryError",
          "cssParts": [
            {
              "description": "The svg related to the error.",
              "name": "icon"
            },
            {
              "description": "The title of the error.",
              "name": "title"
            },
            {
              "description": "A description of the error.",
              "name": "description"
            },
            {
              "description": "A link to the relevant documentation.",
              "name": "doc-link"
            },
            {
              "description": "A button to request additional error information.",
              "name": "more-info-btn"
            },
            {
              "description": "Additional error information.",
              "name": "error-info"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "bindings",
              "type": {
                "text": "Bindings"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "queryError",
              "type": {
                "text": "QueryError"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "error",
              "type": {
                "text": "Error"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "showMoreInfo",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "ariaMessage",
              "type": {
                "text": "string"
              },
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "initialize",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "render",
              "privacy": "public"
            }
          ],
          "tagName": "atomic-query-error",
          "events": [],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AtomicQueryError",
          "declaration": {
            "name": "AtomicQueryError",
            "module": "src/components/search/atomic-query-error/atomic-query-error.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "atomic-query-error",
          "declaration": {
            "name": "AtomicQueryError",
            "module": "src/components/search/atomic-query-error/atomic-query-error.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/search/atomic-query-summary/atomic-query-summary.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "The `atomic-query-summary` component displays information about the current range of results and the request duration (e.g., \"Results 1-10 of 123 in 0.47 seconds\").",
          "name": "AtomicQuerySummary",
          "cssParts": [
            {
              "description": "The container for the whole summary.",
              "name": "container"
            },
            {
              "description": "The container for the results.",
              "name": "results"
            },
            {
              "description": "The container for the duration.",
              "name": "duration"
            },
            {
              "description": "The summary highlights.",
              "name": "highlight"
            },
            {
              "description": "The summary highlighted query.",
              "name": "query"
            },
            {
              "description": "The query summary placeholder used while the search interface is initializing.",
              "name": "placeholder"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "bindings",
              "type": {
                "text": "Bindings"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "querySummary",
              "type": {
                "text": "QuerySummary"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "error",
              "type": {
                "text": "Error"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "ariaMessage",
              "type": {
                "text": "string"
              },
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "initialize",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "render",
              "privacy": "public"
            }
          ],
          "tagName": "atomic-query-summary",
          "events": [],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AtomicQuerySummary",
          "declaration": {
            "name": "AtomicQuerySummary",
            "module": "src/components/search/atomic-query-summary/atomic-query-summary.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "atomic-query-summary",
          "declaration": {
            "name": "AtomicQuerySummary",
            "module": "src/components/search/atomic-query-summary/atomic-query-summary.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/search/atomic-refine-modal/atomic-refine-modal.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "The `atomic-refine-modal` is automatically created as a child of the `atomic-search-interface` when the `atomic-refine-toggle` is initialized.\n\nWhen the modal is opened, the class `atomic-modal-opened` is added to the interface element and the body, allowing further customization.",
          "name": "AtomicRefineModal",
          "cssParts": [
            {
              "description": "The modal's outermost container.",
              "name": "container"
            },
            {
              "description": "The wrapper around the header.",
              "name": "header-wrapper"
            },
            {
              "description": "The header of the modal, containing the title.",
              "name": "header"
            },
            {
              "description": "The title of the modal.",
              "name": "title"
            },
            {
              "description": "The button in the header that closes the modal.",
              "name": "close-button"
            },
            {
              "description": "The icon of the close button.",
              "name": "close-icon"
            },
            {
              "description": "The horizontal ruler underneath the header.",
              "name": "header-ruler"
            },
            {
              "description": "The wrapper around the body.",
              "name": "body-wrapper"
            },
            {
              "description": "The body of the modal, between the header and the footer.",
              "name": "body"
            },
            {
              "description": "The wrapper around the content inside the body of the modal.",
              "name": "content"
            },
            {
              "description": "The title for each section.",
              "name": "section-title"
            },
            {
              "description": "The title for the sort section.",
              "name": "section-sort-title"
            },
            {
              "description": "The title for the filters section.",
              "name": "section-filters-title"
            },
            {
              "description": "The wrapper around the select element, used to position the icon.",
              "name": "select-wrapper"
            },
            {
              "description": "The `<select>` element of the dropdown list.",
              "name": "select"
            },
            {
              "description": "The wrapper around the sort icon that's used to align it.",
              "name": "select-icon-wrapper"
            },
            {
              "description": "The select dropdown's sort icon.",
              "name": "select-icon"
            },
            {
              "description": "The section containing facets and the \"filters\" title.",
              "name": "filter-section"
            },
            {
              "description": "The button that resets all actively selected facet values.",
              "name": "filter-clear-all"
            },
            {
              "description": "The wrapper with a shadow or background color around the footer.",
              "name": "footer-wrapper"
            },
            {
              "description": "The footer of the modal.",
              "name": "footer"
            },
            {
              "description": "The wrapper around the content inside the footer of the modal, containing the button to view results.",
              "name": "footer-content"
            },
            {
              "description": "The button in the footer that closes the modal.",
              "name": "footer-button"
            },
            {
              "description": "The text inside the button in the footer that closes the modal.",
              "name": "footer-button-text"
            },
            {
              "description": "The count inside the button in the footer that closes the modal.",
              "name": "footer-button-count"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "querySummary",
              "type": {
                "text": "QuerySummary"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "searchStatus",
              "type": {
                "text": "SearchStatus"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "facetManager",
              "type": {
                "text": "FacetManager"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "bindings",
              "type": {
                "text": "Bindings"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "host",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "querySummaryState",
              "type": {
                "text": "QuerySummaryState"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "facetManagerState",
              "type": {
                "text": "FacetManagerState"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "sortState",
              "type": {
                "text": "SortState"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "error",
              "type": {
                "text": "Error"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "openButton",
              "type": {
                "text": "HTMLElement | undefined"
              }
            },
            {
              "kind": "field",
              "name": "isOpen",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "collapseFacetsAfter",
              "type": {
                "text": "number"
              },
              "privacy": "public",
              "default": "0",
              "description": "The number of expanded facets inside the refine modal.\nRemaining facets are automatically collapsed.\n\nUsing the value `0` collapses all facets."
            },
            {
              "kind": "method",
              "name": "watchEnabled",
              "parameters": [
                {
                  "name": "isOpen",
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "initialize",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "render",
              "privacy": "public"
            }
          ],
          "attributes": [
            {
              "name": "open-button",
              "fieldName": "openButton",
              "type": {
                "text": "HTMLElement | undefined"
              }
            },
            {
              "name": "is-open",
              "fieldName": "isOpen",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "name": "collapse-facets-after",
              "fieldName": "collapseFacetsAfter",
              "type": {
                "text": "number"
              },
              "default": "0",
              "description": "The number of expanded facets inside the refine modal.\nRemaining facets are automatically collapsed.\n\nUsing the value `0` collapses all facets."
            }
          ],
          "tagName": "atomic-refine-modal",
          "events": [],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AtomicRefineModal",
          "declaration": {
            "name": "AtomicRefineModal",
            "module": "src/components/search/atomic-refine-modal/atomic-refine-modal.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "atomic-refine-modal",
          "declaration": {
            "name": "AtomicRefineModal",
            "module": "src/components/search/atomic-refine-modal/atomic-refine-modal.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/search/atomic-refine-toggle/atomic-refine-toggle.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "The `atomic-refine-toggle` component displays a button that opens a modal containing the facets and the sort components.\n\nWhen this component is added to the `atomic-search-interface`, an `atomic-refine-modal` component is automatically created.",
          "name": "AtomicRefineToggle",
          "cssParts": [
            {
              "description": "The refine toggle button.",
              "name": "button"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "host",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "searchStatus",
              "type": {
                "text": "SearchStatus"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "bindings",
              "type": {
                "text": "Bindings"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "error",
              "type": {
                "text": "Error"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "collapseFacetsAfter",
              "type": {
                "text": "number"
              },
              "privacy": "public",
              "default": "0",
              "description": "The number of expanded facets inside the refine modal.\nRemaining facets are automatically collapsed.\n\nUsing the value `0` collapses all facets."
            },
            {
              "kind": "method",
              "name": "initialize",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "render",
              "privacy": "public"
            }
          ],
          "attributes": [
            {
              "name": "collapse-facets-after",
              "fieldName": "collapseFacetsAfter",
              "type": {
                "text": "number"
              },
              "default": "0",
              "description": "The number of expanded facets inside the refine modal.\nRemaining facets are automatically collapsed.\n\nUsing the value `0` collapses all facets."
            }
          ],
          "tagName": "atomic-refine-toggle",
          "events": [],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AtomicRefineToggle",
          "declaration": {
            "name": "AtomicRefineToggle",
            "module": "src/components/search/atomic-refine-toggle/atomic-refine-toggle.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "atomic-refine-toggle",
          "declaration": {
            "name": "AtomicRefineToggle",
            "module": "src/components/search/atomic-refine-toggle/atomic-refine-toggle.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/search/atomic-relevance-inspector/atomic-relevance-inspector.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "The `atomic-relevance-inspector` component is used internally to offer insight on search page relevance, as well as information to help troubleshoot issues during development.",
          "name": "AtomicRelevanceInspector",
          "members": [
            {
              "kind": "field",
              "name": "bindings",
              "type": {
                "text": "Bindings"
              },
              "description": "The Atomic interface bindings, namely the headless search engine and i18n instances."
            },
            {
              "kind": "field",
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "method",
              "name": "render",
              "privacy": "public"
            }
          ],
          "attributes": [
            {
              "name": "bindings",
              "fieldName": "bindings",
              "type": {
                "text": "Bindings"
              },
              "description": "The Atomic interface bindings, namely the headless search engine and i18n instances."
            },
            {
              "name": "open",
              "fieldName": "open",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            }
          ],
          "tagName": "atomic-relevance-inspector",
          "events": [
            {
              "name": "atomic/relevanceInspector/close",
              "type": {
                "text": "EventEmitter<null> | undefined"
              }
            }
          ],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AtomicRelevanceInspector",
          "declaration": {
            "name": "AtomicRelevanceInspector",
            "module": "src/components/search/atomic-relevance-inspector/atomic-relevance-inspector.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "atomic-relevance-inspector",
          "declaration": {
            "name": "AtomicRelevanceInspector",
            "module": "src/components/search/atomic-relevance-inspector/atomic-relevance-inspector.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/search/atomic-result/atomic-result.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "The `atomic-result` component is used internally by the `atomic-result-list` component.",
          "name": "AtomicResult",
          "members": [
            {
              "kind": "field",
              "name": "host",
              "type": {
                "text": "HTMLElement"
              }
            },
            {
              "kind": "field",
              "name": "stopPropagation",
              "type": {
                "text": "boolean | undefined"
              },
              "description": "Whether an atomic-result-link inside atomic-result should stop click event propagation."
            },
            {
              "kind": "field",
              "name": "result",
              "type": {
                "text": "Result | FoldedResult"
              },
              "description": "The result item."
            },
            {
              "kind": "field",
              "name": "content",
              "type": {
                "text": "ParentNode | undefined"
              },
              "description": "The result content to display."
            },
            {
              "kind": "field",
              "name": "display",
              "type": {
                "text": "ItemDisplayLayout"
              },
              "default": "'list'",
              "description": "How results should be displayed."
            },
            {
              "kind": "field",
              "name": "density",
              "type": {
                "text": "ItemDisplayDensity"
              },
              "default": "'normal'",
              "description": "How large or small results should be."
            },
            {
              "kind": "field",
              "name": "imageSize",
              "type": {
                "text": "ItemDisplayImageSize"
              },
              "default": "'icon'",
              "description": "The size of the visual section in result list items.\n\nThis is overwritten by the image size defined in the result content, if it exists."
            },
            {
              "kind": "field",
              "name": "classes",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "The classes to add to the result element."
            },
            {
              "kind": "method",
              "name": "resolveResult",
              "privacy": "public",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "ResultContextEvent<FoldedResult | Result>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "resolveInteractiveResult",
              "privacy": "public",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "InteractiveResultContextEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "resolveStopPropagation",
              "privacy": "public",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "CustomEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "resolveResultDisplayConfig",
              "privacy": "public",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "ResultContextEvent<DisplayConfig>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "render",
              "privacy": "public"
            }
          ],
          "attributes": [
            {
              "name": "stop-propagation",
              "fieldName": "stopPropagation",
              "type": {
                "text": "boolean | undefined"
              },
              "description": "Whether an atomic-result-link inside atomic-result should stop click event propagation."
            },
            {
              "name": "result",
              "fieldName": "result",
              "type": {
                "text": "Result | FoldedResult"
              },
              "description": "The result item."
            },
            {
              "name": "content",
              "fieldName": "content",
              "type": {
                "text": "ParentNode | undefined"
              },
              "description": "The result content to display."
            },
            {
              "name": "display",
              "fieldName": "display",
              "type": {
                "text": "ItemDisplayLayout"
              },
              "default": "'list'",
              "description": "How results should be displayed."
            },
            {
              "name": "density",
              "fieldName": "density",
              "type": {
                "text": "ItemDisplayDensity"
              },
              "default": "'normal'",
              "description": "How large or small results should be."
            },
            {
              "name": "image-size",
              "fieldName": "imageSize",
              "type": {
                "text": "ItemDisplayImageSize"
              },
              "default": "'icon'",
              "description": "The size of the visual section in result list items.\n\nThis is overwritten by the image size defined in the result content, if it exists."
            },
            {
              "name": "classes",
              "fieldName": "classes",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "The classes to add to the result element."
            }
          ],
          "tagName": "atomic-result",
          "events": [],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AtomicResult",
          "declaration": {
            "name": "AtomicResult",
            "module": "src/components/search/atomic-result/atomic-result.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "atomic-result",
          "declaration": {
            "name": "AtomicResult",
            "module": "src/components/search/atomic-result/atomic-result.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/search/atomic-result-table-placeholder/atomic-result-table-placeholder.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/search/atomic-results-per-page/atomic-results-per-page.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "The `atomic-results-per-page` component determines how many results to display per page.",
          "name": "AtomicResultsPerPage",
          "cssParts": [
            {
              "description": "The \"Results per page\" label.",
              "name": "label"
            },
            {
              "description": "The list of buttons.",
              "name": "buttons"
            },
            {
              "description": "The result per page button.",
              "name": "button"
            },
            {
              "description": "The active result per page button.",
              "name": "active-button"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "bindings",
              "type": {
                "text": "Bindings"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "searchStatus",
              "type": {
                "text": "SearchStatus"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "resultPerPageState",
              "type": {
                "text": "ResultsPerPageState"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "error",
              "type": {
                "text": "Error"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "choicesDisplayed",
              "type": {
                "text": "string"
              },
              "default": "'10,25,50,100'",
              "description": "A list of choices for the number of results to display per page, separated by commas."
            },
            {
              "kind": "field",
              "name": "initialChoice",
              "type": {
                "text": "number | undefined"
              },
              "description": "The initial selection for the number of result per page. This should be part of the `choicesDisplayed` option. By default, this is set to the first value in `choicesDisplayed`."
            },
            {
              "kind": "method",
              "name": "initialize",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "render",
              "privacy": "public"
            }
          ],
          "attributes": [
            {
              "name": "choices-displayed",
              "fieldName": "choicesDisplayed",
              "type": {
                "text": "string"
              },
              "default": "'10,25,50,100'",
              "description": "A list of choices for the number of results to display per page, separated by commas."
            },
            {
              "name": "initial-choice",
              "fieldName": "initialChoice",
              "type": {
                "text": "number | undefined"
              },
              "description": "The initial selection for the number of result per page. This should be part of the `choicesDisplayed` option. By default, this is set to the first value in `choicesDisplayed`."
            }
          ],
          "tagName": "atomic-results-per-page",
          "events": [
            {
              "name": "atomic/scrollToTop",
              "type": {
                "text": "EventEmitter"
              }
            }
          ],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AtomicResultsPerPage",
          "declaration": {
            "name": "AtomicResultsPerPage",
            "module": "src/components/search/atomic-results-per-page/atomic-results-per-page.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "atomic-results-per-page",
          "declaration": {
            "name": "AtomicResultsPerPage",
            "module": "src/components/search/atomic-results-per-page/atomic-results-per-page.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/search/atomic-search-box/atomic-search-box.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "The `atomic-search-box` component creates a search box with built-in support for suggestions.",
          "name": "AtomicSearchBox",
          "cssParts": [
            {
              "description": "The search box wrapper.",
              "name": "wrapper"
            },
            {
              "description": "The search box input.",
              "name": "input"
            },
            {
              "description": "The search box loading animation.",
              "name": "loading"
            },
            {
              "description": "The button to clear the search box of input.",
              "name": "clear-button"
            },
            {
              "description": "The clear button's icon.",
              "name": "clear-icon"
            },
            {
              "description": "The search box submit button.",
              "name": "submit-button"
            },
            {
              "description": "The search box submit button's icon.",
              "name": "submit-icon"
            },
            {
              "description": "A list of suggested query corrections on each panel.",
              "name": "suggestions"
            },
            {
              "description": "A list of suggested query corrections on the left panel.",
              "name": "suggestions-left"
            },
            {
              "description": "A list of suggested query corrections on the right panel.",
              "name": "suggestions-right"
            },
            {
              "description": "The wrapper that contains suggestion panels.",
              "name": "suggestions-wrapper"
            },
            {
              "description": "The wrapper that contains 1 suggestion list.",
              "name": "suggestions-single-list"
            },
            {
              "description": "The wrapper that contains 2 suggestion lists.",
              "name": "suggestions-double-list"
            },
            {
              "description": "A suggested query correction.",
              "name": "suggestion"
            },
            {
              "description": "The currently active suggestion.",
              "name": "active-suggestion"
            },
            {
              "description": "An item in the list that separates groups of suggestions.",
              "name": "suggestion-divider"
            },
            {
              "description": "An item in the list that will update the search box query.",
              "name": "suggestion-with-query"
            },
            {
              "description": "A suggestion from the `atomic-search-box-query-suggestions` component.",
              "name": "query-suggestion-item"
            },
            {
              "description": "The contents of a suggestion from the `atomic-search-box-query-suggestions` component.",
              "name": "query-suggestion-content"
            },
            {
              "description": "The icon of a suggestion from the `atomic-search-box-query-suggestions` component.",
              "name": "query-suggestion-icon"
            },
            {
              "description": "The text of a suggestion from the `atomic-search-box-query-suggestions` component.",
              "name": "query-suggestion-text"
            },
            {
              "description": "A suggestion from the `atomic-search-box-recent-queries` component.",
              "name": "recent-query-item"
            },
            {
              "description": "The contents of a suggestion from the `atomic-search-box-recent-queries` component.",
              "name": "recent-query-content"
            },
            {
              "description": "The icon of a suggestion from the `atomic-search-box-recent-queries` component.",
              "name": "recent-query-icon"
            },
            {
              "description": "The text of a suggestion from the `atomic-search-box-recent-queries` component.",
              "name": "recent-query-text"
            },
            {
              "description": "The highlighted portion of the text of a suggestion from the `atomic-search-box-recent-queries` component.",
              "name": "recent-query-text-highlight"
            },
            {
              "description": "The clear button above suggestions from the `atomic-search-box-recent-queries` component.",
              "name": "recent-query-title-item"
            },
            {
              "description": "The contents of the clear button above suggestions from the `atomic-search-box-recent-queries` component.",
              "name": "recent-query-title-content"
            },
            {
              "description": "The \"recent searches\" text of the clear button above suggestions from the `atomic-search-box-recent-queries` component.",
              "name": "recent-query-title"
            },
            {
              "description": "The \"clear\" text of the clear button above suggestions from the `atomic-search-box-recent-queries` component.",
              "name": "recent-query-clear"
            },
            {
              "description": "An instant result rendered by an `atomic-search-box-instant-results` component.",
              "name": "instant-results-item"
            },
            {
              "description": "The clickable suggestion to show all items for the current instant results search rendered by an `atomic-search-box-instant-results` component.",
              "name": "instant-results-show-all"
            },
            {
              "description": "The button inside the clickable suggestion from the `atomic-search-box-instant-results` component.",
              "name": "instant-results-show-all-button"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "bindings",
              "type": {
                "text": "Bindings"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "error",
              "type": {
                "text": "Error"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "numberOfQueries",
              "type": {
                "text": "number"
              },
              "privacy": "public",
              "default": "8",
              "description": "The amount of queries displayed when the user interacts with the search box.\nBy default, a mix of query suggestions and recent queries will be shown.\nYou can configure those settings using the following components as children:\n - atomic-search-box-query-suggestions\n - atomic-search-box-recent-queries"
            },
            {
              "kind": "field",
              "name": "redirectionUrl",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "public",
              "description": "Defining this option makes the search box standalone (see [Use a\nStandalone Search Box](https://docs.coveo.com/en/atomic/latest/usage/ssb/)).\n\nThis option defines the default URL the user should be redirected to, when a query is submitted.\nIf a query pipeline redirect is triggered, it will redirect to that URL instead\n(see [query pipeline triggers](https://docs.coveo.com/en/1458))."
            },
            {
              "kind": "field",
              "name": "suggestionTimeout",
              "type": {
                "text": "number"
              },
              "privacy": "public",
              "default": "400",
              "description": "The timeout for suggestion queries, in milliseconds.\nIf a suggestion query times out, the suggestions from that particular query won't be shown."
            },
            {
              "kind": "field",
              "name": "suggestionDelay",
              "type": {
                "text": "number"
              },
              "privacy": "public",
              "default": "0",
              "description": "The delay for suggestion queries on input, in milliseconds.\n\nThe suggestion request will be delayed until the end user stops typing for at least the specified amount of time.\n\nThis delay is used to avoid sending too many requests to the Coveo Platform when the user is typing, as well as reducing potential input lag on low end devices.\nA higher delay will reduce input lag, at the cost of suggestions freshness."
            },
            {
              "kind": "field",
              "name": "disableSearch",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "description": "Whether to prevent the user from triggering searches and query suggestions from the component.\nPerfect for use cases where you need to disable the search conditionally.\nFor the specific case when you need to disable the search based on the length of the query, refer to minimumQueryLength."
            },
            {
              "kind": "field",
              "name": "minimumQueryLength",
              "type": {
                "text": "number"
              },
              "privacy": "public",
              "default": "0",
              "description": "The minimum query length required to enable search.\nFor example, to disable the search for empty queries, set this to `1`."
            },
            {
              "kind": "field",
              "name": "clearFilters",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "true",
              "description": "Whether to clear all active query filters when the end user submits a new query from the search box.\nSetting this option to \"false\" is not recommended & can lead to an increasing number of queries returning no results."
            },
            {
              "kind": "field",
              "name": "enableQuerySyntax",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "description": "Whether to interpret advanced [Coveo Cloud query syntax](https://docs.coveo.com/en/1814/) in the query.\nYou should only enable query syntax in the search box if you have good reasons to do so, as it\nrequires end users to be familiar with Coveo Cloud query syntax, otherwise they will likely be surprised\nby the search box behaviour.\n\nWhen the `redirection-url` property is set and redirects to a page with more `atomic-search-box` components, all `atomic-search-box` components need to have the same `enable-query-syntax` value."
            },
            {
              "kind": "field",
              "name": "textarea",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "description": "Whether to render the search box using a [textarea](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/textarea) element.\nThe resulting component will expand to support multi-line queries.\nWhen customizing the dimensions of the textarea element using the `\"textarea\"` CSS part, it is important to also apply the styling to its container's ::after pseudo-element as well as the `\"textarea-spacer\"` part.\nThe buttons within the search box are likely to need adjusting as well.\n\nExample:\n```css\n<style>\n  atomic-search-box::part(textarea),\n  atomic-search-box::part(textarea-expander)::after,\n  atomic-search-box::part(textarea-spacer) {\n    font-size: x-large;\n  }\n\n  atomic-search-box::part(submit-button-wrapper),\n  atomic-search-box::part(clear-button-wrapper) {\n    padding-top: 0.75rem;\n  }\n</style>\n```\n\nNB: The textarea functionality will be enforced on the next major version of Atomic (3.0.0)"
            },
            {
              "kind": "field",
              "name": "searchBoxAriaMessage",
              "type": {
                "text": "string"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "suggestionsAriaMessage",
              "type": {
                "text": "string"
              },
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "initialize",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "registerSuggestions",
              "privacy": "public",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "CustomEvent<\n      SearchBoxSuggestionsEvent<SearchBox | StandaloneSearchBox>\n    >"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "watchRedirectionUrl"
            },
            {
              "kind": "method",
              "name": "render",
              "privacy": "public"
            }
          ],
          "attributes": [
            {
              "name": "number-of-queries",
              "fieldName": "numberOfQueries",
              "type": {
                "text": "number"
              },
              "default": "8",
              "description": "The amount of queries displayed when the user interacts with the search box.\nBy default, a mix of query suggestions and recent queries will be shown.\nYou can configure those settings using the following components as children:\n - atomic-search-box-query-suggestions\n - atomic-search-box-recent-queries"
            },
            {
              "name": "redirection-url",
              "fieldName": "redirectionUrl",
              "type": {
                "text": "string | undefined"
              },
              "description": "Defining this option makes the search box standalone (see [Use a\nStandalone Search Box](https://docs.coveo.com/en/atomic/latest/usage/ssb/)).\n\nThis option defines the default URL the user should be redirected to, when a query is submitted.\nIf a query pipeline redirect is triggered, it will redirect to that URL instead\n(see [query pipeline triggers](https://docs.coveo.com/en/1458))."
            },
            {
              "name": "suggestion-timeout",
              "fieldName": "suggestionTimeout",
              "type": {
                "text": "number"
              },
              "default": "400",
              "description": "The timeout for suggestion queries, in milliseconds.\nIf a suggestion query times out, the suggestions from that particular query won't be shown."
            },
            {
              "name": "suggestion-delay",
              "fieldName": "suggestionDelay",
              "type": {
                "text": "number"
              },
              "default": "0",
              "description": "The delay for suggestion queries on input, in milliseconds.\n\nThe suggestion request will be delayed until the end user stops typing for at least the specified amount of time.\n\nThis delay is used to avoid sending too many requests to the Coveo Platform when the user is typing, as well as reducing potential input lag on low end devices.\nA higher delay will reduce input lag, at the cost of suggestions freshness."
            },
            {
              "name": "disable-search",
              "fieldName": "disableSearch",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether to prevent the user from triggering searches and query suggestions from the component.\nPerfect for use cases where you need to disable the search conditionally.\nFor the specific case when you need to disable the search based on the length of the query, refer to minimumQueryLength."
            },
            {
              "name": "minimum-query-length",
              "fieldName": "minimumQueryLength",
              "type": {
                "text": "number"
              },
              "default": "0",
              "description": "The minimum query length required to enable search.\nFor example, to disable the search for empty queries, set this to `1`."
            },
            {
              "name": "clear-filters",
              "fieldName": "clearFilters",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "description": "Whether to clear all active query filters when the end user submits a new query from the search box.\nSetting this option to \"false\" is not recommended & can lead to an increasing number of queries returning no results."
            },
            {
              "name": "enable-query-syntax",
              "fieldName": "enableQuerySyntax",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether to interpret advanced [Coveo Cloud query syntax](https://docs.coveo.com/en/1814/) in the query.\nYou should only enable query syntax in the search box if you have good reasons to do so, as it\nrequires end users to be familiar with Coveo Cloud query syntax, otherwise they will likely be surprised\nby the search box behaviour.\n\nWhen the `redirection-url` property is set and redirects to a page with more `atomic-search-box` components, all `atomic-search-box` components need to have the same `enable-query-syntax` value."
            },
            {
              "name": "textarea",
              "fieldName": "textarea",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether to render the search box using a [textarea](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/textarea) element.\nThe resulting component will expand to support multi-line queries.\nWhen customizing the dimensions of the textarea element using the `\"textarea\"` CSS part, it is important to also apply the styling to its container's ::after pseudo-element as well as the `\"textarea-spacer\"` part.\nThe buttons within the search box are likely to need adjusting as well.\n\nExample:\n```css\n<style>\n  atomic-search-box::part(textarea),\n  atomic-search-box::part(textarea-expander)::after,\n  atomic-search-box::part(textarea-spacer) {\n    font-size: x-large;\n  }\n\n  atomic-search-box::part(submit-button-wrapper),\n  atomic-search-box::part(clear-button-wrapper) {\n    padding-top: 0.75rem;\n  }\n</style>\n```\n\nNB: The textarea functionality will be enforced on the next major version of Atomic (3.0.0)"
            }
          ],
          "tagName": "atomic-search-box",
          "events": [
            {
              "name": "redirect",
              "type": {
                "text": "EventEmitter<RedirectionPayload>"
              },
              "description": "Event that is emitted when a standalone search box redirection is triggered. By default, the search box will directly change the URL and redirect accordingly, so if you want to handle the redirection differently, use this event.\n\nExample:\n```html\n<script>\n  document.querySelector('atomic-search-box').addEventListener((e) => {\n    e.preventDefault();\n    // handle redirection\n  });\n</script>\n...\n<atomic-search-box redirection-url=\"/search\"></atomic-search-box>\n```"
            }
          ],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AtomicSearchBox",
          "declaration": {
            "name": "AtomicSearchBox",
            "module": "src/components/search/atomic-search-box/atomic-search-box.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "atomic-search-box",
          "declaration": {
            "name": "AtomicSearchBox",
            "module": "src/components/search/atomic-search-box/atomic-search-box.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/search/atomic-search-box/search-suggestion.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/search/atomic-search-interface/atomic-aria-live.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "The `atomic-aria-live` component notifies screen readers of changes in the search interface.",
          "name": "AtomicAriaLive",
          "members": [
            {
              "kind": "method",
              "name": "onFindAriaLive",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "{detail: args}",
                  "type": {
                    "text": "CustomEvent<FindAriaLiveEventArgs>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "render",
              "privacy": "public"
            }
          ],
          "tagName": "atomic-aria-live",
          "events": [],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AtomicAriaLive",
          "declaration": {
            "name": "AtomicAriaLive",
            "module": "src/components/search/atomic-search-interface/atomic-aria-live.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "atomic-aria-live",
          "declaration": {
            "name": "AtomicAriaLive",
            "module": "src/components/search/atomic-search-interface/atomic-aria-live.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/search/atomic-search-interface/atomic-search-interface.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "The `atomic-search-interface` component is the parent to all other atomic components in a search page. It handles the headless search engine and localization configurations.",
          "name": "AtomicSearchInterface",
          "members": [
            {
              "kind": "field",
              "name": "host",
              "type": {
                "text": "HTMLAtomicSearchInterfaceElement"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "error",
              "type": {
                "text": "Error | undefined"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "relevanceInspectorIsOpen",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "fieldsToInclude",
              "type": {
                "text": "string[] | string"
              },
              "privacy": "public",
              "default": "'[]'",
              "description": "A list of non-default fields to include in the query results.\n\nSpecify the property as an array using a JSON string representation:\n```html\n<atomic-search-interface fields-to-include='[\"fieldA\", \"fieldB\"]'></atomic-search-interface>\n```"
            },
            {
              "kind": "field",
              "name": "pipeline",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "public",
              "description": "The search interface [query pipeline](https://docs.coveo.com/en/180/).\n\nIf the search interface is initialized using [`initializeWithSearchEngine`](https://docs.coveo.com/en/atomic/latest/reference/components/atomic-search-interface/#initializewithsearchengine), the query pipeline should instead be configured in the target engine."
            },
            {
              "kind": "field",
              "name": "searchHub",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "public",
              "description": "The search interface [search hub](https://docs.coveo.com/en/1342/).\n\nIf the search interface is initialized using [`initializeWithSearchEngine`](https://docs.coveo.com/en/atomic/latest/reference/components/atomic-search-interface/#initializewithsearchengine, the search hub should instead be configured in the target engine."
            },
            {
              "kind": "field",
              "name": "analytics",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "true",
              "description": "Whether analytics should be enabled."
            },
            {
              "kind": "field",
              "name": "timezone",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "public",
              "description": "The [tz database](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones) identifier of the time zone to use to correctly interpret dates in the query expression, facets, and result items.\nBy default, the timezone will be [guessed](https://day.js.org/docs/en/timezone/guessing-user-timezone).\n\nExample: \"America/Montreal\""
            },
            {
              "kind": "field",
              "name": "logLevel",
              "type": {
                "text": "LogLevel | undefined"
              },
              "privacy": "public",
              "description": "The severity level of the messages to log in the console."
            },
            {
              "kind": "field",
              "name": "localizationCompatibilityVersion",
              "type": {
                "text": "i18nCompatibilityVersion"
              },
              "privacy": "public",
              "default": "'v3'",
              "description": "The compatibility JSON version for i18next to use (see [i18next Migration Guide](https://www.i18next.com/misc/migration-guide#v20.x.x-to-v21.0.0))."
            },
            {
              "kind": "field",
              "name": "i18n",
              "type": {
                "text": "i18n"
              },
              "privacy": "public",
              "description": "The search interface i18next instance."
            },
            {
              "kind": "field",
              "name": "language",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "'en'",
              "description": "The search interface language."
            },
            {
              "kind": "field",
              "name": "engine",
              "type": {
                "text": "SearchEngine | undefined"
              },
              "privacy": "public",
              "description": "The search interface headless engine."
            },
            {
              "kind": "field",
              "name": "reflectStateInUrl",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "true",
              "description": "Whether the state should be reflected in the URL parameters."
            },
            {
              "kind": "field",
              "name": "scrollContainer",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "'atomic-search-interface'",
              "description": "The CSS selector for the container where the interface will scroll back to."
            },
            {
              "kind": "field",
              "name": "languageAssetsPath",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "'./lang'",
              "description": "The language assets path. By default, this will be a relative URL pointing to `./lang`.\n\nExample: \"/mypublicpath/languages\""
            },
            {
              "kind": "field",
              "name": "iconAssetsPath",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "'./assets'",
              "description": "The icon assets path. By default, this will be a relative URL pointing to `./assets`.\n\nExample: \"/mypublicpath/icons\""
            },
            {
              "kind": "field",
              "name": "enableRelevanceInspector",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "true",
              "description": "Whether the relevance inspector shortcut should be enabled for this interface.\n\nThe relevance inspector can be opened by holding the Alt key (Option on Mac) while over the interface, and performing a double click.\n\nThe relevance inspector allows to troubleshoot and debug queries."
            },
            {
              "kind": "field",
              "name": "CspNonce",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "public",
              "description": "The value to set the [nonce](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/nonce) attribute to on inline script and style elements generated by this interface and its child components.\nIf your application is served with a Content Security Policy (CSP) that doesn't include the `script-src: 'unsafe-inline'` or `style-src: 'unsafe-inline'` directives,\nyou should ensure that your application server generates a new nonce on every page load and uses the generated value to set this prop and serve the corresponding CSP response headers\n(i.e., script-src 'nonce-<YOUR_GENERATED_NONCE>' and style-src 'nonce-<YOUR_GENERATED_NONCE>').\nOtherwise you may see console errors such as\n - Refused to execute inline script because it violates the following Content Security Policy directive: [...]\n - Refused to apply inline style because it violates the following Content Security Policy directive: [...]."
            },
            {
              "kind": "method",
              "name": "updateSearchConfiguration",
              "privacy": "public",
              "parameters": [
                {
                  "name": "updatedProp",
                  "type": {
                    "text": "'searchHub' | 'pipeline'"
                  }
                },
                {
                  "name": "newValue",
                  "type": {
                    "text": "string | undefined"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "updateSearchHub",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "updatePipeline",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "toggleAnalytics",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "updateLanguage",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "updateIconAssetsPath",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "handleInitialization",
              "privacy": "public",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "InitializeEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "scrollToTop",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "closeRelevanceInspector",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "initialize",
              "privacy": "public",
              "parameters": [
                {
                  "name": "options",
                  "type": {
                    "text": "InitializationOptions"
                  }
                }
              ],
              "description": "Initializes the connection with the headless search engine using options for accessToken (required), organizationId (required), renewAccessToken, organizationEndpoints (recommended), and platformUrl (deprecated)."
            },
            {
              "kind": "method",
              "name": "initializeWithSearchEngine",
              "privacy": "public",
              "parameters": [
                {
                  "name": "engine",
                  "type": {
                    "text": "SearchEngine"
                  }
                }
              ],
              "description": "Initializes the connection with an already preconfigured [headless search engine](https://docs.coveo.com/en/headless/latest/reference/search/), as opposed to the `initialize` method, which will internally create a new search engine instance.\nThis bypasses the properties set on the component, such as analytics, searchHub, pipeline, language, timezone & logLevel."
            },
            {
              "kind": "method",
              "name": "executeFirstSearch",
              "privacy": "public",
              "description": "\nExecutes the first search and logs the interface load event to analytics, after initializing connection to the headless search engine."
            },
            {
              "kind": "method",
              "name": "getOrganizationEndpoints",
              "privacy": "public",
              "parameters": [
                {
                  "name": "organizationId",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "env",
                  "default": "'prod'",
                  "type": {
                    "text": "'prod'|'hipaa'|'staging'|'dev'"
                  },
                  "optional": true
                }
              ],
              "description": "Returns the unique, organization-specific endpoint(s)."
            },
            {
              "kind": "field",
              "name": "bindings",
              "type": {
                "text": "Bindings"
              },
              "privacy": "public",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "registerFieldsToInclude",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "render",
              "privacy": "public"
            }
          ],
          "attributes": [
            {
              "name": "fields-to-include",
              "fieldName": "fieldsToInclude",
              "type": {
                "text": "string[] | string"
              },
              "default": "'[]'",
              "description": "A list of non-default fields to include in the query results.\n\nSpecify the property as an array using a JSON string representation:\n```html\n<atomic-search-interface fields-to-include='[\"fieldA\", \"fieldB\"]'></atomic-search-interface>\n```"
            },
            {
              "name": "pipeline",
              "fieldName": "pipeline",
              "type": {
                "text": "string | undefined"
              },
              "description": "The search interface [query pipeline](https://docs.coveo.com/en/180/).\n\nIf the search interface is initialized using [`initializeWithSearchEngine`](https://docs.coveo.com/en/atomic/latest/reference/components/atomic-search-interface/#initializewithsearchengine), the query pipeline should instead be configured in the target engine."
            },
            {
              "name": "search-hub",
              "fieldName": "searchHub",
              "type": {
                "text": "string | undefined"
              },
              "description": "The search interface [search hub](https://docs.coveo.com/en/1342/).\n\nIf the search interface is initialized using [`initializeWithSearchEngine`](https://docs.coveo.com/en/atomic/latest/reference/components/atomic-search-interface/#initializewithsearchengine, the search hub should instead be configured in the target engine."
            },
            {
              "name": "analytics",
              "fieldName": "analytics",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "description": "Whether analytics should be enabled."
            },
            {
              "name": "timezone",
              "fieldName": "timezone",
              "type": {
                "text": "string | undefined"
              },
              "description": "The [tz database](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones) identifier of the time zone to use to correctly interpret dates in the query expression, facets, and result items.\nBy default, the timezone will be [guessed](https://day.js.org/docs/en/timezone/guessing-user-timezone).\n\nExample: \"America/Montreal\""
            },
            {
              "name": "log-level",
              "fieldName": "logLevel",
              "type": {
                "text": "LogLevel | undefined"
              },
              "description": "The severity level of the messages to log in the console."
            },
            {
              "name": "localization-compatibility-version",
              "fieldName": "localizationCompatibilityVersion",
              "type": {
                "text": "i18nCompatibilityVersion"
              },
              "default": "'v3'",
              "description": "The compatibility JSON version for i18next to use (see [i18next Migration Guide](https://www.i18next.com/misc/migration-guide#v20.x.x-to-v21.0.0))."
            },
            {
              "name": "i-1-8n",
              "fieldName": "i18n",
              "type": {
                "text": "i18n"
              },
              "description": "The search interface i18next instance."
            },
            {
              "name": "language",
              "fieldName": "language",
              "type": {
                "text": "string"
              },
              "default": "'en'",
              "description": "The search interface language."
            },
            {
              "name": "engine",
              "fieldName": "engine",
              "type": {
                "text": "SearchEngine | undefined"
              },
              "description": "The search interface headless engine."
            },
            {
              "name": "reflect-state-in-url",
              "fieldName": "reflectStateInUrl",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "description": "Whether the state should be reflected in the URL parameters."
            },
            {
              "name": "scroll-container",
              "fieldName": "scrollContainer",
              "type": {
                "text": "string"
              },
              "default": "'atomic-search-interface'",
              "description": "The CSS selector for the container where the interface will scroll back to."
            },
            {
              "name": "language-assets-path",
              "fieldName": "languageAssetsPath",
              "type": {
                "text": "string"
              },
              "default": "'./lang'",
              "description": "The language assets path. By default, this will be a relative URL pointing to `./lang`.\n\nExample: \"/mypublicpath/languages\""
            },
            {
              "name": "icon-assets-path",
              "fieldName": "iconAssetsPath",
              "type": {
                "text": "string"
              },
              "default": "'./assets'",
              "description": "The icon assets path. By default, this will be a relative URL pointing to `./assets`.\n\nExample: \"/mypublicpath/icons\""
            },
            {
              "name": "enable-relevance-inspector",
              "fieldName": "enableRelevanceInspector",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "description": "Whether the relevance inspector shortcut should be enabled for this interface.\n\nThe relevance inspector can be opened by holding the Alt key (Option on Mac) while over the interface, and performing a double click.\n\nThe relevance inspector allows to troubleshoot and debug queries."
            },
            {
              "name": "csp-nonce",
              "fieldName": "CspNonce",
              "type": {
                "text": "string | undefined"
              },
              "description": "The value to set the [nonce](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/nonce) attribute to on inline script and style elements generated by this interface and its child components.\nIf your application is served with a Content Security Policy (CSP) that doesn't include the `script-src: 'unsafe-inline'` or `style-src: 'unsafe-inline'` directives,\nyou should ensure that your application server generates a new nonce on every page load and uses the generated value to set this prop and serve the corresponding CSP response headers\n(i.e., script-src 'nonce-<YOUR_GENERATED_NONCE>' and style-src 'nonce-<YOUR_GENERATED_NONCE>').\nOtherwise you may see console errors such as\n - Refused to execute inline script because it violates the following Content Security Policy directive: [...]\n - Refused to apply inline style because it violates the following Content Security Policy directive: [...]."
            }
          ],
          "tagName": "atomic-search-interface",
          "events": [],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AtomicSearchInterface",
          "declaration": {
            "name": "AtomicSearchInterface",
            "module": "src/components/search/atomic-search-interface/atomic-search-interface.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "atomic-search-interface",
          "declaration": {
            "name": "AtomicSearchInterface",
            "module": "src/components/search/atomic-search-interface/atomic-search-interface.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/search/atomic-sort-dropdown/atomic-sort-dropdown.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "The `atomic-sort-dropdown` component renders a dropdown that the end user can interact with to select the criteria to use when sorting query results.",
          "name": "AtomicSortDropdown",
          "cssParts": [
            {
              "description": "The \"Sort by\" label of the `<select>` element.",
              "name": "label"
            },
            {
              "description": "The `<select>` element parent.",
              "name": "select-parent"
            },
            {
              "description": "The `<select>` element of the dropdown list.",
              "name": "select"
            },
            {
              "description": "The element separating the select from the icon.",
              "name": "select-separator"
            },
            {
              "description": "The dropdown placeholder for while the search interface is initializing.",
              "name": "placeholder"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "bindings",
              "type": {
                "text": "Bindings"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "searchStatus",
              "type": {
                "text": "SearchStatus"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "host",
              "type": {
                "text": "HTMLElement"
              }
            },
            {
              "kind": "field",
              "name": "sortState",
              "type": {
                "text": "SortState"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "error",
              "type": {
                "text": "Error"
              },
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "initialize",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "render",
              "privacy": "public"
            }
          ],
          "tagName": "atomic-sort-dropdown",
          "events": [],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AtomicSortDropdown",
          "declaration": {
            "name": "AtomicSortDropdown",
            "module": "src/components/search/atomic-sort-dropdown/atomic-sort-dropdown.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "atomic-sort-dropdown",
          "declaration": {
            "name": "AtomicSortDropdown",
            "module": "src/components/search/atomic-sort-dropdown/atomic-sort-dropdown.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/search/atomic-sort-expression/atomic-sort-expression.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "The `atomic-sort-expression` component defines a sort expression. This component must be inside an `atomic-sort-dropdown` component.",
          "name": "AtomicSortExpression",
          "members": [
            {
              "kind": "field",
              "name": "host",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "description": "The non-localized label to display for this expression."
            },
            {
              "kind": "field",
              "name": "expression",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "description": "One or more sort criteria that the end user can select or toggle between.\n\nThe available sort criteria are:\n\n* `relevancy`\n* `date ascending`/`date descending`\n* `qre`\n* `<FIELD> ascending`/`<FIELD> descending`, where you replace `<FIELD>` with the name of a sortable field in your index (e.g., `criteria=\"size ascending\"`).\n\nYou can specify multiple sort criteria to be used in the same request by separating them with a comma (e.g., `criteria=\"size ascending, date ascending\"`)."
            },
            {
              "kind": "method",
              "name": "render",
              "privacy": "public"
            }
          ],
          "attributes": [
            {
              "name": "label",
              "fieldName": "label",
              "type": {
                "text": "string"
              },
              "description": "The non-localized label to display for this expression."
            },
            {
              "name": "expression",
              "fieldName": "expression",
              "type": {
                "text": "string"
              },
              "description": "One or more sort criteria that the end user can select or toggle between.\n\nThe available sort criteria are:\n\n* `relevancy`\n* `date ascending`/`date descending`\n* `qre`\n* `<FIELD> ascending`/`<FIELD> descending`, where you replace `<FIELD>` with the name of a sortable field in your index (e.g., `criteria=\"size ascending\"`).\n\nYou can specify multiple sort criteria to be used in the same request by separating them with a comma (e.g., `criteria=\"size ascending, date ascending\"`)."
            }
          ],
          "tagName": "atomic-sort-expression",
          "events": [],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AtomicSortExpression",
          "declaration": {
            "name": "AtomicSortExpression",
            "module": "src/components/search/atomic-sort-expression/atomic-sort-expression.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "atomic-sort-expression",
          "declaration": {
            "name": "AtomicSortExpression",
            "module": "src/components/search/atomic-sort-expression/atomic-sort-expression.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/search/atomic-table-result/atomic-table-element.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "The `atomic-table-element` element defines a table column in a result list.",
          "name": "AtomicTableElement",
          "members": [
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "description": "The label to display in the header of this column."
            }
          ],
          "attributes": [
            {
              "name": "label",
              "fieldName": "label",
              "type": {
                "text": "string"
              },
              "description": "The label to display in the header of this column."
            }
          ],
          "tagName": "atomic-table-element",
          "events": [],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AtomicTableElement",
          "declaration": {
            "name": "AtomicTableElement",
            "module": "src/components/search/atomic-table-result/atomic-table-element.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "atomic-table-element",
          "declaration": {
            "name": "AtomicTableElement",
            "module": "src/components/search/atomic-table-result/atomic-table-element.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/search/atomic-table-result/table-element-utils.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/search/atomic-text/atomic-text.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "The `atomic-text` component leverages the I18n translation module through the atomic-search-interface.",
          "name": "AtomicText",
          "members": [
            {
              "kind": "field",
              "name": "bindings",
              "type": {
                "text": "Bindings"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "error",
              "type": {
                "text": "Error"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "description": "The string key value."
            },
            {
              "kind": "field",
              "name": "count",
              "type": {
                "text": "number | undefined"
              },
              "privacy": "public",
              "description": "The count value used for plurals."
            },
            {
              "kind": "method",
              "name": "render",
              "privacy": "public"
            }
          ],
          "attributes": [
            {
              "name": "value",
              "fieldName": "value",
              "type": {
                "text": "string"
              },
              "description": "The string key value."
            },
            {
              "name": "count",
              "fieldName": "count",
              "type": {
                "text": "number | undefined"
              },
              "description": "The count value used for plurals."
            }
          ],
          "tagName": "atomic-text",
          "events": [],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AtomicText",
          "declaration": {
            "name": "AtomicText",
            "module": "src/components/search/atomic-text/atomic-text.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "atomic-text",
          "declaration": {
            "name": "AtomicText",
            "module": "src/components/search/atomic-text/atomic-text.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/search/formats/atomic-format-currency.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "The `atomic-format-currency` component is used for formatting currencies.\nThe numerical format of compatible parents will be set according to the currency property of this component.",
          "name": "AtomicFormatCurrency",
          "members": [
            {
              "kind": "field",
              "name": "error",
              "type": {
                "text": "Error"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "currency",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "description": "The currency to use in currency formatting. Possible values are the ISO 4217 currency codes, such as \"USD\" for the US dollar, \"EUR\" for the euro, or \"CNY\" for the Chinese RMB.\nSee the current [currency & funds code list](https://www.six-group.com/en/products-services/financial-information/data-standards.html#scrollTo=maintenance-agency)."
            },
            {
              "kind": "method",
              "name": "render",
              "privacy": "public"
            }
          ],
          "attributes": [
            {
              "name": "currency",
              "fieldName": "currency",
              "type": {
                "text": "string"
              },
              "description": "The currency to use in currency formatting. Possible values are the ISO 4217 currency codes, such as \"USD\" for the US dollar, \"EUR\" for the euro, or \"CNY\" for the Chinese RMB.\nSee the current [currency & funds code list](https://www.six-group.com/en/products-services/financial-information/data-standards.html#scrollTo=maintenance-agency)."
            }
          ],
          "tagName": "atomic-format-currency",
          "events": [],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AtomicFormatCurrency",
          "declaration": {
            "name": "AtomicFormatCurrency",
            "module": "src/components/search/formats/atomic-format-currency.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "atomic-format-currency",
          "declaration": {
            "name": "AtomicFormatCurrency",
            "module": "src/components/search/formats/atomic-format-currency.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/search/formats/atomic-format-number.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "The `atomic-format-number` component is used for number formatting.\nThe numerical format of compatible parents will be set according to the properties of this component.",
          "name": "AtomicFormatNumber",
          "members": [
            {
              "kind": "field",
              "name": "error",
              "type": {
                "text": "Error"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "minimumIntegerDigits",
              "type": {
                "text": "number | undefined"
              },
              "privacy": "public",
              "description": "The minimum number of integer digits to use."
            },
            {
              "kind": "field",
              "name": "minimumFractionDigits",
              "type": {
                "text": "number | undefined"
              },
              "privacy": "public",
              "description": "The minimum number of fraction digits to use."
            },
            {
              "kind": "field",
              "name": "maximumFractionDigits",
              "type": {
                "text": "number | undefined"
              },
              "privacy": "public",
              "description": "The maximum number of fraction digits to use."
            },
            {
              "kind": "field",
              "name": "minimumSignificantDigits",
              "type": {
                "text": "number | undefined"
              },
              "privacy": "public",
              "description": "The minimum number of significant digits to use."
            },
            {
              "kind": "field",
              "name": "maximumSignificantDigits",
              "type": {
                "text": "number | undefined"
              },
              "privacy": "public",
              "description": "The maximum number of significant digits to use."
            },
            {
              "kind": "method",
              "name": "render",
              "privacy": "public"
            }
          ],
          "attributes": [
            {
              "name": "minimum-integer-digits",
              "fieldName": "minimumIntegerDigits",
              "type": {
                "text": "number | undefined"
              },
              "description": "The minimum number of integer digits to use."
            },
            {
              "name": "minimum-fraction-digits",
              "fieldName": "minimumFractionDigits",
              "type": {
                "text": "number | undefined"
              },
              "description": "The minimum number of fraction digits to use."
            },
            {
              "name": "maximum-fraction-digits",
              "fieldName": "maximumFractionDigits",
              "type": {
                "text": "number | undefined"
              },
              "description": "The maximum number of fraction digits to use."
            },
            {
              "name": "minimum-significant-digits",
              "fieldName": "minimumSignificantDigits",
              "type": {
                "text": "number | undefined"
              },
              "description": "The minimum number of significant digits to use."
            },
            {
              "name": "maximum-significant-digits",
              "fieldName": "maximumSignificantDigits",
              "type": {
                "text": "number | undefined"
              },
              "description": "The maximum number of significant digits to use."
            }
          ],
          "tagName": "atomic-format-number",
          "events": [],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AtomicFormatNumber",
          "declaration": {
            "name": "AtomicFormatNumber",
            "module": "src/components/search/formats/atomic-format-number.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "atomic-format-number",
          "declaration": {
            "name": "AtomicFormatNumber",
            "module": "src/components/search/formats/atomic-format-number.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/search/formats/atomic-format-unit.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "The `atomic-format-unit` component is used for formatting numbers with units.\nThe numerical format of compatible parents will be set according to the properties of this component.",
          "name": "AtomicFormatUnit",
          "members": [
            {
              "kind": "field",
              "name": "error",
              "type": {
                "text": "Error"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "unit",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "description": "The unit to use in unit formatting.\nLeverages the [Intl.NumberFormat](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat/NumberFormat) constructor.\nThe unit must be [sanctioned unit identifier](https://tc39.es/proposal-unified-intl-numberformat/section6/locales-currencies-tz_proposed_out.html#sec-issanctionedsimpleunitidentifier)"
            },
            {
              "kind": "field",
              "name": "unitDisplay",
              "type": {
                "text": "'long' | 'short' | 'narrow' | undefined"
              },
              "privacy": "public",
              "default": "'short'",
              "description": "The unit formatting style to use in unit formatting.\n\n* \"long\" (e.g., 16 litres)\n* \"short\" (e.g., 16 l)\n* \"narrow\" (e.g., 16l)"
            },
            {
              "kind": "method",
              "name": "render",
              "privacy": "public"
            }
          ],
          "attributes": [
            {
              "name": "unit",
              "fieldName": "unit",
              "type": {
                "text": "string"
              },
              "description": "The unit to use in unit formatting.\nLeverages the [Intl.NumberFormat](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat/NumberFormat) constructor.\nThe unit must be [sanctioned unit identifier](https://tc39.es/proposal-unified-intl-numberformat/section6/locales-currencies-tz_proposed_out.html#sec-issanctionedsimpleunitidentifier)"
            },
            {
              "name": "unit-display",
              "fieldName": "unitDisplay",
              "type": {
                "text": "'long' | 'short' | 'narrow' | undefined"
              },
              "default": "'short'",
              "description": "The unit formatting style to use in unit formatting.\n\n* \"long\" (e.g., 16 litres)\n* \"short\" (e.g., 16 l)\n* \"narrow\" (e.g., 16l)"
            }
          ],
          "tagName": "atomic-format-unit",
          "events": [],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AtomicFormatUnit",
          "declaration": {
            "name": "AtomicFormatUnit",
            "module": "src/components/search/formats/atomic-format-unit.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "atomic-format-unit",
          "declaration": {
            "name": "AtomicFormatUnit",
            "module": "src/components/search/formats/atomic-format-unit.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/search/result-template-components/result-template-decorators.spec.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/search/result-template-components/result-template-decorators.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/commerce/facets/atomic-commerce-facet/atomic-commerce-facet.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/commerce/facets/atomic-commerce-facets/atomic-commerce-facets.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/commerce/product-template-components/atomic-product-description/atomic-product-description.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/commerce/product-template-components/atomic-product-image/atomic-product-image.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/commerce/product-template-components/atomic-product-link/atomic-product-link.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/commerce/product-template-components/atomic-product-numeric-field-value/atomic-product-numeric-field-value.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/commerce/product-template-components/atomic-product-price/atomic-product-price.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/commerce/product-template-components/atomic-product-rating/atomic-product-rating.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/commerce/product-template-components/atomic-product-sections/atomic-product-section-actions.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/commerce/product-template-components/atomic-product-sections/atomic-product-section-badges.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/commerce/product-template-components/atomic-product-sections/atomic-product-section-bottom-metadata.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/commerce/product-template-components/atomic-product-sections/atomic-product-section-children.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/commerce/product-template-components/atomic-product-sections/atomic-product-section-description.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/commerce/product-template-components/atomic-product-sections/atomic-product-section-emphasized.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/commerce/product-template-components/atomic-product-sections/atomic-product-section-metadata.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/commerce/product-template-components/atomic-product-sections/atomic-product-section-name.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/commerce/product-template-components/atomic-product-sections/atomic-product-section-visual.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/commerce/product-template-components/atomic-product-text/atomic-product-text.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/commerce/search-box-suggestions/atomic-commerce-search-box-instant-products/atomic-commerce-search-box-instant-products.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/commerce/search-box-suggestions/atomic-commerce-search-box-query-suggestions/atomic-commerce-search-box-query-suggestions.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/commerce/search-box-suggestions/atomic-commerce-search-box-recent-queries/atomic-commerce-search-box-recent-queries.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/facets/category-facet/all-categories-button.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/facets/category-facet/child-value-link.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/facets/category-facet/children-as-tree-container.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/facets/category-facet/parent-as-tree-container.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/facets/category-facet/parent-button.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/facets/category-facet/parent-value-link.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/facets/category-facet/search-results-container.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/facets/category-facet/search-value.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/facets/category-facet/value-as-tree-container.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/facets/category-facet/value-link.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/facets/facet-container/facet-container.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/facets/facet-date-input/facet-date-input.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/facets/facet-header/facet-header.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/facets/facet-number-input/facet-number-input.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/facets/facet-placeholder/facet-placeholder.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/facets/facet-search/facet-search-input-guard.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/facets/facet-search/facet-search-input.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/facets/facet-search/facet-search-matches.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/facets/facet-search/facet-search-value.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/facets/facet-show-more-less/facet-show-more-less.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/facets/facet-value/facet-value.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/facets/facet-value-box/facet-value-box.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/facets/facet-value-checkbox/facet-value-checkbox.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/facets/facet-value-exclude/facet-value-exclude.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/facets/facet-value-label-highlight/facet-value-label-highlight.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/facets/facet-value-link/facet-value-link.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/facets/facet-values-group/facet-values-group.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/facets/numeric-facet/value-link.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/facets/numeric-facet/values-container.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/generated-answer/atomic-citation/atomic-citation.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/generated-answer/atomic-generated-answer-feedback/atomic-generated-answer-feedback-modal.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/generated-answer/generated-content/generated-markdown-content.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/generated-answer/generated-content/generated-text-content.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/smart-snippets/atomic-smart-snippet/smart-snippet-common.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/smart-snippets/atomic-smart-snippet-answer/atomic-smart-snippet-answer.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/smart-snippets/atomic-smart-snippet-collapse-wrapper/atomic-smart-snippet-collapse-wrapper.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/smart-snippets/atomic-smart-snippet-expandable-answer/atomic-smart-snippet-expandable-answer.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/smart-snippets/atomic-smart-snippet-feedback-modal/smart-snippet-feedback-modal-common.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/common/smart-snippets/atomic-smart-snippet-suggestions/smart-snippet-suggestions-common.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/insight/result-lists/atomic-insight-folded-result-list/atomic-insight-folded-result-list.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/insight/result-lists/atomic-insight-result-list/atomic-insight-result-list.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/insight/result-templates/atomic-insight-result-children/atomic-insight-result-children.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/insight/result-templates/atomic-insight-result-children-template/atomic-insight-result-children-template.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/insight/result-templates/atomic-insight-result-template/atomic-insight-result-template.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/insight/smart-snippets/atomic-insight-smart-snippet/atomic-insight-smart-snippet.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/insight/smart-snippets/atomic-insight-smart-snippet-feedback-modal/atomic-insight-smart-snippet-feedback-modal.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/insight/smart-snippets/atomic-insight-smart-snippet-suggestions/atomic-insight-smart-snippet-suggestions.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/search/facets/atomic-automatic-facet-generator/atomic-automatic-facet-generator.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "The `atomic-automatic-facet-generator` is a component that renders the facets from\nthe automatic facets feature. Unlike regular facets, which need to be explicitly defined\nand requested in the query, automatic facets are dynamically generated by the index\nin response to the search query.\n\n**Note:** This component renders one or more [automatic facets](https://docs.coveo.com/en/atomic/latest/reference/components/atomic-automatic-facet/) based on the `desiredCount` property.\n\nTo learn more about the automatic facet generator feature, see: [About the Facet Generator](https://docs.coveo.com/en/n9sd0159/).",
          "name": "AtomicAutomaticFacetGenerator",
          "members": [
            {
              "kind": "field",
              "name": "bindings",
              "type": {
                "text": "Bindings"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "error",
              "type": {
                "text": "Error"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "automaticFacetGenerator",
              "type": {
                "text": "AutomaticFacetGenerator"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "searchStatus",
              "type": {
                "text": "SearchStatus"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "searchStatusState",
              "type": {
                "text": "SearchStatusState"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "desiredCount",
              "type": {
                "text": "number"
              },
              "privacy": "public",
              "default": "5",
              "description": "The desired count of automatic facets.\n\nMinimum: `1`\nMaximum: `20`"
            },
            {
              "kind": "field",
              "name": "numberOfValues",
              "type": {
                "text": "number"
              },
              "privacy": "public",
              "default": "8",
              "description": "The desired number of automatically generated facet values.\n\nMinimum: `1`"
            },
            {
              "kind": "method",
              "name": "initialize",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "updateCollapseFacetsDependingOnFacetsVisibility",
              "privacy": "public",
              "parameters": [
                {
                  "name": "collapseAfter",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "numberOfVisibleFacets",
                  "type": {
                    "text": "number"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "render",
              "privacy": "public"
            }
          ],
          "attributes": [
            {
              "name": "desired-count",
              "fieldName": "desiredCount",
              "type": {
                "text": "number"
              },
              "default": "5",
              "description": "The desired count of automatic facets.\n\nMinimum: `1`\nMaximum: `20`"
            },
            {
              "name": "number-of-values",
              "fieldName": "numberOfValues",
              "type": {
                "text": "number"
              },
              "default": "8",
              "description": "The desired number of automatically generated facet values.\n\nMinimum: `1`"
            }
          ],
          "tagName": "atomic-automatic-facet-generator",
          "events": [],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AtomicAutomaticFacetGenerator",
          "declaration": {
            "name": "AtomicAutomaticFacetGenerator",
            "module": "src/components/search/facets/atomic-automatic-facet-generator/atomic-automatic-facet-generator.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "atomic-automatic-facet-generator",
          "declaration": {
            "name": "AtomicAutomaticFacetGenerator",
            "module": "src/components/search/facets/atomic-automatic-facet-generator/atomic-automatic-facet-generator.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/search/facets/atomic-automatic-facet/atomic-automatic-facet.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "An automatic facet is a special type of facet generated by the automatic facets feature.\nUnlike regular facets, which need to be explicitly defined and requested in the query,\nautomatic facets are dynamically generated by the index in response to the query.\n\n**Note:** This component should never be used on its own. It is used internally by the `atomic-automatic-facet-generator`\ncomponent to automatically render updated facets. However, you can use the shadow parts to style the automatically generated facets.\n\nTo learn more about the automatic facet generator feature, see: [About the Facet Generator](https://docs.coveo.com/en/n9sd0159/).",
          "name": "AtomicAutomaticFacet",
          "cssParts": [
            {
              "description": "The wrapper for the entire facet.",
              "name": "facet"
            },
            {
              "description": "The button that displays the label and allows to expand/collapse the facet.",
              "name": "label-button"
            },
            {
              "description": "The label button icon.",
              "name": "label-button-icon"
            },
            {
              "description": "The button that resets the actively selected facet values.",
              "name": "clear-button"
            },
            {
              "description": "The clear button icon.",
              "name": "clear-button-icon"
            },
            {
              "description": "The facet values container.",
              "name": "values"
            },
            {
              "description": "The facet value label, common for all displays.",
              "name": "value-label"
            },
            {
              "description": "The facet value count, common for all displays.",
              "name": "value-count"
            },
            {
              "description": "The facet value checkbox, available when display is 'checkbox'.",
              "name": "value-checkbox"
            },
            {
              "description": "The checked facet value checkbox, available when display is 'checkbox'.",
              "name": "value-checkbox-checked"
            },
            {
              "description": "The facet value checkbox clickable label, available when display is 'checkbox'.",
              "name": "value-checkbox-label"
            },
            {
              "description": "The facet value checkbox icon, available when display is 'checkbox'.",
              "name": "value-checkbox-icon"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "bindings",
              "type": {
                "text": "Bindings"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "error",
              "type": {
                "text": "Error"
              },
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "renderHeader",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "render",
              "privacy": "public"
            }
          ],
          "tagName": "atomic-automatic-facet",
          "events": [],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AtomicAutomaticFacet",
          "declaration": {
            "name": "AtomicAutomaticFacet",
            "module": "src/components/search/facets/atomic-automatic-facet/atomic-automatic-facet.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "atomic-automatic-facet",
          "declaration": {
            "name": "AtomicAutomaticFacet",
            "module": "src/components/search/facets/atomic-automatic-facet/atomic-automatic-facet.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/search/facets/atomic-category-facet/atomic-category-facet.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "A facet is a list of values for a certain field occurring in the results, ordered using a configurable criteria (e.g., number of occurrences).\nAn `atomic-category-facet` displays a facet of values in a browsable, hierarchical fashion.",
          "name": "AtomicCategoryFacet",
          "cssParts": [
            {
              "description": "The wrapper for the entire facet.",
              "name": "facet"
            },
            {
              "description": "The placeholder shown before the first search is executed.",
              "name": "placeholder"
            },
            {
              "description": "The button that displays the label and allows to expand/collapse the facet.",
              "name": "label-button"
            },
            {
              "description": "The label button icon.",
              "name": "label-button-icon"
            },
            {
              "description": "The search box wrapper.",
              "name": "search-wrapper"
            },
            {
              "description": "The search box input.",
              "name": "search-input"
            },
            {
              "description": "The search box submit button.",
              "name": "search-icon"
            },
            {
              "description": "The button to clear the search box of input.",
              "name": "search-clear-button"
            },
            {
              "description": "The label indicating there are more matches for the current facet search query.",
              "name": "more-matches"
            },
            {
              "description": "The label indicating there are no matches for the current facet search query.",
              "name": "no-matches"
            },
            {
              "description": "The highlighted query inside the matches labels.",
              "name": "matches-query"
            },
            {
              "description": "The search results container.",
              "name": "search-results"
            },
            {
              "description": "The search result value.",
              "name": "search-result"
            },
            {
              "description": "The search result path.",
              "name": "search-result-path"
            },
            {
              "description": "The highlighted query inside the facet values.",
              "name": "search-highlight"
            },
            {
              "description": "The container surrounding the whole hierarchy of values.",
              "name": "parents"
            },
            {
              "description": "The container surrounding a sub-hierarchy of values.",
              "name": "sub-parents"
            },
            {
              "description": "The container surrounding either the children of the active value or the values at the base.",
              "name": "values"
            },
            {
              "description": "The \"View all\" button displayed first within the parents.",
              "name": "all-categories-button"
            },
            {
              "description": "The clickable parent button displayed first within sub-parents.",
              "name": "parent-button"
            },
            {
              "description": "The clickable active parent displayed first within the last sub-parents.",
              "name": "active-parent"
            },
            {
              "description": "The clickable value displayed first within values.",
              "name": "value-link"
            },
            {
              "description": "The back arrow displayed before the clickable parents.",
              "name": "back-arrow"
            },
            {
              "description": "The facet value label within a value button.",
              "name": "value-label"
            },
            {
              "description": "The facet value count within a value button.",
              "name": "value-count"
            },
            {
              "description": "A facet value with no child value.",
              "name": "leaf-value"
            },
            {
              "description": "A facet value with child values.",
              "name": "node-value"
            },
            {
              "description": "The show more results button.",
              "name": "show-more"
            },
            {
              "description": "The show less results button.",
              "name": "show-less"
            },
            {
              "description": "The icons of the show more & show less buttons.",
              "name": "show-more-less-icon"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "bindings",
              "type": {
                "text": "Bindings"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "facet",
              "type": {
                "text": "CategoryFacet"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "searchStatus",
              "type": {
                "text": "SearchStatus"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "facetState",
              "type": {
                "text": "CategoryFacetState"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "searchStatusState",
              "type": {
                "text": "SearchStatusState"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "error",
              "type": {
                "text": "Error"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "facetId",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "public",
              "description": "Specifies a unique identifier for the facet."
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "'no-label'",
              "description": "The non-localized label for the facet.\nUsed in the `atomic-breadbox` component through the bindings store."
            },
            {
              "kind": "field",
              "name": "field",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "description": "The field whose values you want to display in the facet."
            },
            {
              "kind": "field",
              "name": "numberOfValues",
              "type": {
                "text": "number"
              },
              "privacy": "public",
              "default": "8",
              "description": "The number of values to request for this facet.\nAlso determines the number of additional values to request each time more values are shown."
            },
            {
              "kind": "field",
              "name": "withSearch",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "description": "Whether this facet should contain a search box."
            },
            {
              "kind": "field",
              "name": "sortCriteria",
              "type": {
                "text": "CategoryFacetSortCriterion"
              },
              "privacy": "public",
              "default": "'occurrences'",
              "description": "The sort criterion to apply to the returned facet values.\nPossible values are 'alphanumeric' and 'occurrences'.\nFor this criterion to apply to the top-layer facet values, disable\n[facet value ordering](https://docs.coveo.com/en/l1qf4156/#facet-value-ordering)\nin your Dynamic Navigation Experience configuration."
            },
            {
              "kind": "field",
              "name": "delimitingCharacter",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "';'",
              "description": "The character that separates values of a multi-value field.\n\n*Note:* If you use the [example formatting](https://docs.coveo.com/en/atomic/latest/reference/components/atomic-category-facet/#usage-notes) for the associated multi-value field, you must set this value to `|` or the facet won't display properly."
            },
            {
              "kind": "field",
              "name": "basePath",
              "type": {
                "text": "string[] | string"
              },
              "privacy": "public",
              "default": "'[]'",
              "description": "The base path shared by all values for the facet.\n\nSpecify the property as an array using a JSON string representation:\n```html\n <atomic-category-facet base-path='[\"first value\", \"second value\"]' ></atomic-category-facet>\n```"
            },
            {
              "kind": "field",
              "name": "filterByBasePath",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "true",
              "description": "Whether to use basePath as a filter for the results."
            },
            {
              "kind": "field",
              "name": "isCollapsed",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "description": "Specifies whether the facet is collapsed. When the facet is the child of an `atomic-facet-manager` component, the facet manager controls this property."
            },
            {
              "kind": "field",
              "name": "headingLevel",
              "type": {
                "text": "number"
              },
              "privacy": "public",
              "default": "0",
              "description": "The [heading level](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/Heading_Elements) to use for the heading over the facet, from 1 to 6."
            },
            {
              "kind": "field",
              "name": "filterFacetCount",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "true",
              "description": "Whether to exclude the parents of folded results when estimating the result count for each facet value."
            },
            {
              "kind": "field",
              "name": "injectionDepth",
              "type": {
                "text": "number"
              },
              "privacy": "public",
              "default": "1000",
              "description": "The maximum number of results to scan in the index to ensure that the facet lists all potential facet values.\nNote: A high injectionDepth may negatively impact the facet request performance.\nMinimum: `0`\nDefault: `1000`"
            },
            {
              "kind": "field",
              "name": "dependsOn",
              "type": {
                "text": "Record<string, string>"
              },
              "privacy": "public",
              "default": "{}",
              "description": "The required facets and values for this facet to be displayed.\nExamples:\n```html\n<atomic-facet facet-id=\"abc\" field=\"objecttype\" ...></atomic-facet>\n\n<!-- To show the facet when any value is selected in the facet with id \"abc\": -->\n<atomic-category-facet\n  depends-on-abc\n  ...\n></atomic-category-facet>\n\n<!-- To show the facet when value \"doc\" is selected in the facet with id \"abc\": -->\n<atomic-category-facet\n  depends-on-abc=\"doc\"\n  ...\n></atomic-category-facet>\n```"
            },
            {
              "kind": "field",
              "name": "facetSearchAriaMessage",
              "type": {
                "text": "string"
              },
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "initialize",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "render",
              "privacy": "public"
            }
          ],
          "attributes": [
            {
              "name": "facet-id",
              "fieldName": "facetId",
              "type": {
                "text": "string | undefined"
              },
              "description": "Specifies a unique identifier for the facet."
            },
            {
              "name": "label",
              "fieldName": "label",
              "type": {
                "text": "string"
              },
              "default": "'no-label'",
              "description": "The non-localized label for the facet.\nUsed in the `atomic-breadbox` component through the bindings store."
            },
            {
              "name": "field",
              "fieldName": "field",
              "type": {
                "text": "string"
              },
              "description": "The field whose values you want to display in the facet."
            },
            {
              "name": "number-of-values",
              "fieldName": "numberOfValues",
              "type": {
                "text": "number"
              },
              "default": "8",
              "description": "The number of values to request for this facet.\nAlso determines the number of additional values to request each time more values are shown."
            },
            {
              "name": "with-search",
              "fieldName": "withSearch",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether this facet should contain a search box."
            },
            {
              "name": "sort-criteria",
              "fieldName": "sortCriteria",
              "type": {
                "text": "CategoryFacetSortCriterion"
              },
              "default": "'occurrences'",
              "description": "The sort criterion to apply to the returned facet values.\nPossible values are 'alphanumeric' and 'occurrences'.\nFor this criterion to apply to the top-layer facet values, disable\n[facet value ordering](https://docs.coveo.com/en/l1qf4156/#facet-value-ordering)\nin your Dynamic Navigation Experience configuration."
            },
            {
              "name": "delimiting-character",
              "fieldName": "delimitingCharacter",
              "type": {
                "text": "string"
              },
              "default": "';'",
              "description": "The character that separates values of a multi-value field.\n\n*Note:* If you use the [example formatting](https://docs.coveo.com/en/atomic/latest/reference/components/atomic-category-facet/#usage-notes) for the associated multi-value field, you must set this value to `|` or the facet won't display properly."
            },
            {
              "name": "base-path",
              "fieldName": "basePath",
              "type": {
                "text": "string[] | string"
              },
              "default": "'[]'",
              "description": "The base path shared by all values for the facet.\n\nSpecify the property as an array using a JSON string representation:\n```html\n <atomic-category-facet base-path='[\"first value\", \"second value\"]' ></atomic-category-facet>\n```"
            },
            {
              "name": "filter-by-base-path",
              "fieldName": "filterByBasePath",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "description": "Whether to use basePath as a filter for the results."
            },
            {
              "name": "is-collapsed",
              "fieldName": "isCollapsed",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Specifies whether the facet is collapsed. When the facet is the child of an `atomic-facet-manager` component, the facet manager controls this property."
            },
            {
              "name": "heading-level",
              "fieldName": "headingLevel",
              "type": {
                "text": "number"
              },
              "default": "0",
              "description": "The [heading level](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/Heading_Elements) to use for the heading over the facet, from 1 to 6."
            },
            {
              "name": "filter-facet-count",
              "fieldName": "filterFacetCount",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "description": "Whether to exclude the parents of folded results when estimating the result count for each facet value."
            },
            {
              "name": "injection-depth",
              "fieldName": "injectionDepth",
              "type": {
                "text": "number"
              },
              "default": "1000",
              "description": "The maximum number of results to scan in the index to ensure that the facet lists all potential facet values.\nNote: A high injectionDepth may negatively impact the facet request performance.\nMinimum: `0`\nDefault: `1000`"
            },
            {
              "name": "depends-on",
              "fieldName": "dependsOn",
              "type": {
                "text": "Record<string, string>"
              },
              "default": "{}",
              "description": "The required facets and values for this facet to be displayed.\nExamples:\n```html\n<atomic-facet facet-id=\"abc\" field=\"objecttype\" ...></atomic-facet>\n\n<!-- To show the facet when any value is selected in the facet with id \"abc\": -->\n<atomic-category-facet\n  depends-on-abc\n  ...\n></atomic-category-facet>\n\n<!-- To show the facet when value \"doc\" is selected in the facet with id \"abc\": -->\n<atomic-category-facet\n  depends-on-abc=\"doc\"\n  ...\n></atomic-category-facet>\n```"
            }
          ],
          "tagName": "atomic-category-facet",
          "events": [],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AtomicCategoryFacet",
          "declaration": {
            "name": "AtomicCategoryFacet",
            "module": "src/components/search/facets/atomic-category-facet/atomic-category-facet.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "atomic-category-facet",
          "declaration": {
            "name": "AtomicCategoryFacet",
            "module": "src/components/search/facets/atomic-category-facet/atomic-category-facet.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/search/facets/atomic-color-facet/atomic-color-facet.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "A facet is a list of values for a certain field occurring in the results, ordered using a configurable criteria (e.g., number of occurrences).\nAn `atomic-color-facet` displays a facet of the results for the current query as colors.",
          "name": "AtomicColorFacet",
          "cssParts": [
            {
              "description": "The wrapper for the entire facet.",
              "name": "facet"
            },
            {
              "description": "The placeholder shown before the first search is executed.",
              "name": "placeholder"
            },
            {
              "description": "The button that displays the label and allows to expand/collapse the facet.",
              "name": "label-button"
            },
            {
              "description": "The label button icon.",
              "name": "label-button-icon"
            },
            {
              "description": "The button that resets the actively selected facet values.",
              "name": "clear-button"
            },
            {
              "description": "The clear button icon.",
              "name": "clear-button-icon"
            },
            {
              "description": "The search box wrapper.",
              "name": "search-wrapper"
            },
            {
              "description": "The search box input.",
              "name": "search-input"
            },
            {
              "description": "The search box submit button.",
              "name": "search-icon"
            },
            {
              "description": "The button to clear the search box of input.",
              "name": "search-clear-button"
            },
            {
              "description": "The label indicating there are more matches for the current facet search query.",
              "name": "more-matches"
            },
            {
              "description": "The label indicating there are no matches for the current facet search query.",
              "name": "no-matches"
            },
            {
              "description": "The highlighted query inside the matches labels.",
              "name": "matches-query"
            },
            {
              "description": "The highlighted query inside the facet values.",
              "name": "search-highlight"
            },
            {
              "description": "The facet values container.",
              "name": "values"
            },
            {
              "description": "The facet value label, common for all displays.",
              "name": "value-label"
            },
            {
              "description": "The facet value count, common for all displays.",
              "name": "value-count"
            },
            {
              "description": "The default part name used to customize color facet values. Should be defined before dynamic parts.",
              "name": "default-color-value"
            },
            {
              "description": "The dynamic part name used to customize a facet value. The `*` is a syntactical placeholder for a specific facet value. For example, if the component's `field` property is set to 'filetype' and your source has a `YouTubeVideo` file type, the part would be targeted like this: `atomic-color-facet::part(value-YouTubeVideo)...`.",
              "name": "value-*"
            },
            {
              "description": "The facet value when display is 'box'.",
              "name": "value-box"
            },
            {
              "description": "The selected facet value when display is 'box'.",
              "name": "value-box-selected"
            },
            {
              "description": "The facet value checkbox, available when display is 'checkbox'.",
              "name": "value-checkbox"
            },
            {
              "description": "The checked facet value checkbox, available when display is 'checkbox'.",
              "name": "value-checkbox-checked"
            },
            {
              "description": "The facet value checkbox clickable label, available when display is 'checkbox'.",
              "name": "value-checkbox-label"
            },
            {
              "description": "The show more results button.",
              "name": "show-more"
            },
            {
              "description": "The show less results button.",
              "name": "show-less"
            },
            {
              "description": "The icons of the show more & show less buttons.",
              "name": "show-more-less-icon"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "bindings",
              "type": {
                "text": "Bindings"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "facet",
              "type": {
                "text": "Facet"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "searchStatus",
              "type": {
                "text": "SearchStatus"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "facetState",
              "type": {
                "text": "FacetState"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "searchStatusState",
              "type": {
                "text": "SearchStatusState"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "error",
              "type": {
                "text": "Error"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "facetId",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "public",
              "description": "Specifies a unique identifier for the facet."
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "'no-label'",
              "description": "The non-localized label for the facet.\nUsed in the `atomic-breadbox` component through the bindings store."
            },
            {
              "kind": "field",
              "name": "field",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "description": "The field whose values you want to display in the facet."
            },
            {
              "kind": "field",
              "name": "numberOfValues",
              "type": {
                "text": "number"
              },
              "privacy": "public",
              "default": "8",
              "description": "The number of values to request for this facet.\nAlso determines the number of additional values to request each time more values are shown."
            },
            {
              "kind": "field",
              "name": "withSearch",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "true",
              "description": "Whether this facet should contain a search box."
            },
            {
              "kind": "field",
              "name": "sortCriteria",
              "type": {
                "text": "FacetSortCriterion"
              },
              "privacy": "public",
              "default": "'automatic'",
              "description": "The sort criterion to apply to the returned facet values.\nPossible values are 'score', 'alphanumeric', 'occurrences', and 'automatic'."
            },
            {
              "kind": "field",
              "name": "resultsMustMatch",
              "type": {
                "text": "FacetResultsMustMatch"
              },
              "privacy": "public",
              "default": "'atLeastOneValue'",
              "description": "Specifies how a result must match the selected facet values.\nAllowed values:\n- `atLeastOneValue`: A result will match if at least one of the corresponding facet values is selected.\n- `allValues`: A result will match if all corresponding facet values are selected."
            },
            {
              "kind": "field",
              "name": "displayValuesAs",
              "type": {
                "text": "'checkbox' | 'box'"
              },
              "privacy": "public",
              "default": "'box'",
              "description": "Whether to display the facet values as checkboxes (multiple selection) or boxes (multiple selection).\nPossible values are 'checkbox', and 'box'."
            },
            {
              "kind": "field",
              "name": "isCollapsed",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "description": "Specifies whether the facet is collapsed. When the facet is the child of an `atomic-facet-manager` component, the facet manager controls this property."
            },
            {
              "kind": "field",
              "name": "headingLevel",
              "type": {
                "text": "number"
              },
              "privacy": "public",
              "default": "0",
              "description": "The [heading level](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/Heading_Elements) to use for the heading over the facet, from 1 to 6."
            },
            {
              "kind": "field",
              "name": "filterFacetCount",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "true",
              "description": "Whether to exclude the parents of folded results when estimating the result count for each facet value."
            },
            {
              "kind": "field",
              "name": "injectionDepth",
              "type": {
                "text": "number"
              },
              "privacy": "public",
              "default": "1000",
              "description": "The maximum number of results to scan in the index to ensure that the facet lists all potential facet values.\nNote: A high injectionDepth may negatively impact the facet request performance.\nMinimum: `0`\nDefault: `1000`"
            },
            {
              "kind": "field",
              "name": "dependsOn",
              "type": {
                "text": "Record<string, string>"
              },
              "privacy": "public",
              "default": "{}",
              "description": "The required facets and values for this facet to be displayed.\nExamples:\n```html\n<atomic-facet facet-id=\"abc\" field=\"objecttype\" ...></atomic-facet>\n\n<!-- To show the facet when any value is selected in the facet with id \"abc\": -->\n<atomic-color-facet\n  depends-on-abc\n  ...\n></atomic-color-facet>\n\n<!-- To show the facet when value \"doc\" is selected in the facet with id \"abc\": -->\n<atomic-color-facet\n  depends-on-abc=\"doc\"\n  ...\n></atomic-color-facet>\n```"
            },
            {
              "kind": "field",
              "name": "allowedValues",
              "type": {
                "text": "string[] | string"
              },
              "privacy": "public",
              "default": "'[]'",
              "description": "Specifies an explicit list of `allowedValues` in the Search API request. This list is in the form of a JSON string.\n\nIf you specify a list of values for this option, the facet only uses these values (if they are available in\nthe current result set).\n\nExample:\n\nThe following facet only uses the `Contact`, `Account`, and `File` values of the `objecttype` field. Even if the\ncurrent result set contains other `objecttype` values, such as `Message` or `Product`, the facet does not use\nthem.\n\n```html\n<atomic-color-facet field=\"objecttype\" allowed-values='[\"Contact\",\"Account\",\"File\"]'></atomic-color-facet>\n```\n\nThe maximum amount of allowed values is 25.\n\nThe default value is `undefined`, and the facet uses all available values for its `field` in the current result set."
            },
            {
              "kind": "field",
              "name": "customSort",
              "type": {
                "text": "string[] | string"
              },
              "privacy": "public",
              "default": "'[]'",
              "description": "Identifies the facet values that must appear at the top, in this order.\nThis parameter can be used in conjunction with the `sortCriteria` parameter.\n\nFacet values not part of the `customSort` list will be sorted according to the `sortCriteria`.\n\nExample:\n\nThe following facet will sort the `Contact`, `Account`, and `File` values at the top of the list for the `objecttype` field.\n\nIf there are more than these 3 values available, the rest of the list will be sorted using `occurrences`.\n\n```html\n<atomic-color-facet field=\"objecttype\" custom-sort='[\"Contact\",\"Account\",\"File\"]' sort-criteria='occurrences'></atomic-color-facet>\n```\nThe maximum amount of custom sort values is 25.\n\nThe default value is `undefined`, and the facet values will be sorted using only the `sortCriteria`."
            },
            {
              "kind": "field",
              "name": "facetSearchAriaMessage",
              "type": {
                "text": "string"
              },
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "initialize",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "render",
              "privacy": "public"
            }
          ],
          "attributes": [
            {
              "name": "facet-id",
              "fieldName": "facetId",
              "type": {
                "text": "string | undefined"
              },
              "description": "Specifies a unique identifier for the facet."
            },
            {
              "name": "label",
              "fieldName": "label",
              "type": {
                "text": "string"
              },
              "default": "'no-label'",
              "description": "The non-localized label for the facet.\nUsed in the `atomic-breadbox` component through the bindings store."
            },
            {
              "name": "field",
              "fieldName": "field",
              "type": {
                "text": "string"
              },
              "description": "The field whose values you want to display in the facet."
            },
            {
              "name": "number-of-values",
              "fieldName": "numberOfValues",
              "type": {
                "text": "number"
              },
              "default": "8",
              "description": "The number of values to request for this facet.\nAlso determines the number of additional values to request each time more values are shown."
            },
            {
              "name": "with-search",
              "fieldName": "withSearch",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "description": "Whether this facet should contain a search box."
            },
            {
              "name": "sort-criteria",
              "fieldName": "sortCriteria",
              "type": {
                "text": "FacetSortCriterion"
              },
              "default": "'automatic'",
              "description": "The sort criterion to apply to the returned facet values.\nPossible values are 'score', 'alphanumeric', 'occurrences', and 'automatic'."
            },
            {
              "name": "results-must-match",
              "fieldName": "resultsMustMatch",
              "type": {
                "text": "FacetResultsMustMatch"
              },
              "default": "'atLeastOneValue'",
              "description": "Specifies how a result must match the selected facet values.\nAllowed values:\n- `atLeastOneValue`: A result will match if at least one of the corresponding facet values is selected.\n- `allValues`: A result will match if all corresponding facet values are selected."
            },
            {
              "name": "display-values-as",
              "fieldName": "displayValuesAs",
              "type": {
                "text": "'checkbox' | 'box'"
              },
              "default": "'box'",
              "description": "Whether to display the facet values as checkboxes (multiple selection) or boxes (multiple selection).\nPossible values are 'checkbox', and 'box'."
            },
            {
              "name": "is-collapsed",
              "fieldName": "isCollapsed",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Specifies whether the facet is collapsed. When the facet is the child of an `atomic-facet-manager` component, the facet manager controls this property."
            },
            {
              "name": "heading-level",
              "fieldName": "headingLevel",
              "type": {
                "text": "number"
              },
              "default": "0",
              "description": "The [heading level](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/Heading_Elements) to use for the heading over the facet, from 1 to 6."
            },
            {
              "name": "filter-facet-count",
              "fieldName": "filterFacetCount",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "description": "Whether to exclude the parents of folded results when estimating the result count for each facet value."
            },
            {
              "name": "injection-depth",
              "fieldName": "injectionDepth",
              "type": {
                "text": "number"
              },
              "default": "1000",
              "description": "The maximum number of results to scan in the index to ensure that the facet lists all potential facet values.\nNote: A high injectionDepth may negatively impact the facet request performance.\nMinimum: `0`\nDefault: `1000`"
            },
            {
              "name": "depends-on",
              "fieldName": "dependsOn",
              "type": {
                "text": "Record<string, string>"
              },
              "default": "{}",
              "description": "The required facets and values for this facet to be displayed.\nExamples:\n```html\n<atomic-facet facet-id=\"abc\" field=\"objecttype\" ...></atomic-facet>\n\n<!-- To show the facet when any value is selected in the facet with id \"abc\": -->\n<atomic-color-facet\n  depends-on-abc\n  ...\n></atomic-color-facet>\n\n<!-- To show the facet when value \"doc\" is selected in the facet with id \"abc\": -->\n<atomic-color-facet\n  depends-on-abc=\"doc\"\n  ...\n></atomic-color-facet>\n```"
            },
            {
              "name": "allowed-values",
              "fieldName": "allowedValues",
              "type": {
                "text": "string[] | string"
              },
              "default": "'[]'",
              "description": "Specifies an explicit list of `allowedValues` in the Search API request. This list is in the form of a JSON string.\n\nIf you specify a list of values for this option, the facet only uses these values (if they are available in\nthe current result set).\n\nExample:\n\nThe following facet only uses the `Contact`, `Account`, and `File` values of the `objecttype` field. Even if the\ncurrent result set contains other `objecttype` values, such as `Message` or `Product`, the facet does not use\nthem.\n\n```html\n<atomic-color-facet field=\"objecttype\" allowed-values='[\"Contact\",\"Account\",\"File\"]'></atomic-color-facet>\n```\n\nThe maximum amount of allowed values is 25.\n\nThe default value is `undefined`, and the facet uses all available values for its `field` in the current result set."
            },
            {
              "name": "custom-sort",
              "fieldName": "customSort",
              "type": {
                "text": "string[] | string"
              },
              "default": "'[]'",
              "description": "Identifies the facet values that must appear at the top, in this order.\nThis parameter can be used in conjunction with the `sortCriteria` parameter.\n\nFacet values not part of the `customSort` list will be sorted according to the `sortCriteria`.\n\nExample:\n\nThe following facet will sort the `Contact`, `Account`, and `File` values at the top of the list for the `objecttype` field.\n\nIf there are more than these 3 values available, the rest of the list will be sorted using `occurrences`.\n\n```html\n<atomic-color-facet field=\"objecttype\" custom-sort='[\"Contact\",\"Account\",\"File\"]' sort-criteria='occurrences'></atomic-color-facet>\n```\nThe maximum amount of custom sort values is 25.\n\nThe default value is `undefined`, and the facet values will be sorted using only the `sortCriteria`."
            }
          ],
          "tagName": "atomic-color-facet",
          "events": [],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AtomicColorFacet",
          "declaration": {
            "name": "AtomicColorFacet",
            "module": "src/components/search/facets/atomic-color-facet/atomic-color-facet.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "atomic-color-facet",
          "declaration": {
            "name": "AtomicColorFacet",
            "module": "src/components/search/facets/atomic-color-facet/atomic-color-facet.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/search/facets/atomic-facet/atomic-facet.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "A facet is a list of values for a certain field occurring in the results, ordered using a configurable criteria (e.g., number of occurrences).\nAn `atomic-facet` displays a facet of the results for the current query.",
          "name": "AtomicFacet",
          "cssParts": [
            {
              "description": "The wrapper for the entire facet.",
              "name": "facet"
            },
            {
              "description": "The placeholder shown before the first search is executed.",
              "name": "placeholder"
            },
            {
              "description": "The button that displays the label and allows to expand/collapse the facet.",
              "name": "label-button"
            },
            {
              "description": "The label button icon.",
              "name": "label-button-icon"
            },
            {
              "description": "The button that resets the actively selected facet values.",
              "name": "clear-button"
            },
            {
              "description": "The clear button icon.",
              "name": "clear-button-icon"
            },
            {
              "description": "The search box wrapper.",
              "name": "search-wrapper"
            },
            {
              "description": "The search box input.",
              "name": "search-input"
            },
            {
              "description": "The search box submit button.",
              "name": "search-icon"
            },
            {
              "description": "The button to clear the search box of input.",
              "name": "search-clear-button"
            },
            {
              "description": "The label indicating there are more matches for the current facet search query.",
              "name": "more-matches"
            },
            {
              "description": "The label indicating there are no matches for the current facet search query.",
              "name": "no-matches"
            },
            {
              "description": "The highlighted query inside the matches labels.",
              "name": "matches-query"
            },
            {
              "description": "The highlighted query inside the facet values.",
              "name": "search-highlight"
            },
            {
              "description": "The facet values container.",
              "name": "values"
            },
            {
              "description": "The facet value label, common for all displays.",
              "name": "value-label"
            },
            {
              "description": "The facet value count, common for all displays.",
              "name": "value-count"
            },
            {
              "description": "The facet value checkbox, available when display is 'checkbox'.",
              "name": "value-checkbox"
            },
            {
              "description": "The checked facet value checkbox, available when display is 'checkbox'.",
              "name": "value-checkbox-checked"
            },
            {
              "description": "The facet value checkbox clickable label, available when display is 'checkbox'.",
              "name": "value-checkbox-label"
            },
            {
              "description": "The facet value checkbox icon, available when display is 'checkbox'.",
              "name": "value-checkbox-icon"
            },
            {
              "description": "The facet value when display is 'link'.",
              "name": "value-link"
            },
            {
              "description": "The selected facet value when display is 'link'.",
              "name": "value-link-selected"
            },
            {
              "description": "The facet value when display is 'box'.",
              "name": "value-box"
            },
            {
              "description": "The selected facet value when display is 'box'.",
              "name": "value-box-selected"
            },
            {
              "description": "The button to exclude a facet value, available when display is 'checkbox'.",
              "name": "value-exclude-button"
            },
            {
              "description": "The show more results button.",
              "name": "show-more"
            },
            {
              "description": "The show less results button.",
              "name": "show-less"
            },
            {
              "description": "The icons of the show more & show less buttons.",
              "name": "show-more-less-icon"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "bindings",
              "type": {
                "text": "Bindings"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "facet",
              "type": {
                "text": "Facet"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "searchStatus",
              "type": {
                "text": "SearchStatus"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "facetState",
              "type": {
                "text": "FacetState"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "searchStatusState",
              "type": {
                "text": "SearchStatusState"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "error",
              "type": {
                "text": "Error"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "facetId",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "public",
              "description": "Specifies a unique identifier for the facet."
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "'no-label'",
              "description": "The non-localized label for the facet.\nUsed in the `atomic-breadbox` component through the bindings store."
            },
            {
              "kind": "field",
              "name": "field",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "description": "The field whose values you want to display in the facet."
            },
            {
              "kind": "field",
              "name": "numberOfValues",
              "type": {
                "text": "number"
              },
              "privacy": "public",
              "default": "8",
              "description": "The number of values to request for this facet.\nAlso determines the number of additional values to request each time more values are shown."
            },
            {
              "kind": "field",
              "name": "withSearch",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "true",
              "description": "Whether this facet should contain a search box."
            },
            {
              "kind": "field",
              "name": "sortCriteria",
              "type": {
                "text": "FacetSortCriterion"
              },
              "privacy": "public",
              "default": "'automatic'",
              "description": "The sort criterion to apply to the returned facet values.\nPossible values are 'score', 'alphanumeric', 'alphanumericDescending', 'occurrences', and 'automatic'."
            },
            {
              "kind": "field",
              "name": "resultsMustMatch",
              "type": {
                "text": "FacetResultsMustMatch"
              },
              "privacy": "public",
              "default": "'atLeastOneValue'",
              "description": "Specifies how a result must match the selected facet values.\nAllowed values:\n- `atLeastOneValue`: A result will match if at least one of the corresponding facet values is selected.\n- `allValues`: A result will match if all corresponding facet values are selected."
            },
            {
              "kind": "field",
              "name": "displayValuesAs",
              "type": {
                "text": "'checkbox' | 'link' | 'box'"
              },
              "privacy": "public",
              "default": "'checkbox'",
              "description": "Whether to display the facet values as checkboxes (multiple selection), links (single selection) or boxes (multiple selection).\nPossible values are 'checkbox', 'link', and 'box'."
            },
            {
              "kind": "field",
              "name": "isCollapsed",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "description": "Specifies whether the facet is collapsed. When the facet is the child of an `atomic-facet-manager` component, the facet manager controls this property."
            },
            {
              "kind": "field",
              "name": "headingLevel",
              "type": {
                "text": "number"
              },
              "privacy": "public",
              "default": "0",
              "description": "The [heading level](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/Heading_Elements) to use for the heading over the facet, from 1 to 6."
            },
            {
              "kind": "field",
              "name": "filterFacetCount",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "true",
              "description": "Whether to exclude the parents of folded results when estimating the result count for each facet value."
            },
            {
              "kind": "field",
              "name": "enableExclusion",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "description": "Whether to allow excluding values from the facet."
            },
            {
              "kind": "field",
              "name": "injectionDepth",
              "type": {
                "text": "number"
              },
              "privacy": "public",
              "default": "1000",
              "description": "The maximum number of results to scan in the index to ensure that the facet lists all potential facet values.\nNote: A high injectionDepth may negatively impact the facet request performance.\nMinimum: `0`\nDefault: `1000`"
            },
            {
              "kind": "field",
              "name": "dependsOn",
              "type": {
                "text": "Record<string, string>"
              },
              "privacy": "public",
              "default": "{}",
              "description": "The required facets and values for this facet to be displayed.\nExamples:\n```html\n<atomic-facet facet-id=\"abc\" field=\"objecttype\" ...></atomic-facet>\n\n<!-- To show the facet when any value is selected in the facet with id \"abc\": -->\n<atomic-facet\n  depends-on-abc\n  ...\n></atomic-facet>\n\n<!-- To show the facet when value \"doc\" is selected in the facet with id \"abc\": -->\n<atomic-facet\n  depends-on-abc=\"doc\"\n  ...\n></atomic-facet>\n```"
            },
            {
              "kind": "field",
              "name": "allowedValues",
              "type": {
                "text": "string[] | string"
              },
              "privacy": "public",
              "default": "'[]'",
              "description": "Specifies an explicit list of `allowedValues` in the Search API request, as a JSON string representation.\n\nIf you specify a list of values for this option, the facet uses only these values (if they are available in\nthe current result set).\n\nExample:\n\nThe following facet only uses the `Contact`, `Account`, and `File` values of the `objecttype` field. Even if the\ncurrent result set contains other `objecttype` values, such as `Message`, or `Product`, the facet does not use\nthose other values.\n\n```html\n<atomic-facet field=\"objecttype\" allowed-values='[\"Contact\",\"Account\",\"File\"]'></atomic-facet>\n```\n\nThe maximum amount of allowed values is 25.\n\nDefault value is `undefined`, and the facet uses all available values for its `field` in the current result set."
            },
            {
              "kind": "field",
              "name": "customSort",
              "type": {
                "text": "string[] | string"
              },
              "privacy": "public",
              "default": "'[]'",
              "description": "Identifies the facet values that must appear at the top, in this order.\nThis parameter can be used in conjunction with the `sortCriteria` parameter.\n\nFacet values not part of the `customSort` list will be sorted according to the `sortCriteria`.\n\nExample:\n\nThe following facet will sort the `Contact`, `Account`, and `File` values at the top of the list for the `objecttype` field.\n\nIf there are more than these 3 values available, the rest of the list will be sorted using `occurrences`.\n\n```html\n<atomic-facet field=\"objecttype\" custom-sort='[\"Contact\",\"Account\",\"File\"]' sort-criteria='occurrences'></atomic-facet>\n```\nThe maximum amount of custom sort values is 25.\n\nThe default value is `undefined`, and the facet values will be sorted using only the `sortCriteria`."
            },
            {
              "kind": "field",
              "name": "facetSearchAriaMessage",
              "type": {
                "text": "string"
              },
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "initialize",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "render",
              "privacy": "public"
            }
          ],
          "attributes": [
            {
              "name": "facet-id",
              "fieldName": "facetId",
              "type": {
                "text": "string | undefined"
              },
              "description": "Specifies a unique identifier for the facet."
            },
            {
              "name": "label",
              "fieldName": "label",
              "type": {
                "text": "string"
              },
              "default": "'no-label'",
              "description": "The non-localized label for the facet.\nUsed in the `atomic-breadbox` component through the bindings store."
            },
            {
              "name": "field",
              "fieldName": "field",
              "type": {
                "text": "string"
              },
              "description": "The field whose values you want to display in the facet."
            },
            {
              "name": "number-of-values",
              "fieldName": "numberOfValues",
              "type": {
                "text": "number"
              },
              "default": "8",
              "description": "The number of values to request for this facet.\nAlso determines the number of additional values to request each time more values are shown."
            },
            {
              "name": "with-search",
              "fieldName": "withSearch",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "description": "Whether this facet should contain a search box."
            },
            {
              "name": "sort-criteria",
              "fieldName": "sortCriteria",
              "type": {
                "text": "FacetSortCriterion"
              },
              "default": "'automatic'",
              "description": "The sort criterion to apply to the returned facet values.\nPossible values are 'score', 'alphanumeric', 'alphanumericDescending', 'occurrences', and 'automatic'."
            },
            {
              "name": "results-must-match",
              "fieldName": "resultsMustMatch",
              "type": {
                "text": "FacetResultsMustMatch"
              },
              "default": "'atLeastOneValue'",
              "description": "Specifies how a result must match the selected facet values.\nAllowed values:\n- `atLeastOneValue`: A result will match if at least one of the corresponding facet values is selected.\n- `allValues`: A result will match if all corresponding facet values are selected."
            },
            {
              "name": "display-values-as",
              "fieldName": "displayValuesAs",
              "type": {
                "text": "'checkbox' | 'link' | 'box'"
              },
              "default": "'checkbox'",
              "description": "Whether to display the facet values as checkboxes (multiple selection), links (single selection) or boxes (multiple selection).\nPossible values are 'checkbox', 'link', and 'box'."
            },
            {
              "name": "is-collapsed",
              "fieldName": "isCollapsed",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Specifies whether the facet is collapsed. When the facet is the child of an `atomic-facet-manager` component, the facet manager controls this property."
            },
            {
              "name": "heading-level",
              "fieldName": "headingLevel",
              "type": {
                "text": "number"
              },
              "default": "0",
              "description": "The [heading level](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/Heading_Elements) to use for the heading over the facet, from 1 to 6."
            },
            {
              "name": "filter-facet-count",
              "fieldName": "filterFacetCount",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "description": "Whether to exclude the parents of folded results when estimating the result count for each facet value."
            },
            {
              "name": "enable-exclusion",
              "fieldName": "enableExclusion",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether to allow excluding values from the facet."
            },
            {
              "name": "injection-depth",
              "fieldName": "injectionDepth",
              "type": {
                "text": "number"
              },
              "default": "1000",
              "description": "The maximum number of results to scan in the index to ensure that the facet lists all potential facet values.\nNote: A high injectionDepth may negatively impact the facet request performance.\nMinimum: `0`\nDefault: `1000`"
            },
            {
              "name": "depends-on",
              "fieldName": "dependsOn",
              "type": {
                "text": "Record<string, string>"
              },
              "default": "{}",
              "description": "The required facets and values for this facet to be displayed.\nExamples:\n```html\n<atomic-facet facet-id=\"abc\" field=\"objecttype\" ...></atomic-facet>\n\n<!-- To show the facet when any value is selected in the facet with id \"abc\": -->\n<atomic-facet\n  depends-on-abc\n  ...\n></atomic-facet>\n\n<!-- To show the facet when value \"doc\" is selected in the facet with id \"abc\": -->\n<atomic-facet\n  depends-on-abc=\"doc\"\n  ...\n></atomic-facet>\n```"
            },
            {
              "name": "allowed-values",
              "fieldName": "allowedValues",
              "type": {
                "text": "string[] | string"
              },
              "default": "'[]'",
              "description": "Specifies an explicit list of `allowedValues` in the Search API request, as a JSON string representation.\n\nIf you specify a list of values for this option, the facet uses only these values (if they are available in\nthe current result set).\n\nExample:\n\nThe following facet only uses the `Contact`, `Account`, and `File` values of the `objecttype` field. Even if the\ncurrent result set contains other `objecttype` values, such as `Message`, or `Product`, the facet does not use\nthose other values.\n\n```html\n<atomic-facet field=\"objecttype\" allowed-values='[\"Contact\",\"Account\",\"File\"]'></atomic-facet>\n```\n\nThe maximum amount of allowed values is 25.\n\nDefault value is `undefined`, and the facet uses all available values for its `field` in the current result set."
            },
            {
              "name": "custom-sort",
              "fieldName": "customSort",
              "type": {
                "text": "string[] | string"
              },
              "default": "'[]'",
              "description": "Identifies the facet values that must appear at the top, in this order.\nThis parameter can be used in conjunction with the `sortCriteria` parameter.\n\nFacet values not part of the `customSort` list will be sorted according to the `sortCriteria`.\n\nExample:\n\nThe following facet will sort the `Contact`, `Account`, and `File` values at the top of the list for the `objecttype` field.\n\nIf there are more than these 3 values available, the rest of the list will be sorted using `occurrences`.\n\n```html\n<atomic-facet field=\"objecttype\" custom-sort='[\"Contact\",\"Account\",\"File\"]' sort-criteria='occurrences'></atomic-facet>\n```\nThe maximum amount of custom sort values is 25.\n\nThe default value is `undefined`, and the facet values will be sorted using only the `sortCriteria`."
            }
          ],
          "tagName": "atomic-facet",
          "events": [],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AtomicFacet",
          "declaration": {
            "name": "AtomicFacet",
            "module": "src/components/search/facets/atomic-facet/atomic-facet.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "atomic-facet",
          "declaration": {
            "name": "AtomicFacet",
            "module": "src/components/search/facets/atomic-facet/atomic-facet.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/search/facets/atomic-numeric-facet/atomic-numeric-facet.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "A facet is a list of values for a certain field occurring in the results, ordered using a configurable criteria (e.g., ascending, descending).\nAn `atomic-numeric-facet` displays a facet of the results for the current query as numeric ranges.",
          "name": "AtomicNumericFacet",
          "cssParts": [
            {
              "description": "The wrapper for the entire facet.",
              "name": "facet"
            },
            {
              "description": "The placeholder shown before the first search is executed.",
              "name": "placeholder"
            },
            {
              "description": "The button that displays the label and allows to expand/collapse the facet.",
              "name": "label-button"
            },
            {
              "description": "The label button icon.",
              "name": "label-button-icon"
            },
            {
              "description": "The button that resets the actively selected facet values.",
              "name": "clear-button"
            },
            {
              "description": "The clear button icon.",
              "name": "clear-button-icon"
            },
            {
              "description": "The facet values container.",
              "name": "values"
            },
            {
              "description": "The facet value label, common for all displays.",
              "name": "value-label"
            },
            {
              "description": "The facet value count, common for all displays.",
              "name": "value-count"
            },
            {
              "description": "The facet value checkbox, available when display is 'checkbox'.",
              "name": "value-checkbox"
            },
            {
              "description": "The checked facet value checkbox, available when display is 'checkbox'.",
              "name": "value-checkbox-checked"
            },
            {
              "description": "The facet value checkbox clickable label, available when display is 'checkbox'.",
              "name": "value-checkbox-label"
            },
            {
              "description": "The facet value checkbox icon, available when display is 'checkbox'.",
              "name": "value-checkbox-icon"
            },
            {
              "description": "The facet value when display is 'link'.",
              "name": "value-link"
            },
            {
              "description": "The selected facet value when display is 'link'.",
              "name": "value-link-selected"
            },
            {
              "description": "The form that comprises the labels, inputs, and 'apply' button for the custom numeric range.",
              "name": "input-form"
            },
            {
              "description": "The label for the starting value of the custom numeric range.",
              "name": "label-start"
            },
            {
              "description": "The label for the ending value of the custom numeric range.",
              "name": "label-end"
            },
            {
              "description": "The input for the starting value of the custom numeric range.",
              "name": "input-start"
            },
            {
              "description": "The input for the ending value of the custom numeric range.",
              "name": "input-end"
            },
            {
              "description": "The apply button for the custom range.",
              "name": "input-apply-button"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "bindings",
              "type": {
                "text": "Bindings"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "facetForRange",
              "type": {
                "text": "NumericFacet | undefined"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "facetForInput",
              "type": {
                "text": "NumericFacet | undefined"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "filter",
              "type": {
                "text": "NumericFilter"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "searchStatus",
              "type": {
                "text": "SearchStatus"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "facetState",
              "type": {
                "text": "NumericFacetState"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "filterState",
              "type": {
                "text": "NumericFilterState | undefined"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "searchStatusState",
              "type": {
                "text": "SearchStatusState"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "error",
              "type": {
                "text": "Error"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "facetForInputState",
              "type": {
                "text": "NumericFacetState | undefined"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "facetId",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "public",
              "description": "Specifies a unique identifier for the facet."
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "'no-label'",
              "description": "The non-localized label for the facet.\nUsed in the `atomic-breadbox` component through the bindings store."
            },
            {
              "kind": "field",
              "name": "field",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "description": "The field whose values you want to display in the facet."
            },
            {
              "kind": "field",
              "name": "numberOfValues",
              "type": {
                "text": "number"
              },
              "privacy": "public",
              "default": "8",
              "description": "The number of values to request for this facet, when there are no manual ranges.\nIf the number of values is 0, no ranges will be displayed."
            },
            {
              "kind": "field",
              "name": "withInput",
              "type": {
                "text": "NumberInputType | undefined"
              },
              "privacy": "public",
              "description": "Whether this facet should contain an input allowing users to set custom ranges.\nDepending on the field, the input can allow either decimal or integer values."
            },
            {
              "kind": "field",
              "name": "sortCriteria",
              "type": {
                "text": "RangeFacetSortCriterion"
              },
              "privacy": "public",
              "default": "'ascending'",
              "description": "The sort criterion to apply to the returned facet values.\nPossible values are 'ascending' and 'descending'."
            },
            {
              "kind": "field",
              "name": "rangeAlgorithm",
              "type": {
                "text": "RangeFacetRangeAlgorithm"
              },
              "privacy": "public",
              "default": "'equiprobable'",
              "description": "The algorithm that's used for generating the ranges of this facet when they aren't manually defined. The default value of `\"equiprobable\"` generates facet ranges which vary in size but have a more balanced number of results within each range. The value of `\"even\"` generates equally sized facet ranges across all of the results."
            },
            {
              "kind": "field",
              "name": "displayValuesAs",
              "type": {
                "text": "'checkbox' | 'link'"
              },
              "privacy": "public",
              "default": "'checkbox'",
              "description": "Whether to display the facet values as checkboxes (multiple selection) or links (single selection).\nPossible values are 'checkbox' and 'link'."
            },
            {
              "kind": "field",
              "name": "isCollapsed",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "description": "Specifies whether the facet is collapsed. When the facet is the child of an `atomic-facet-manager` component, the facet manager controls this property."
            },
            {
              "kind": "field",
              "name": "headingLevel",
              "type": {
                "text": "number"
              },
              "privacy": "public",
              "default": "0",
              "description": "The [heading level](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/Heading_Elements) to use for the heading over the facet, from 1 to 6."
            },
            {
              "kind": "field",
              "name": "filterFacetCount",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "true",
              "description": "Whether to exclude the parents of folded results when estimating the result count for each facet value."
            },
            {
              "kind": "field",
              "name": "injectionDepth",
              "type": {
                "text": "number"
              },
              "privacy": "public",
              "default": "1000",
              "description": "The maximum number of results to scan in the index to ensure that the facet lists all potential facet values.\nNote: A high injectionDepth may negatively impact the facet request performance.\nMinimum: `0`\nDefault: `1000`"
            },
            {
              "kind": "field",
              "name": "dependsOn",
              "type": {
                "text": "Record<string, string>"
              },
              "privacy": "public",
              "default": "{}",
              "description": "The required facets and values for this facet to be displayed.\nExamples:\n```html\n<atomic-facet facet-id=\"abc\" field=\"objecttype\" ...></atomic-facet>\n\n<!-- To show the facet when any value is selected in the facet with id \"abc\": -->\n<atomic-numeric-facet\n  depends-on-abc\n  ...\n></atomic-numeric-facet>\n\n<!-- To show the facet when value \"doc\" is selected in the facet with id \"abc\": -->\n<atomic-numeric-facet\n  depends-on-abc=\"doc\"\n  ...\n></atomic-numeric-facet>\n```"
            },
            {
              "kind": "method",
              "name": "initialize",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "setFormat",
              "privacy": "public",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "CustomEvent<NumberFormatter>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "applyNumberInput",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "render",
              "privacy": "public"
            }
          ],
          "attributes": [
            {
              "name": "facet-id",
              "fieldName": "facetId",
              "type": {
                "text": "string | undefined"
              },
              "description": "Specifies a unique identifier for the facet."
            },
            {
              "name": "label",
              "fieldName": "label",
              "type": {
                "text": "string"
              },
              "default": "'no-label'",
              "description": "The non-localized label for the facet.\nUsed in the `atomic-breadbox` component through the bindings store."
            },
            {
              "name": "field",
              "fieldName": "field",
              "type": {
                "text": "string"
              },
              "description": "The field whose values you want to display in the facet."
            },
            {
              "name": "number-of-values",
              "fieldName": "numberOfValues",
              "type": {
                "text": "number"
              },
              "default": "8",
              "description": "The number of values to request for this facet, when there are no manual ranges.\nIf the number of values is 0, no ranges will be displayed."
            },
            {
              "name": "with-input",
              "fieldName": "withInput",
              "type": {
                "text": "NumberInputType | undefined"
              },
              "description": "Whether this facet should contain an input allowing users to set custom ranges.\nDepending on the field, the input can allow either decimal or integer values."
            },
            {
              "name": "sort-criteria",
              "fieldName": "sortCriteria",
              "type": {
                "text": "RangeFacetSortCriterion"
              },
              "default": "'ascending'",
              "description": "The sort criterion to apply to the returned facet values.\nPossible values are 'ascending' and 'descending'."
            },
            {
              "name": "range-algorithm",
              "fieldName": "rangeAlgorithm",
              "type": {
                "text": "RangeFacetRangeAlgorithm"
              },
              "default": "'equiprobable'",
              "description": "The algorithm that's used for generating the ranges of this facet when they aren't manually defined. The default value of `\"equiprobable\"` generates facet ranges which vary in size but have a more balanced number of results within each range. The value of `\"even\"` generates equally sized facet ranges across all of the results."
            },
            {
              "name": "display-values-as",
              "fieldName": "displayValuesAs",
              "type": {
                "text": "'checkbox' | 'link'"
              },
              "default": "'checkbox'",
              "description": "Whether to display the facet values as checkboxes (multiple selection) or links (single selection).\nPossible values are 'checkbox' and 'link'."
            },
            {
              "name": "is-collapsed",
              "fieldName": "isCollapsed",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Specifies whether the facet is collapsed. When the facet is the child of an `atomic-facet-manager` component, the facet manager controls this property."
            },
            {
              "name": "heading-level",
              "fieldName": "headingLevel",
              "type": {
                "text": "number"
              },
              "default": "0",
              "description": "The [heading level](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/Heading_Elements) to use for the heading over the facet, from 1 to 6."
            },
            {
              "name": "filter-facet-count",
              "fieldName": "filterFacetCount",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "description": "Whether to exclude the parents of folded results when estimating the result count for each facet value."
            },
            {
              "name": "injection-depth",
              "fieldName": "injectionDepth",
              "type": {
                "text": "number"
              },
              "default": "1000",
              "description": "The maximum number of results to scan in the index to ensure that the facet lists all potential facet values.\nNote: A high injectionDepth may negatively impact the facet request performance.\nMinimum: `0`\nDefault: `1000`"
            },
            {
              "name": "depends-on",
              "fieldName": "dependsOn",
              "type": {
                "text": "Record<string, string>"
              },
              "default": "{}",
              "description": "The required facets and values for this facet to be displayed.\nExamples:\n```html\n<atomic-facet facet-id=\"abc\" field=\"objecttype\" ...></atomic-facet>\n\n<!-- To show the facet when any value is selected in the facet with id \"abc\": -->\n<atomic-numeric-facet\n  depends-on-abc\n  ...\n></atomic-numeric-facet>\n\n<!-- To show the facet when value \"doc\" is selected in the facet with id \"abc\": -->\n<atomic-numeric-facet\n  depends-on-abc=\"doc\"\n  ...\n></atomic-numeric-facet>\n```"
            }
          ],
          "tagName": "atomic-numeric-facet",
          "events": [],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AtomicNumericFacet",
          "declaration": {
            "name": "AtomicNumericFacet",
            "module": "src/components/search/facets/atomic-numeric-facet/atomic-numeric-facet.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "atomic-numeric-facet",
          "declaration": {
            "name": "AtomicNumericFacet",
            "module": "src/components/search/facets/atomic-numeric-facet/atomic-numeric-facet.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/search/facets/atomic-popover/atomic-popover.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "The `atomic-popover` component displays any facet as a popover menu.",
          "name": "AtomicPopover",
          "cssParts": [
            {
              "description": "The transparent backdrop hiding the content behind popover menu.",
              "name": "backdrop"
            },
            {
              "description": "The button to click to display or hide the popover menu.",
              "name": "popover-button"
            },
            {
              "description": "The associated facet label.",
              "name": "value-label"
            },
            {
              "description": "Number of selected values for the facet",
              "name": "value-count"
            },
            {
              "description": "The arrow icon on the button to display or hide the popover menu.",
              "name": "arrow-icon"
            },
            {
              "description": "The placeholder displayed when the facet is loading.",
              "name": "placeholder"
            },
            {
              "description": "The wrapper that contains the slotted 'facet'.",
              "name": "facet"
            }
          ],
          "slots": [
            {
              "description": "The required slotted facet.",
              "name": "default"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "bindings",
              "type": {
                "text": "Bindings"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "searchStatusState",
              "type": {
                "text": "SearchStatusState"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "facetState",
              "type": {
                "text": "FacetState"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "error",
              "type": {
                "text": "Error"
              },
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "initialize",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "initializePopover",
              "privacy": "public",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "CustomEvent<PopoverChildFacet>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleKeyDown",
              "privacy": "public",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "KeyboardEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "render",
              "privacy": "public"
            }
          ],
          "tagName": "atomic-popover",
          "events": [],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AtomicPopover",
          "declaration": {
            "name": "AtomicPopover",
            "module": "src/components/search/facets/atomic-popover/atomic-popover.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "atomic-popover",
          "declaration": {
            "name": "AtomicPopover",
            "module": "src/components/search/facets/atomic-popover/atomic-popover.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/search/facets/atomic-rating-range-facet/atomic-rating-range-facet.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "A facet is a list of values for a certain field occurring in the results, ordered using a configurable criteria (e.g., number of occurrences).\nAn `atomic-rating-range-facet` displays a facet of the results for the current query as ratings.\nIt only supports numeric fields.",
          "name": "AtomicRatingRangeFacet",
          "cssParts": [
            {
              "description": "The wrapper for the entire facet.",
              "name": "facet"
            },
            {
              "description": "The placeholder shown before the first search is executed.",
              "name": "placeholder"
            },
            {
              "description": "The button that displays the label and toggles to expand or collapse the facet.",
              "name": "label-button"
            },
            {
              "description": "The label button icon.",
              "name": "label-button-icon"
            },
            {
              "description": "The button that resets the actively selected facet values.",
              "name": "clear-button"
            },
            {
              "description": "The clear button icon.",
              "name": "clear-button-icon"
            },
            {
              "description": "The facet values container.",
              "name": "values"
            },
            {
              "description": "The facet value label, common for all displays.",
              "name": "value-label"
            },
            {
              "description": "The facet value count, common for all displays.",
              "name": "value-count"
            },
            {
              "description": "The facet value when display is 'link'.",
              "name": "value-link"
            },
            {
              "description": "The selected facet value when display is 'link'.",
              "name": "value-link-selected"
            },
            {
              "description": "The facet value when display is 'box'.",
              "name": "value-box"
            },
            {
              "description": "The selected facet value when display is 'box'.",
              "name": "value-box-selected"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "bindings",
              "type": {
                "text": "Bindings"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "facet",
              "type": {
                "text": "NumericFacet"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "searchStatus",
              "type": {
                "text": "SearchStatus"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "facetState",
              "type": {
                "text": "NumericFacetState"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "searchStatusState",
              "type": {
                "text": "SearchStatusState"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "error",
              "type": {
                "text": "Error"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "facetId",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "public",
              "description": "Specifies a unique identifier for the facet."
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "'no-label'",
              "description": "The non-localized label for the facet.\nUsed in the `atomic-breadbox` component through the bindings store."
            },
            {
              "kind": "field",
              "name": "field",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "description": "The field whose values you want to display in the facet."
            },
            {
              "kind": "field",
              "name": "numberOfIntervals",
              "type": {
                "text": "number"
              },
              "privacy": "public",
              "default": "5",
              "description": "The number of options to display in the facet. If `maxValueInIndex` isn't specified, it will be assumed that this is also the maximum number of rating icons."
            },
            {
              "kind": "field",
              "name": "maxValueInIndex",
              "privacy": "public",
              "description": "The maximum value in the field's index and the number of rating icons to display in the facet. This property will default to the same value as `numberOfIntervals`, if not assigned a value."
            },
            {
              "kind": "field",
              "name": "minValueInIndex",
              "type": {
                "text": "number"
              },
              "privacy": "public",
              "default": "1",
              "description": "The minimum value of the field."
            },
            {
              "kind": "field",
              "name": "icon",
              "privacy": "public",
              "default": "Star",
              "description": "The SVG icon to use to display the rating.\n\n- Use a value that starts with `http://`, `https://`, `./`, or `../`, to fetch and display an icon from a given location.\n- Use a value that starts with `assets://`, to display an icon from the Atomic package.\n- Use a stringified SVG to display it directly.\n\nWhen using a custom icon, at least part of your icon should have the color set to `fill=\"currentColor\"`.\nThis part of the SVG will take on the colors set in the following [variables](https://developer.mozilla.org/en-US/docs/Web/CSS/Using_CSS_custom_properties):\n\n- `--atomic-rating-icon-active-color`\n- `--atomic-rating-icon-inactive-color`"
            },
            {
              "kind": "field",
              "name": "isCollapsed",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "description": "Specifies whether the facet is collapsed. When the facet is the child of an `atomic-facet-manager` component, the facet manager controls this property."
            },
            {
              "kind": "field",
              "name": "headingLevel",
              "type": {
                "text": "number"
              },
              "privacy": "public",
              "default": "0",
              "description": "The [heading level](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/Heading_Elements) to use for the heading over the facet, from 1 to 6."
            },
            {
              "kind": "field",
              "name": "filterFacetCount",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "true",
              "description": "Whether to exclude the parents of folded results when estimating the result count for each facet value."
            },
            {
              "kind": "field",
              "name": "injectionDepth",
              "type": {
                "text": "number"
              },
              "privacy": "public",
              "default": "1000",
              "description": "The maximum number of results to scan in the index to ensure that the facet lists all potential facet values.\nNote: A high injectionDepth may negatively impact the facet request performance.\nMinimum: `0`\nDefault: `1000`"
            },
            {
              "kind": "field",
              "name": "dependsOn",
              "type": {
                "text": "Record<string, string>"
              },
              "privacy": "public",
              "default": "{}",
              "description": "The required facets and values for this facet to be displayed.\nExamples:\n```html\n<atomic-facet facet-id=\"abc\" field=\"objecttype\" ...></atomic-facet>\n\n<!-- To show the facet when any value is selected in the facet with id \"abc\": -->\n<atomic-rating-range-facet\n  depends-on-abc\n  ...\n></atomic-rating-range-facet>\n\n<!-- To show the facet when value \"doc\" is selected in the facet with id \"abc\": -->\n<atomic-rating-range-facet\n  depends-on-abc=\"doc\"\n  ...\n></atomic-rating-range-facet>\n```"
            },
            {
              "kind": "method",
              "name": "initialize",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "render",
              "privacy": "public"
            }
          ],
          "attributes": [
            {
              "name": "facet-id",
              "fieldName": "facetId",
              "type": {
                "text": "string | undefined"
              },
              "description": "Specifies a unique identifier for the facet."
            },
            {
              "name": "label",
              "fieldName": "label",
              "type": {
                "text": "string"
              },
              "default": "'no-label'",
              "description": "The non-localized label for the facet.\nUsed in the `atomic-breadbox` component through the bindings store."
            },
            {
              "name": "field",
              "fieldName": "field",
              "type": {
                "text": "string"
              },
              "description": "The field whose values you want to display in the facet."
            },
            {
              "name": "number-of-intervals",
              "fieldName": "numberOfIntervals",
              "type": {
                "text": "number"
              },
              "default": "5",
              "description": "The number of options to display in the facet. If `maxValueInIndex` isn't specified, it will be assumed that this is also the maximum number of rating icons."
            },
            {
              "name": "max-value-in-index",
              "fieldName": "maxValueInIndex",
              "description": "The maximum value in the field's index and the number of rating icons to display in the facet. This property will default to the same value as `numberOfIntervals`, if not assigned a value."
            },
            {
              "name": "min-value-in-index",
              "fieldName": "minValueInIndex",
              "type": {
                "text": "number"
              },
              "default": "1",
              "description": "The minimum value of the field."
            },
            {
              "name": "icon",
              "fieldName": "icon",
              "default": "Star",
              "description": "The SVG icon to use to display the rating.\n\n- Use a value that starts with `http://`, `https://`, `./`, or `../`, to fetch and display an icon from a given location.\n- Use a value that starts with `assets://`, to display an icon from the Atomic package.\n- Use a stringified SVG to display it directly.\n\nWhen using a custom icon, at least part of your icon should have the color set to `fill=\"currentColor\"`.\nThis part of the SVG will take on the colors set in the following [variables](https://developer.mozilla.org/en-US/docs/Web/CSS/Using_CSS_custom_properties):\n\n- `--atomic-rating-icon-active-color`\n- `--atomic-rating-icon-inactive-color`"
            },
            {
              "name": "is-collapsed",
              "fieldName": "isCollapsed",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Specifies whether the facet is collapsed. When the facet is the child of an `atomic-facet-manager` component, the facet manager controls this property."
            },
            {
              "name": "heading-level",
              "fieldName": "headingLevel",
              "type": {
                "text": "number"
              },
              "default": "0",
              "description": "The [heading level](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/Heading_Elements) to use for the heading over the facet, from 1 to 6."
            },
            {
              "name": "filter-facet-count",
              "fieldName": "filterFacetCount",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "description": "Whether to exclude the parents of folded results when estimating the result count for each facet value."
            },
            {
              "name": "injection-depth",
              "fieldName": "injectionDepth",
              "type": {
                "text": "number"
              },
              "default": "1000",
              "description": "The maximum number of results to scan in the index to ensure that the facet lists all potential facet values.\nNote: A high injectionDepth may negatively impact the facet request performance.\nMinimum: `0`\nDefault: `1000`"
            },
            {
              "name": "depends-on",
              "fieldName": "dependsOn",
              "type": {
                "text": "Record<string, string>"
              },
              "default": "{}",
              "description": "The required facets and values for this facet to be displayed.\nExamples:\n```html\n<atomic-facet facet-id=\"abc\" field=\"objecttype\" ...></atomic-facet>\n\n<!-- To show the facet when any value is selected in the facet with id \"abc\": -->\n<atomic-rating-range-facet\n  depends-on-abc\n  ...\n></atomic-rating-range-facet>\n\n<!-- To show the facet when value \"doc\" is selected in the facet with id \"abc\": -->\n<atomic-rating-range-facet\n  depends-on-abc=\"doc\"\n  ...\n></atomic-rating-range-facet>\n```"
            }
          ],
          "tagName": "atomic-rating-range-facet",
          "events": [],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AtomicRatingRangeFacet",
          "declaration": {
            "name": "AtomicRatingRangeFacet",
            "module": "src/components/search/facets/atomic-rating-range-facet/atomic-rating-range-facet.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "atomic-rating-range-facet",
          "declaration": {
            "name": "AtomicRatingRangeFacet",
            "module": "src/components/search/facets/atomic-rating-range-facet/atomic-rating-range-facet.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/search/facets/atomic-rating-facet/atomic-rating-facet.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "A facet is a list of values for a certain field occurring in the results, ordered using a configurable criteria (e.g., number of occurrences).\nAn `atomic-rating-facet` displays a facet of the results for the current query as ratings.\nIt only supports numeric fields.",
          "name": "AtomicRatingFacet",
          "cssParts": [
            {
              "description": "The wrapper for the entire facet.",
              "name": "facet"
            },
            {
              "description": "The placeholder shown before the first search is executed.",
              "name": "placeholder"
            },
            {
              "description": "The button that displays the label and toggles to expand or collapse the facet.",
              "name": "label-button"
            },
            {
              "description": "The label button icon.",
              "name": "label-button-icon"
            },
            {
              "description": "The button that resets the actively selected facet values.",
              "name": "clear-button"
            },
            {
              "description": "The clear button icon.",
              "name": "clear-button-icon"
            },
            {
              "description": "The facet values container.",
              "name": "values"
            },
            {
              "description": "The facet value count, common for all displays.",
              "name": "value-count"
            },
            {
              "description": "The facet value rating, common for all displays.",
              "name": "value-rating"
            },
            {
              "description": "The facet value checkbox, available when display is 'checkbox'.",
              "name": "value-checkbox"
            },
            {
              "description": "The checked facet value checkbox, available when display is 'checkbox'.",
              "name": "value-checkbox-checked"
            },
            {
              "description": "The facet value checkbox clickable label, available when display is 'checkbox'.",
              "name": "value-checkbox-label"
            },
            {
              "description": "The facet value checkbox icon, available when display is 'checkbox'.",
              "name": "value-checkbox-icon"
            },
            {
              "description": "The facet value when display is 'link'.",
              "name": "value-link"
            },
            {
              "description": "The selected facet value when display is 'link'.",
              "name": "value-link-selected"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "bindings",
              "type": {
                "text": "Bindings"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "facet",
              "type": {
                "text": "NumericFacet"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "searchStatus",
              "type": {
                "text": "SearchStatus"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "facetState",
              "type": {
                "text": "NumericFacetState"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "searchStatusState",
              "type": {
                "text": "SearchStatusState"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "error",
              "type": {
                "text": "Error"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "facetId",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "public",
              "description": "Specifies a unique identifier for the facet."
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "'no-label'",
              "description": "The non-localized label for the facet.\nUsed in the `atomic-breadbox` component through the bindings store."
            },
            {
              "kind": "field",
              "name": "field",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "description": "The field whose values you want to display in the facet."
            },
            {
              "kind": "field",
              "name": "numberOfIntervals",
              "type": {
                "text": "number"
              },
              "privacy": "public",
              "default": "5",
              "description": "The number of options to display in the facet. If `maxValueInIndex` isn't specified, it will be assumed that this is also the maximum number of rating icons."
            },
            {
              "kind": "field",
              "name": "maxValueInIndex",
              "privacy": "public",
              "description": "The maximum value in the field's index and the number of rating icons to display in the facet. If not assigned a value, this property will default to the same value as `numberOfIntervals`."
            },
            {
              "kind": "field",
              "name": "minValueInIndex",
              "type": {
                "text": "number"
              },
              "privacy": "public",
              "default": "1",
              "description": "The minimum value of the field."
            },
            {
              "kind": "field",
              "name": "displayValuesAs",
              "type": {
                "text": "'checkbox' | 'link'"
              },
              "privacy": "public",
              "default": "'checkbox'",
              "description": "Whether to display the facet values as checkboxes (multiple selection) or links (single selection).\nPossible values are 'checkbox' and 'link'."
            },
            {
              "kind": "field",
              "name": "icon",
              "privacy": "public",
              "default": "Star",
              "description": "The SVG icon to use to display the rating.\n\n- Use a value that starts with `http://`, `https://`, `./`, or `../`, to fetch and display an icon from a given location.\n- Use a value that starts with `assets://`, to display an icon from the Atomic package.\n- Use a stringified SVG to display it directly.\n\nWhen using a custom icon, at least part of your icon should have the color set to `fill=\"currentColor\"`.\nThis part of the SVG will take on the colors set in the following [variables](https://developer.mozilla.org/en-US/docs/Web/CSS/Using_CSS_custom_properties):\n\n- `--atomic-rating-icon-active-color`\n- `--atomic-rating-icon-inactive-color`"
            },
            {
              "kind": "field",
              "name": "isCollapsed",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "description": "Specifies whether the facet is collapsed. When the facet is the child of an `atomic-facet-manager` component, the facet manager controls this property."
            },
            {
              "kind": "field",
              "name": "headingLevel",
              "type": {
                "text": "number"
              },
              "privacy": "public",
              "default": "0",
              "description": "The [heading level](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/Heading_Elements) to use for the heading over the facet, from 1 to 6."
            },
            {
              "kind": "field",
              "name": "filterFacetCount",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "true",
              "description": "Whether to exclude the parents of folded results when estimating the result count for each facet value."
            },
            {
              "kind": "field",
              "name": "injectionDepth",
              "type": {
                "text": "number"
              },
              "privacy": "public",
              "default": "1000",
              "description": "The maximum number of results to scan in the index to ensure that the facet lists all potential facet values.\nNote: A high injectionDepth may negatively impact the facet request performance.\nMinimum: `0`"
            },
            {
              "kind": "field",
              "name": "dependsOn",
              "type": {
                "text": "Record<string, string>"
              },
              "privacy": "public",
              "default": "{}",
              "description": "The required facets and values for this facet to be displayed.\nExamples:\n```html\n<atomic-facet facet-id=\"abc\" field=\"objecttype\" ...></atomic-facet>\n\n<!-- To show the facet when any value is selected in the facet with id \"abc\": -->\n<atomic-rating-facet\n  depends-on-abc\n  ...\n></atomic-rating-facet>\n\n<!-- To show the facet when value \"doc\" is selected in the facet with id \"abc\": -->\n<atomic-rating-facet\n  depends-on-abc=\"doc\"\n  ...\n></atomic-rating-facet>\n```"
            },
            {
              "kind": "method",
              "name": "initialize",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "render",
              "privacy": "public"
            }
          ],
          "attributes": [
            {
              "name": "facet-id",
              "fieldName": "facetId",
              "type": {
                "text": "string | undefined"
              },
              "description": "Specifies a unique identifier for the facet."
            },
            {
              "name": "label",
              "fieldName": "label",
              "type": {
                "text": "string"
              },
              "default": "'no-label'",
              "description": "The non-localized label for the facet.\nUsed in the `atomic-breadbox` component through the bindings store."
            },
            {
              "name": "field",
              "fieldName": "field",
              "type": {
                "text": "string"
              },
              "description": "The field whose values you want to display in the facet."
            },
            {
              "name": "number-of-intervals",
              "fieldName": "numberOfIntervals",
              "type": {
                "text": "number"
              },
              "default": "5",
              "description": "The number of options to display in the facet. If `maxValueInIndex` isn't specified, it will be assumed that this is also the maximum number of rating icons."
            },
            {
              "name": "max-value-in-index",
              "fieldName": "maxValueInIndex",
              "description": "The maximum value in the field's index and the number of rating icons to display in the facet. If not assigned a value, this property will default to the same value as `numberOfIntervals`."
            },
            {
              "name": "min-value-in-index",
              "fieldName": "minValueInIndex",
              "type": {
                "text": "number"
              },
              "default": "1",
              "description": "The minimum value of the field."
            },
            {
              "name": "display-values-as",
              "fieldName": "displayValuesAs",
              "type": {
                "text": "'checkbox' | 'link'"
              },
              "default": "'checkbox'",
              "description": "Whether to display the facet values as checkboxes (multiple selection) or links (single selection).\nPossible values are 'checkbox' and 'link'."
            },
            {
              "name": "icon",
              "fieldName": "icon",
              "default": "Star",
              "description": "The SVG icon to use to display the rating.\n\n- Use a value that starts with `http://`, `https://`, `./`, or `../`, to fetch and display an icon from a given location.\n- Use a value that starts with `assets://`, to display an icon from the Atomic package.\n- Use a stringified SVG to display it directly.\n\nWhen using a custom icon, at least part of your icon should have the color set to `fill=\"currentColor\"`.\nThis part of the SVG will take on the colors set in the following [variables](https://developer.mozilla.org/en-US/docs/Web/CSS/Using_CSS_custom_properties):\n\n- `--atomic-rating-icon-active-color`\n- `--atomic-rating-icon-inactive-color`"
            },
            {
              "name": "is-collapsed",
              "fieldName": "isCollapsed",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Specifies whether the facet is collapsed. When the facet is the child of an `atomic-facet-manager` component, the facet manager controls this property."
            },
            {
              "name": "heading-level",
              "fieldName": "headingLevel",
              "type": {
                "text": "number"
              },
              "default": "0",
              "description": "The [heading level](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/Heading_Elements) to use for the heading over the facet, from 1 to 6."
            },
            {
              "name": "filter-facet-count",
              "fieldName": "filterFacetCount",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "description": "Whether to exclude the parents of folded results when estimating the result count for each facet value."
            },
            {
              "name": "injection-depth",
              "fieldName": "injectionDepth",
              "type": {
                "text": "number"
              },
              "default": "1000",
              "description": "The maximum number of results to scan in the index to ensure that the facet lists all potential facet values.\nNote: A high injectionDepth may negatively impact the facet request performance.\nMinimum: `0`"
            },
            {
              "name": "depends-on",
              "fieldName": "dependsOn",
              "type": {
                "text": "Record<string, string>"
              },
              "default": "{}",
              "description": "The required facets and values for this facet to be displayed.\nExamples:\n```html\n<atomic-facet facet-id=\"abc\" field=\"objecttype\" ...></atomic-facet>\n\n<!-- To show the facet when any value is selected in the facet with id \"abc\": -->\n<atomic-rating-facet\n  depends-on-abc\n  ...\n></atomic-rating-facet>\n\n<!-- To show the facet when value \"doc\" is selected in the facet with id \"abc\": -->\n<atomic-rating-facet\n  depends-on-abc=\"doc\"\n  ...\n></atomic-rating-facet>\n```"
            }
          ],
          "tagName": "atomic-rating-facet",
          "events": [],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AtomicRatingFacet",
          "declaration": {
            "name": "AtomicRatingFacet",
            "module": "src/components/search/facets/atomic-rating-facet/atomic-rating-facet.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "atomic-rating-facet",
          "declaration": {
            "name": "AtomicRatingFacet",
            "module": "src/components/search/facets/atomic-rating-facet/atomic-rating-facet.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/search/facets/atomic-segmented-facet/atomic-segmented-facet.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "The `atomic-segmented-facet` displays a horizontal facet of the results for the current query.",
          "name": "AtomicSegmentedFacet",
          "cssParts": [
            {
              "description": "The container that holds the segmented facets.",
              "name": "segmented-container"
            },
            {
              "description": "The facet value label.",
              "name": "label"
            },
            {
              "description": "The facet values container.",
              "name": "values"
            },
            {
              "description": "The facet value.",
              "name": "value-box"
            },
            {
              "description": "The selected facet value.",
              "name": "value-box-selected"
            },
            {
              "description": "The placeholder displayed when the facet is loading.",
              "name": "placeholder"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "bindings",
              "type": {
                "text": "Bindings"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "searchStatus",
              "type": {
                "text": "SearchStatus"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "searchStatusState",
              "type": {
                "text": "SearchStatusState"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "facetState",
              "type": {
                "text": "FacetState"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "facet",
              "type": {
                "text": "Facet"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "error",
              "type": {
                "text": "Error"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "facetId",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "public",
              "description": "Specifies a unique identifier for the facet."
            },
            {
              "kind": "field",
              "name": "field",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "description": "The field whose values you want to display in the facet."
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "public",
              "description": "The non-localized label for the facet.\nUsed in the `atomic-breadbox` component through the bindings store."
            },
            {
              "kind": "field",
              "name": "filterFacetCount",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "true",
              "description": "Whether to exclude the parents of folded results when estimating the result count for each facet value."
            },
            {
              "kind": "field",
              "name": "injectionDepth",
              "type": {
                "text": "number"
              },
              "privacy": "public",
              "default": "1000",
              "description": "The maximum number of results to scan in the index to ensure that the facet lists all potential facet values.\nNote: A high injectionDepth may negatively impact the facet request performance.\nMinimum: `0`\nDefault: `1000`"
            },
            {
              "kind": "field",
              "name": "numberOfValues",
              "type": {
                "text": "number"
              },
              "privacy": "public",
              "default": "6",
              "description": "The number of values to request for this facet.\nAlso determines the number of additional values to request each time more values are shown."
            },
            {
              "kind": "field",
              "name": "sortCriteria",
              "type": {
                "text": "FacetSortCriterion"
              },
              "privacy": "public",
              "default": "'automatic'",
              "description": "The sort criterion to apply to the returned facet values.\nPossible values are 'score', 'alphanumeric', 'occurrences', and 'automatic'."
            },
            {
              "kind": "field",
              "name": "dependsOn",
              "type": {
                "text": "Record<string, string>"
              },
              "privacy": "public",
              "default": "{}",
              "description": "The required facets and values for this facet to be displayed.\nExamples:\n```html\n<atomic-segmented-facet facet-id=\"abc\" field=\"objecttype\" ...></atomic-segmented-facet>\n\n<!-- To show the facet when any value is selected in the facet with id \"abc\": -->\n<atomic-segmented-facet\n  depends-on-abc\n  ...\n></atomic-segmented-facet>\n\n<!-- To show the facet when value \"doc\" is selected in the facet with id \"abc\": -->\n<atomic-facet\n  depends-on-abc=\"doc\"\n  ...\n></atomic-segmented-facet>\n```"
            },
            {
              "kind": "field",
              "name": "allowedValues",
              "type": {
                "text": "string[] | string"
              },
              "privacy": "public",
              "default": "'[]'",
              "description": "Specifies an explicit list of `allowedValues` in the Search API request. This list is in the form of a JSON string.\n\nIf you specify a list of values for this option, the facet only uses these values (if they are available in\nthe current result set).\n\nExample:\n\nThe following facet only uses the `Contact`, `Account`, and `File` values of the `objecttype` field. Even if the\ncurrent result set contains other `objecttype` values, such as `Message` or `Product`, the facet does not use\nthem.\n\n```html\n<atomic-segmented-facet field=\"objecttype\" allowed-values='[\"Contact\",\"Account\",\"File\"]'></atomic-segmented-facet>\n```\n\nThe maximum amount of allowed values is 25.\n\nThe default value is `undefined`, and the facet uses all available values for its `field` in the current result set."
            },
            {
              "kind": "field",
              "name": "customSort",
              "type": {
                "text": "string[] | string"
              },
              "privacy": "public",
              "default": "'[]'",
              "description": "Identifies the facet values that must appear at the top, in this order.\nThis parameter can be used in conjunction with the `sortCriteria` parameter.\n\nFacet values not part of the `customSort` list will be sorted according to the `sortCriteria`.\n\nExample:\n\nThe following facet will sort the `Contact`, `Account`, and `File` values at the top of the list for the `objecttype` field.\n\nIf there are more than these 3 values available, the rest of the list will be sorted using `occurrences`.\n\n```html\n<atomic-segmented-facet field=\"objecttype\" custom-sort='[\"Contact\",\"Account\",\"File\"]' sort-criteria='occurrences'></atomic-segmented-facet>\n```\nThe maximum amount of custom sort values is 25.\n\nThe default value is `undefined`, and the facet values will be sorted using only the `sortCriteria`."
            },
            {
              "kind": "method",
              "name": "initialize",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "render",
              "privacy": "public"
            }
          ],
          "attributes": [
            {
              "name": "facet-id",
              "fieldName": "facetId",
              "type": {
                "text": "string | undefined"
              },
              "description": "Specifies a unique identifier for the facet."
            },
            {
              "name": "field",
              "fieldName": "field",
              "type": {
                "text": "string"
              },
              "description": "The field whose values you want to display in the facet."
            },
            {
              "name": "label",
              "fieldName": "label",
              "type": {
                "text": "string | undefined"
              },
              "description": "The non-localized label for the facet.\nUsed in the `atomic-breadbox` component through the bindings store."
            },
            {
              "name": "filter-facet-count",
              "fieldName": "filterFacetCount",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "description": "Whether to exclude the parents of folded results when estimating the result count for each facet value."
            },
            {
              "name": "injection-depth",
              "fieldName": "injectionDepth",
              "type": {
                "text": "number"
              },
              "default": "1000",
              "description": "The maximum number of results to scan in the index to ensure that the facet lists all potential facet values.\nNote: A high injectionDepth may negatively impact the facet request performance.\nMinimum: `0`\nDefault: `1000`"
            },
            {
              "name": "number-of-values",
              "fieldName": "numberOfValues",
              "type": {
                "text": "number"
              },
              "default": "6",
              "description": "The number of values to request for this facet.\nAlso determines the number of additional values to request each time more values are shown."
            },
            {
              "name": "sort-criteria",
              "fieldName": "sortCriteria",
              "type": {
                "text": "FacetSortCriterion"
              },
              "default": "'automatic'",
              "description": "The sort criterion to apply to the returned facet values.\nPossible values are 'score', 'alphanumeric', 'occurrences', and 'automatic'."
            },
            {
              "name": "depends-on",
              "fieldName": "dependsOn",
              "type": {
                "text": "Record<string, string>"
              },
              "default": "{}",
              "description": "The required facets and values for this facet to be displayed.\nExamples:\n```html\n<atomic-segmented-facet facet-id=\"abc\" field=\"objecttype\" ...></atomic-segmented-facet>\n\n<!-- To show the facet when any value is selected in the facet with id \"abc\": -->\n<atomic-segmented-facet\n  depends-on-abc\n  ...\n></atomic-segmented-facet>\n\n<!-- To show the facet when value \"doc\" is selected in the facet with id \"abc\": -->\n<atomic-facet\n  depends-on-abc=\"doc\"\n  ...\n></atomic-segmented-facet>\n```"
            },
            {
              "name": "allowed-values",
              "fieldName": "allowedValues",
              "type": {
                "text": "string[] | string"
              },
              "default": "'[]'",
              "description": "Specifies an explicit list of `allowedValues` in the Search API request. This list is in the form of a JSON string.\n\nIf you specify a list of values for this option, the facet only uses these values (if they are available in\nthe current result set).\n\nExample:\n\nThe following facet only uses the `Contact`, `Account`, and `File` values of the `objecttype` field. Even if the\ncurrent result set contains other `objecttype` values, such as `Message` or `Product`, the facet does not use\nthem.\n\n```html\n<atomic-segmented-facet field=\"objecttype\" allowed-values='[\"Contact\",\"Account\",\"File\"]'></atomic-segmented-facet>\n```\n\nThe maximum amount of allowed values is 25.\n\nThe default value is `undefined`, and the facet uses all available values for its `field` in the current result set."
            },
            {
              "name": "custom-sort",
              "fieldName": "customSort",
              "type": {
                "text": "string[] | string"
              },
              "default": "'[]'",
              "description": "Identifies the facet values that must appear at the top, in this order.\nThis parameter can be used in conjunction with the `sortCriteria` parameter.\n\nFacet values not part of the `customSort` list will be sorted according to the `sortCriteria`.\n\nExample:\n\nThe following facet will sort the `Contact`, `Account`, and `File` values at the top of the list for the `objecttype` field.\n\nIf there are more than these 3 values available, the rest of the list will be sorted using `occurrences`.\n\n```html\n<atomic-segmented-facet field=\"objecttype\" custom-sort='[\"Contact\",\"Account\",\"File\"]' sort-criteria='occurrences'></atomic-segmented-facet>\n```\nThe maximum amount of custom sort values is 25.\n\nThe default value is `undefined`, and the facet values will be sorted using only the `sortCriteria`."
            }
          ],
          "tagName": "atomic-segmented-facet",
          "events": [],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AtomicSegmentedFacet",
          "declaration": {
            "name": "AtomicSegmentedFacet",
            "module": "src/components/search/facets/atomic-segmented-facet/atomic-segmented-facet.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "atomic-segmented-facet",
          "declaration": {
            "name": "AtomicSegmentedFacet",
            "module": "src/components/search/facets/atomic-segmented-facet/atomic-segmented-facet.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/search/facets/atomic-segmented-facet-scrollable/atomic-segmented-facet-scrollable.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "The 'atomic-segmented-facet-scrollable' component wraps around one or several 'atomic-segmented-facet' to provide horizontal scrolling capabilities.",
          "name": "AtomicSegmentedFacetScrollable",
          "cssParts": [
            {
              "description": "The wrapper for the entire component including the horizontal-scroll container and the arrow buttons.",
              "name": "scrollable-container"
            },
            {
              "description": "The scrollable container for the segmented facets.",
              "name": "horizontal-scroll"
            },
            {
              "description": "The wrapper for the arrow button & fade on the left.",
              "name": "left-arrow-wrapper"
            },
            {
              "description": "The wrapper for the arrow button & fade on the right.",
              "name": "right-arrow-wrapper"
            },
            {
              "description": "The arrow button used to scroll on the left.",
              "name": "left-arrow-button"
            },
            {
              "description": "The arrow button used to scroll on the right.",
              "name": "right-arrow-button"
            },
            {
              "description": "The arrow icon on the left.",
              "name": "left-arrow-icon"
            },
            {
              "description": "The arrow icon on the right.",
              "name": "right-arrow-icon"
            },
            {
              "description": "The white to transparent gradient on the left.",
              "name": "left-fade"
            },
            {
              "description": "The white to transparent gradient on the right.",
              "name": "right-fade"
            }
          ],
          "slots": [
            {
              "description": "One or multiple atomic-segmented-facet components",
              "name": "default"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "bindings",
              "type": {
                "text": "Bindings"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "searchStatus",
              "type": {
                "text": "SearchStatus"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "searchStatusState",
              "type": {
                "text": "SearchStatusState"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "error",
              "type": {
                "text": "Error"
              },
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "initialize",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "handleScroll",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "render",
              "privacy": "public"
            }
          ],
          "tagName": "atomic-segmented-facet-scrollable",
          "events": [],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AtomicSegmentedFacetScrollable",
          "declaration": {
            "name": "AtomicSegmentedFacetScrollable",
            "module": "src/components/search/facets/atomic-segmented-facet-scrollable/atomic-segmented-facet-scrollable.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "atomic-segmented-facet-scrollable",
          "declaration": {
            "name": "AtomicSegmentedFacetScrollable",
            "module": "src/components/search/facets/atomic-segmented-facet-scrollable/atomic-segmented-facet-scrollable.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/search/facets/atomic-timeframe-facet/atomic-timeframe-facet.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "A facet is a list of values for a certain field occurring in the results.\nAn `atomic-timeframe-facet` displays a facet of the results for the current query as date intervals.",
          "name": "AtomicTimeframeFacet",
          "cssParts": [
            {
              "description": "The wrapper for the entire facet.",
              "name": "facet"
            },
            {
              "description": "The placeholder shown before the first search is executed.",
              "name": "placeholder"
            },
            {
              "description": "The button that displays the label and allows to expand/collapse the facet.",
              "name": "label-button"
            },
            {
              "description": "The label button icon.",
              "name": "label-button-icon"
            },
            {
              "description": "The button that resets the actively selected facet values.",
              "name": "clear-button"
            },
            {
              "description": "The clear button icon.",
              "name": "clear-button-icon"
            },
            {
              "description": "The facet values container.",
              "name": "values"
            },
            {
              "description": "The facet value label, common for all displays.",
              "name": "value-label"
            },
            {
              "description": "The facet value count, common for all displays.",
              "name": "value-count"
            },
            {
              "description": "The facet value when display is 'link'.",
              "name": "value-link"
            },
            {
              "description": "The selected facet value when display is 'link'.",
              "name": "value-link-selected"
            },
            {
              "description": "The input for the starting value of the custom date range.",
              "name": "input-start"
            },
            {
              "description": "The input for the ending value of the custom date range.",
              "name": "input-end"
            },
            {
              "description": "The label for both the start and end input.",
              "name": "input-label"
            },
            {
              "description": "The apply button for the custom range.",
              "name": "input-apply-button"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "bindings",
              "type": {
                "text": "Bindings"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "facetForDateRange",
              "type": {
                "text": "DateFacet | undefined"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "facetForDatePicker",
              "type": {
                "text": "DateFacet | undefined"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "filter",
              "type": {
                "text": "DateFilter | undefined"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "searchStatus",
              "type": {
                "text": "SearchStatus"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "facetState",
              "type": {
                "text": "DateFacetState"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "facetForDatePickerState",
              "type": {
                "text": "DateFacetState | undefined"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "filterState",
              "type": {
                "text": "DateFilterState | undefined"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "searchStatusState",
              "type": {
                "text": "SearchStatusState"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "error",
              "type": {
                "text": "Error"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "facetId",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "public",
              "description": "Specifies a unique identifier for the facet."
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "'no-label'",
              "description": "The non-localized label for the facet.\nUsed in the atomic-breadbox component through the bindings store."
            },
            {
              "kind": "field",
              "name": "field",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "'date'",
              "description": "The field whose values you want to display in the facet."
            },
            {
              "kind": "field",
              "name": "withDatePicker",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "description": "Whether this facet should contain an datepicker allowing users to set custom ranges."
            },
            {
              "kind": "field",
              "name": "isCollapsed",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "description": "Specifies whether the facet is collapsed. When the facet is the child of an `atomic-facet-manager` component, the facet manager controls this property."
            },
            {
              "kind": "field",
              "name": "headingLevel",
              "type": {
                "text": "number"
              },
              "privacy": "public",
              "default": "0",
              "description": "The [heading level](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/Heading_Elements) to use for the heading over the facet, from 1 to 6."
            },
            {
              "kind": "field",
              "name": "filterFacetCount",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "true",
              "description": "Whether to exclude the parents of folded results when estimating the result count for each facet value."
            },
            {
              "kind": "field",
              "name": "injectionDepth",
              "type": {
                "text": "number"
              },
              "privacy": "public",
              "default": "1000",
              "description": "The maximum number of results to scan in the index to ensure that the facet lists all potential facet values.\nNote: A high injectionDepth may negatively impact the facet request performance.\nMinimum: `0`\nDefault: `1000`"
            },
            {
              "kind": "field",
              "name": "dependsOn",
              "type": {
                "text": "Record<string, string>"
              },
              "privacy": "public",
              "default": "{}",
              "description": "The required facets and values for this facet to be displayed.\nExamples:\n```html\n<atomic-facet facet-id=\"abc\" field=\"objecttype\" ...></atomic-facet>\n\n<!-- To show the facet when any value is selected in the facet with id \"abc\": -->\n<atomic-timeframe-facet\n  depends-on-abc\n  ...\n></atomic-timeframe-facet>\n\n<!-- To show the facet when value \"doc\" is selected in the facet with id \"abc\": -->\n<atomic-timeframe-facet\n  depends-on-abc=\"doc\"\n  ...\n></atomic-timeframe-facet>\n```"
            },
            {
              "kind": "field",
              "name": "min",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "public",
              "description": "The earliest date to accept from user input when the `withDatepicker` option is enabled.\n\nThis value must be a valid date string in the format `YYYY-MM-DD`.\n\nIf this format is not respected, the date picker ignores this property, behaving as if no `min` value had been set.\n\nSee also [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/date#min)."
            },
            {
              "kind": "field",
              "name": "max",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "public",
              "description": "The latest date to accept from user input when the `withDatepicker` option is enabled.\n\nThis value must be a valid date string in the format `YYYY-MM-DD`.\n\nIf this format is not respected, the date picker ignores this property, behaving as if no `max` value had been set.\n\nSee also [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/date#max)."
            },
            {
              "kind": "field",
              "name": "sortCriteria",
              "type": {
                "text": "RangeFacetSortCriterion"
              },
              "privacy": "public",
              "default": "'descending'",
              "description": "The sort criterion to apply to the returned facet values.\nPossible values are 'ascending' and 'descending'."
            },
            {
              "kind": "method",
              "name": "initialize",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "applyDateInput",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "render",
              "privacy": "public"
            }
          ],
          "attributes": [
            {
              "name": "facet-id",
              "fieldName": "facetId",
              "type": {
                "text": "string | undefined"
              },
              "description": "Specifies a unique identifier for the facet."
            },
            {
              "name": "label",
              "fieldName": "label",
              "type": {
                "text": "string"
              },
              "default": "'no-label'",
              "description": "The non-localized label for the facet.\nUsed in the atomic-breadbox component through the bindings store."
            },
            {
              "name": "field",
              "fieldName": "field",
              "type": {
                "text": "string"
              },
              "default": "'date'",
              "description": "The field whose values you want to display in the facet."
            },
            {
              "name": "with-date-picker",
              "fieldName": "withDatePicker",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether this facet should contain an datepicker allowing users to set custom ranges."
            },
            {
              "name": "is-collapsed",
              "fieldName": "isCollapsed",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Specifies whether the facet is collapsed. When the facet is the child of an `atomic-facet-manager` component, the facet manager controls this property."
            },
            {
              "name": "heading-level",
              "fieldName": "headingLevel",
              "type": {
                "text": "number"
              },
              "default": "0",
              "description": "The [heading level](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/Heading_Elements) to use for the heading over the facet, from 1 to 6."
            },
            {
              "name": "filter-facet-count",
              "fieldName": "filterFacetCount",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "description": "Whether to exclude the parents of folded results when estimating the result count for each facet value."
            },
            {
              "name": "injection-depth",
              "fieldName": "injectionDepth",
              "type": {
                "text": "number"
              },
              "default": "1000",
              "description": "The maximum number of results to scan in the index to ensure that the facet lists all potential facet values.\nNote: A high injectionDepth may negatively impact the facet request performance.\nMinimum: `0`\nDefault: `1000`"
            },
            {
              "name": "depends-on",
              "fieldName": "dependsOn",
              "type": {
                "text": "Record<string, string>"
              },
              "default": "{}",
              "description": "The required facets and values for this facet to be displayed.\nExamples:\n```html\n<atomic-facet facet-id=\"abc\" field=\"objecttype\" ...></atomic-facet>\n\n<!-- To show the facet when any value is selected in the facet with id \"abc\": -->\n<atomic-timeframe-facet\n  depends-on-abc\n  ...\n></atomic-timeframe-facet>\n\n<!-- To show the facet when value \"doc\" is selected in the facet with id \"abc\": -->\n<atomic-timeframe-facet\n  depends-on-abc=\"doc\"\n  ...\n></atomic-timeframe-facet>\n```"
            },
            {
              "name": "min",
              "fieldName": "min",
              "type": {
                "text": "string | undefined"
              },
              "description": "The earliest date to accept from user input when the `withDatepicker` option is enabled.\n\nThis value must be a valid date string in the format `YYYY-MM-DD`.\n\nIf this format is not respected, the date picker ignores this property, behaving as if no `min` value had been set.\n\nSee also [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/date#min)."
            },
            {
              "name": "max",
              "fieldName": "max",
              "type": {
                "text": "string | undefined"
              },
              "description": "The latest date to accept from user input when the `withDatepicker` option is enabled.\n\nThis value must be a valid date string in the format `YYYY-MM-DD`.\n\nIf this format is not respected, the date picker ignores this property, behaving as if no `max` value had been set.\n\nSee also [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/date#max)."
            },
            {
              "name": "sort-criteria",
              "fieldName": "sortCriteria",
              "type": {
                "text": "RangeFacetSortCriterion"
              },
              "default": "'descending'",
              "description": "The sort criterion to apply to the returned facet values.\nPossible values are 'ascending' and 'descending'."
            }
          ],
          "tagName": "atomic-timeframe-facet",
          "events": [],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AtomicTimeframeFacet",
          "declaration": {
            "name": "AtomicTimeframeFacet",
            "module": "src/components/search/facets/atomic-timeframe-facet/atomic-timeframe-facet.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "atomic-timeframe-facet",
          "declaration": {
            "name": "AtomicTimeframeFacet",
            "module": "src/components/search/facets/atomic-timeframe-facet/atomic-timeframe-facet.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/search/facets/color-facet-checkbox/color-facet-checkbox.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/search/facets/facet-segmented-value/facet-segmented-value.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/search/result-lists/atomic-folded-result-list/atomic-folded-result-list.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "The `atomic-folded-result-list` component is responsible for displaying folded query results, by applying one or more result templates for up to three layers (i.e., to the result, child and grandchild).",
          "name": "AtomicFoldedResultList",
          "cssParts": [
            {
              "description": "The element containing every result of a result list",
              "name": "result-list"
            },
            {
              "description": "The element displaying an outline or a divider around a result",
              "name": "outline"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "bindings",
              "type": {
                "text": "Bindings"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "foldedResultList",
              "type": {
                "text": "FoldedResultList"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "resultsPerPage",
              "type": {
                "text": "ResultsPerPage"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "host",
              "type": {
                "text": "HTMLDivElement"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "foldedResultListState",
              "type": {
                "text": "FoldedResultListState"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "resultsPerPageState",
              "type": {
                "text": "ResultsPerPageState"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "error",
              "type": {
                "text": "Error"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "density",
              "type": {
                "text": "ItemDisplayDensity"
              },
              "default": "'normal'",
              "description": "The spacing of various elements in the result list, including the gap between results, the gap between parts of a result, and the font sizes of different parts in a result."
            },
            {
              "kind": "field",
              "name": "imageSize",
              "type": {
                "text": "ItemDisplayImageSize"
              },
              "default": "'icon'",
              "description": "The expected size of the image displayed in the results."
            },
            {
              "kind": "field",
              "name": "collectionField",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "public",
              "description": "The name of the field on which to do the folding. The folded result list component will use the values of this field to resolve the collections of result items."
            },
            {
              "kind": "field",
              "name": "parentField",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "public",
              "description": "The name of the field that determines whether a certain result is a top result containing other child results within a collection."
            },
            {
              "kind": "field",
              "name": "childField",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "public",
              "description": "The name of the field that uniquely identifies a result within a collection."
            },
            {
              "kind": "field",
              "name": "numberOfFoldedResults",
              "type": {
                "text": "number"
              },
              "privacy": "public",
              "default": "2",
              "description": "The initial number of child results to request for each folded collection, before expansion."
            },
            {
              "kind": "method",
              "name": "setRenderFunction",
              "privacy": "public",
              "parameters": [
                {
                  "name": "resultRenderingFunction",
                  "type": {
                    "text": "ItemRenderingFunction"
                  }
                }
              ],
              "description": "Sets a rendering function to bypass the standard HTML template mechanism for rendering results.\nYou can use this function while working with web frameworks that don't use plain HTML syntax, e.g., React, Angular or Vue.\n\nDo not use this method if you integrate Atomic in a plain HTML deployment."
            },
            {
              "kind": "method",
              "name": "resolveFoldedResultList",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "FoldedItemListStateContextEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "loadCollection",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "CustomEvent<FoldedCollection>"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "focusTarget",
              "privacy": "public",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "initialize",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "render",
              "privacy": "public"
            }
          ],
          "attributes": [
            {
              "name": "density",
              "fieldName": "density",
              "type": {
                "text": "ItemDisplayDensity"
              },
              "default": "'normal'",
              "description": "The spacing of various elements in the result list, including the gap between results, the gap between parts of a result, and the font sizes of different parts in a result."
            },
            {
              "name": "image-size",
              "fieldName": "imageSize",
              "type": {
                "text": "ItemDisplayImageSize"
              },
              "default": "'icon'",
              "description": "The expected size of the image displayed in the results."
            },
            {
              "name": "collection-field",
              "fieldName": "collectionField",
              "type": {
                "text": "string | undefined"
              },
              "description": "The name of the field on which to do the folding. The folded result list component will use the values of this field to resolve the collections of result items."
            },
            {
              "name": "parent-field",
              "fieldName": "parentField",
              "type": {
                "text": "string | undefined"
              },
              "description": "The name of the field that determines whether a certain result is a top result containing other child results within a collection."
            },
            {
              "name": "child-field",
              "fieldName": "childField",
              "type": {
                "text": "string | undefined"
              },
              "description": "The name of the field that uniquely identifies a result within a collection."
            },
            {
              "name": "number-of-folded-results",
              "fieldName": "numberOfFoldedResults",
              "type": {
                "text": "number"
              },
              "default": "2",
              "description": "The initial number of child results to request for each folded collection, before expansion."
            }
          ],
          "tagName": "atomic-folded-result-list",
          "events": [],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AtomicFoldedResultList",
          "declaration": {
            "name": "AtomicFoldedResultList",
            "module": "src/components/search/result-lists/atomic-folded-result-list/atomic-folded-result-list.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "atomic-folded-result-list",
          "declaration": {
            "name": "AtomicFoldedResultList",
            "module": "src/components/search/result-lists/atomic-folded-result-list/atomic-folded-result-list.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/search/result-lists/atomic-result-children/atomic-result-children.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "The `atomic-result-children` component is responsible for displaying child results by applying one or more child result templates.\nIncludes two slots, \"before-children\" and \"after-children\", which allow for rendering content before and after the list of children,\nonly when children exist.",
          "name": "AtomicResultChildren",
          "cssParts": [
            {
              "description": "The wrapper for the message when there are child results",
              "name": "children-root"
            },
            {
              "description": "The wrapper for the message when there are no results.",
              "name": "no-result-root"
            },
            {
              "description": "The button that allows to collapse or show all child results.",
              "name": "show-hide-button"
            }
          ],
          "slots": [
            {
              "description": "Slot that allows rendering content before the list of children, only when children exist.",
              "name": "before-children"
            },
            {
              "description": "Slot that allows rendering content after the list of children, only when children exist.",
              "name": "after-children"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "bindings",
              "type": {
                "text": "Bindings"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "itemTemplateProvider",
              "type": {
                "text": "ItemTemplateProvider | undefined"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "host",
              "type": {
                "text": "HTMLDivElement"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "error",
              "type": {
                "text": "Error"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "inheritTemplates",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether to inherit templates defined in a parent atomic-result-children. Only works for the second level of child nesting."
            },
            {
              "kind": "field",
              "name": "imageSize",
              "type": {
                "text": "ItemDisplayImageSize | undefined"
              },
              "description": "The expected size of the image displayed in the children results."
            },
            {
              "kind": "field",
              "name": "noResultText",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "'no-documents-related'",
              "description": "The non-localized copy for an empty result state. An empty string will result in the component being hidden."
            },
            {
              "kind": "method",
              "name": "resolveChildTemplates",
              "privacy": "public",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "ChildTemplatesContextEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "initialize",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "render",
              "privacy": "public"
            }
          ],
          "attributes": [
            {
              "name": "inherit-templates",
              "fieldName": "inheritTemplates",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether to inherit templates defined in a parent atomic-result-children. Only works for the second level of child nesting."
            },
            {
              "name": "image-size",
              "fieldName": "imageSize",
              "type": {
                "text": "ItemDisplayImageSize | undefined"
              },
              "description": "The expected size of the image displayed in the children results."
            },
            {
              "name": "no-result-text",
              "fieldName": "noResultText",
              "type": {
                "text": "string"
              },
              "default": "'no-documents-related'",
              "description": "The non-localized copy for an empty result state. An empty string will result in the component being hidden."
            }
          ],
          "tagName": "atomic-result-children",
          "events": [],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AtomicResultChildren",
          "declaration": {
            "name": "AtomicResultChildren",
            "module": "src/components/search/result-lists/atomic-result-children/atomic-result-children.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "atomic-result-children",
          "declaration": {
            "name": "AtomicResultChildren",
            "module": "src/components/search/result-lists/atomic-result-children/atomic-result-children.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/search/result-lists/atomic-result-list/atomic-result-list.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "The `atomic-result-list` component is responsible for displaying query results by applying one or more result templates.",
          "name": "AtomicResultList",
          "cssParts": [
            {
              "description": "The element containing every result of a result list",
              "name": "result-list"
            },
            {
              "description": "The element displaying an outline or a divider around a result",
              "name": "outline"
            },
            {
              "description": "The parent of the result & the clickable link encompassing it, when results are displayed as a grid",
              "name": "result-list-grid-clickable-container"
            },
            {
              "description": "The clickable link encompassing the result when results are displayed as a grid",
              "name": "result-list-grid-clickable"
            },
            {
              "description": "The element of the result table containing a heading and a body",
              "name": "result-table"
            },
            {
              "description": "The element containing the row of cells in the result table's heading",
              "name": "result-table-heading"
            },
            {
              "description": "The element containing cells of the result table's heading",
              "name": "result-table-heading-row"
            },
            {
              "description": "The element representing a cell of the result table's heading",
              "name": "result-table-heading-cell"
            },
            {
              "description": "The element containing the rows of the result table's body",
              "name": "result-table-body"
            },
            {
              "description": "The element containing the cells of a row in the result table's body",
              "name": "result-table-row"
            },
            {
              "description": "The element containing the cells of an odd row in the result table's body",
              "name": "result-table-row-odd"
            },
            {
              "description": "The element containing the cells of an even row in the result table's body",
              "name": "result-table-row-even"
            },
            {
              "description": "The element representing a cell of the result table's body",
              "name": "result-table-cell"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "bindings",
              "type": {
                "text": "Bindings"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "resultList",
              "type": {
                "text": "ResultList"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "resultsPerPage",
              "type": {
                "text": "ResultsPerPage"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "host",
              "type": {
                "text": "HTMLDivElement"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "error",
              "type": {
                "text": "Error"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "display",
              "type": {
                "text": "ItemDisplayLayout"
              },
              "privacy": "public",
              "default": "'list'",
              "description": "The desired layout to use when displaying results. Layouts affect how many results to display per row and how visually distinct they are from each other."
            },
            {
              "kind": "field",
              "name": "density",
              "type": {
                "text": "ItemDisplayDensity"
              },
              "privacy": "public",
              "default": "'normal'",
              "description": "The spacing of various elements in the result list, including the gap between results, the gap between parts of a result, and the font sizes of different parts in a result."
            },
            {
              "kind": "field",
              "name": "gridCellLinkTarget",
              "type": {
                "text": "ItemTarget"
              },
              "default": "'_self'",
              "description": "The target location to open the result link (see [target](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#target)).\nThis property is only leveraged when `display` is `grid`."
            },
            {
              "kind": "field",
              "name": "imageSize",
              "type": {
                "text": "ItemDisplayImageSize"
              },
              "privacy": "public",
              "default": "'icon'",
              "description": "The expected size of the image displayed in the results."
            },
            {
              "kind": "method",
              "name": "setRenderFunction",
              "privacy": "public",
              "parameters": [
                {
                  "name": "resultRenderingFunction",
                  "type": {
                    "text": "ItemRenderingFunction"
                  }
                }
              ],
              "description": "Sets a rendering function to bypass the standard HTML template mechanism for rendering results.\nYou can use this function while working with web frameworks that don't use plain HTML syntax, e.g., React, Angular or Vue.\n\nDo not use this method if you integrate Atomic in a plain HTML deployment."
            },
            {
              "kind": "field",
              "name": "focusTarget",
              "privacy": "public",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "initialize",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "render",
              "privacy": "public"
            }
          ],
          "attributes": [
            {
              "name": "display",
              "fieldName": "display",
              "type": {
                "text": "ItemDisplayLayout"
              },
              "default": "'list'",
              "description": "The desired layout to use when displaying results. Layouts affect how many results to display per row and how visually distinct they are from each other."
            },
            {
              "name": "density",
              "fieldName": "density",
              "type": {
                "text": "ItemDisplayDensity"
              },
              "default": "'normal'",
              "description": "The spacing of various elements in the result list, including the gap between results, the gap between parts of a result, and the font sizes of different parts in a result."
            },
            {
              "name": "grid-cell-link-target",
              "fieldName": "gridCellLinkTarget",
              "type": {
                "text": "ItemTarget"
              },
              "default": "'_self'",
              "description": "The target location to open the result link (see [target](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#target)).\nThis property is only leveraged when `display` is `grid`."
            },
            {
              "name": "image-size",
              "fieldName": "imageSize",
              "type": {
                "text": "ItemDisplayImageSize"
              },
              "default": "'icon'",
              "description": "The expected size of the image displayed in the results."
            }
          ],
          "tagName": "atomic-result-list",
          "events": [],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AtomicResultList",
          "declaration": {
            "name": "AtomicResultList",
            "module": "src/components/search/result-lists/atomic-result-list/atomic-result-list.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "atomic-result-list",
          "declaration": {
            "name": "AtomicResultList",
            "module": "src/components/search/result-lists/atomic-result-list/atomic-result-list.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/search/result-template-components/atomic-field-condition/atomic-field-condition.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "The `atomic-field-condition` component takes a list of conditions that, if fulfilled, apply the template in which it's defined.\nThe condition properties can be based on any top-level result property of the `result` object, not restricted to fields (e.g., `isRecommendation`).",
          "name": "AtomicFieldCondition",
          "members": [
            {
              "kind": "field",
              "name": "host",
              "type": {
                "text": "HTMLElement"
              }
            },
            {
              "kind": "field",
              "name": "ifDefined",
              "type": {
                "text": "string | undefined"
              },
              "description": "Verifies whether the specified fields are defined."
            },
            {
              "kind": "field",
              "name": "ifNotDefined",
              "type": {
                "text": "string | undefined"
              },
              "description": "Verifies whether the specified fields are not defined."
            },
            {
              "kind": "field",
              "name": "mustMatch",
              "type": {
                "text": "Record<string, string[]>"
              },
              "default": "{}"
            },
            {
              "kind": "field",
              "name": "mustNotMatch",
              "type": {
                "text": "Record<string, string[]>"
              },
              "default": "{}"
            },
            {
              "kind": "method",
              "name": "render",
              "privacy": "public"
            }
          ],
          "attributes": [
            {
              "name": "if-defined",
              "fieldName": "ifDefined",
              "type": {
                "text": "string | undefined"
              },
              "description": "Verifies whether the specified fields are defined."
            },
            {
              "name": "if-not-defined",
              "fieldName": "ifNotDefined",
              "type": {
                "text": "string | undefined"
              },
              "description": "Verifies whether the specified fields are not defined."
            }
          ],
          "tagName": "atomic-field-condition",
          "events": [],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AtomicFieldCondition",
          "declaration": {
            "name": "AtomicFieldCondition",
            "module": "src/components/search/result-template-components/atomic-field-condition/atomic-field-condition.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "atomic-field-condition",
          "declaration": {
            "name": "AtomicFieldCondition",
            "module": "src/components/search/result-template-components/atomic-field-condition/atomic-field-condition.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/search/result-template-components/atomic-quickview-modal/atomic-quickview-modal.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "The modal opened when clicking on a quickview button.\nDo not use this component directly; use `atomic-quickview` instead.",
          "name": "AtomicQuickviewModal",
          "cssParts": [
            {
              "description": "The close icon of the modal.",
              "name": "quickview-modal-header-icon"
            },
            {
              "description": "The title of the modal.",
              "name": "quickview-modal-header-title"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "bindings",
              "type": {
                "text": "Bindings"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "error",
              "type": {
                "text": "Error"
              },
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "watchHighlightKeywords"
            },
            {
              "kind": "field",
              "name": "content",
              "type": {
                "text": "string | undefined"
              }
            },
            {
              "kind": "field",
              "name": "result",
              "type": {
                "text": "Result | undefined"
              }
            },
            {
              "kind": "field",
              "name": "current",
              "type": {
                "text": "number | undefined"
              }
            },
            {
              "kind": "field",
              "name": "total",
              "type": {
                "text": "number | undefined"
              }
            },
            {
              "kind": "field",
              "name": "sandbox",
              "type": {
                "text": "string | undefined"
              }
            },
            {
              "kind": "field",
              "name": "modalCloseCallback",
              "type": {
                "text": "() => void | undefined"
              }
            },
            {
              "kind": "method",
              "name": "reset",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "render",
              "privacy": "public"
            }
          ],
          "attributes": [
            {
              "name": "content",
              "fieldName": "content",
              "type": {
                "text": "string | undefined"
              }
            },
            {
              "name": "result",
              "fieldName": "result",
              "type": {
                "text": "Result | undefined"
              }
            },
            {
              "name": "current",
              "fieldName": "current",
              "type": {
                "text": "number | undefined"
              }
            },
            {
              "name": "total",
              "fieldName": "total",
              "type": {
                "text": "number | undefined"
              }
            },
            {
              "name": "sandbox",
              "fieldName": "sandbox",
              "type": {
                "text": "string | undefined"
              }
            },
            {
              "name": "modal-close-callback",
              "fieldName": "modalCloseCallback",
              "type": {
                "text": "() => void | undefined"
              }
            }
          ],
          "tagName": "atomic-quickview-modal",
          "events": [
            {
              "name": "atomic/quickview/next",
              "type": {
                "text": "EventEmitter | undefined"
              }
            },
            {
              "name": "atomic/quickview/previous",
              "type": {
                "text": "EventEmitter | undefined"
              }
            }
          ],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AtomicQuickviewModal",
          "declaration": {
            "name": "AtomicQuickviewModal",
            "module": "src/components/search/result-template-components/atomic-quickview-modal/atomic-quickview-modal.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "atomic-quickview-modal",
          "declaration": {
            "name": "AtomicQuickviewModal",
            "module": "src/components/search/result-template-components/atomic-quickview-modal/atomic-quickview-modal.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/search/result-template-components/atomic-quickview/atomic-quickview.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "The `atomic-quickview` component renders a button which the end user can click to open a modal box containing a preview\nabout a result.\n\nThe `atomic-quickview` is not meant to replace the `atomic-result-link` to access an item in a result template; it has certain limitations (e.g., custom styles and embedded\nimages/links may not work as expected in an `atomic-quickview`).",
          "name": "AtomicQuickview",
          "cssParts": [
            {
              "description": "The button that opens the quickview modal on click.",
              "name": "button"
            },
            {
              "description": "The icon for the quickview button.",
              "name": "icon"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "bindings",
              "type": {
                "text": "Bindings"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "error",
              "type": {
                "text": "Error"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "quickview",
              "type": {
                "text": "Quickview"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "quickviewState",
              "type": {
                "text": "QuickviewState"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "sandbox",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "'allow-popups allow-top-navigation allow-same-origin'",
              "description": "The `sandbox` attribute to apply to the quickview iframe.\n\nThe quickview is loaded inside an iframe with a [`sandbox`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe#attr-sandbox) attribute for security reasons.\n\nThis attribute exists primarily to protect against potential XSS attacks that could originate from the document being displayed.\n\nBy default, the sandbox attributes are: `allow-popups allow-top-navigation allow-same-origin`.\n\n`allow-same-origin` is not optional, and must always be included in the list of allowed capabilities for the component to function properly."
            },
            {
              "kind": "field",
              "name": "quickviewAriaMessage",
              "type": {
                "text": "string"
              },
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "onNextQuickview",
              "privacy": "public",
              "parameters": [
                {
                  "name": "evt",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onPreviousQuickview",
              "privacy": "public",
              "parameters": [
                {
                  "name": "evt",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "focusTarget",
              "privacy": "public",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "initialize",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "render",
              "privacy": "public"
            }
          ],
          "attributes": [
            {
              "name": "sandbox",
              "fieldName": "sandbox",
              "type": {
                "text": "string"
              },
              "default": "'allow-popups allow-top-navigation allow-same-origin'",
              "description": "The `sandbox` attribute to apply to the quickview iframe.\n\nThe quickview is loaded inside an iframe with a [`sandbox`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe#attr-sandbox) attribute for security reasons.\n\nThis attribute exists primarily to protect against potential XSS attacks that could originate from the document being displayed.\n\nBy default, the sandbox attributes are: `allow-popups allow-top-navigation allow-same-origin`.\n\n`allow-same-origin` is not optional, and must always be included in the list of allowed capabilities for the component to function properly."
            }
          ],
          "tagName": "atomic-quickview",
          "events": [],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AtomicQuickview",
          "declaration": {
            "name": "AtomicQuickview",
            "module": "src/components/search/result-template-components/atomic-quickview/atomic-quickview.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "atomic-quickview",
          "declaration": {
            "name": "AtomicQuickview",
            "module": "src/components/search/result-template-components/atomic-quickview/atomic-quickview.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/search/result-template-components/atomic-quickview-sidebar/atomic-quickview-sidebar.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/search/result-template-components/atomic-result-date/atomic-result-date.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "The `atomic-result-date` component renders the value of a date result field.",
          "name": "AtomicResultDate",
          "members": [
            {
              "kind": "field",
              "name": "bindings",
              "type": {
                "text": "Bindings"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "host",
              "type": {
                "text": "HTMLElement"
              }
            },
            {
              "kind": "field",
              "name": "error",
              "type": {
                "text": "Error"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "field",
              "type": {
                "text": "string"
              },
              "default": "'date'",
              "description": "The result field which the component should use.\nThis will look for the field in the Result object first, and then in the Result.raw object.\nIt is important to include the necessary field in the `atomic-search-interface` component."
            },
            {
              "kind": "field",
              "name": "format",
              "type": {
                "text": "string"
              },
              "default": "'D/M/YYYY'",
              "description": "Available formats: https://day.js.org/docs/en/display/format"
            },
            {
              "kind": "field",
              "name": "relativeTime",
              "type": {
                "text": "boolean | undefined"
              },
              "description": "Whether the date should display in the [relative time format](https://day.js.org/docs/en/plugin/calendar).\n\nTo modify the relative time string, use the [localization feature](https://docs.coveo.com/en/atomic/latest/usage/atomic-localization/)."
            },
            {
              "kind": "method",
              "name": "render",
              "privacy": "public"
            }
          ],
          "attributes": [
            {
              "name": "field",
              "fieldName": "field",
              "type": {
                "text": "string"
              },
              "default": "'date'",
              "description": "The result field which the component should use.\nThis will look for the field in the Result object first, and then in the Result.raw object.\nIt is important to include the necessary field in the `atomic-search-interface` component."
            },
            {
              "name": "format",
              "fieldName": "format",
              "type": {
                "text": "string"
              },
              "default": "'D/M/YYYY'",
              "description": "Available formats: https://day.js.org/docs/en/display/format"
            },
            {
              "name": "relative-time",
              "fieldName": "relativeTime",
              "type": {
                "text": "boolean | undefined"
              },
              "description": "Whether the date should display in the [relative time format](https://day.js.org/docs/en/plugin/calendar).\n\nTo modify the relative time string, use the [localization feature](https://docs.coveo.com/en/atomic/latest/usage/atomic-localization/)."
            }
          ],
          "tagName": "atomic-result-date",
          "events": [],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AtomicResultDate",
          "declaration": {
            "name": "AtomicResultDate",
            "module": "src/components/search/result-template-components/atomic-result-date/atomic-result-date.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "atomic-result-date",
          "declaration": {
            "name": "AtomicResultDate",
            "module": "src/components/search/result-template-components/atomic-result-date/atomic-result-date.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/search/result-template-components/atomic-result-badge/atomic-result-badge.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "The `atomic-result-badge` element renders a badge to highlight special features of a result.\n\nA badge can either display:\n* Text:\n```html\n<atomic-result-badge label=\"trending\"></atomic-result-badge>\n```\n* The contents of a single-value field:\n```html\n<atomic-result-badge field=\"objecttype\"></atomic-result-badge>\n```\n* An icon:\n```html\n<atomic-result-badge icon=\"https://my-website.fake/star.svg\"></atomic-result-badge>\n```\n* Slotted elements:\n```html\n<atomic-result-badge icon=\"https://my-website.fake/stopwatch.svg\">\n    Deal ends in <my-dynamic-countdown></my-dynamic-countdown>\n</atomic-result-badge>\n```\n\nThe contents of a multi-value field can be displayed as in the following example:\n```html\n<atomic-result-badge icon=\"https://my-website.fake/language.svg\">\n   <atomic-result-multi-value-text field=\"language\"></atomic-result-multi-value-text>\n</atomic-result-badge>\n```",
          "name": "AtomicResultBadge",
          "cssParts": [
            {
              "description": "The decorative outer-most element with the background color and text color.",
              "name": "result-badge-element"
            },
            {
              "description": "The icon displayed at the left-end of the badge, if present.",
              "name": "result-badge-icon"
            },
            {
              "description": "The wrapper around the contents at the right-end of the badge. This may be text, a field or slotted elements depending on which was configured.",
              "name": "result-badge-label"
            }
          ],
          "slots": [
            {
              "description": "The element(s) to display inside the badge, instead of a field or label.",
              "name": "default"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "host",
              "type": {
                "text": "HTMLElement"
              }
            },
            {
              "kind": "field",
              "name": "field",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "public",
              "description": "The field to display in the badge.\n\nNot compatible with `label`, slotted elements nor multi-value fields."
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "public",
              "description": "The text to display in the badge.\n\nNot compatible with `field` nor slotted elements."
            },
            {
              "kind": "field",
              "name": "icon",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "public",
              "description": "Specifies an icon to display at the left-end of the badge.\nThis can be used in conjunction with `field`, `label` or slotted elements.\n\n- Use a value that starts with `http://`, `https://`, `./`, or `../`, to fetch and display an icon from a given location.\n- Use a value that starts with `assets://`, to display an icon from the Atomic package.\n- Use a stringified SVG to display it directly"
            },
            {
              "kind": "method",
              "name": "render"
            }
          ],
          "attributes": [
            {
              "name": "field",
              "fieldName": "field",
              "type": {
                "text": "string | undefined"
              },
              "description": "The field to display in the badge.\n\nNot compatible with `label`, slotted elements nor multi-value fields."
            },
            {
              "name": "label",
              "fieldName": "label",
              "type": {
                "text": "string | undefined"
              },
              "description": "The text to display in the badge.\n\nNot compatible with `field` nor slotted elements."
            },
            {
              "name": "icon",
              "fieldName": "icon",
              "type": {
                "text": "string | undefined"
              },
              "description": "Specifies an icon to display at the left-end of the badge.\nThis can be used in conjunction with `field`, `label` or slotted elements.\n\n- Use a value that starts with `http://`, `https://`, `./`, or `../`, to fetch and display an icon from a given location.\n- Use a value that starts with `assets://`, to display an icon from the Atomic package.\n- Use a stringified SVG to display it directly"
            }
          ],
          "tagName": "atomic-result-badge",
          "events": [],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AtomicResultBadge",
          "declaration": {
            "name": "AtomicResultBadge",
            "module": "src/components/search/result-template-components/atomic-result-badge/atomic-result-badge.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "atomic-result-badge",
          "declaration": {
            "name": "AtomicResultBadge",
            "module": "src/components/search/result-template-components/atomic-result-badge/atomic-result-badge.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/search/result-template-components/atomic-result-fields-list/atomic-result-fields-list.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "The `atomic-result-fields-list` component selectively renders its children to ensure they fit the parent element and adds dividers between them.",
          "name": "AtomicResultFieldsList",
          "members": [
            {
              "kind": "field",
              "name": "result",
              "type": {
                "text": "Result"
              },
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "update",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "render"
            }
          ],
          "tagName": "atomic-result-fields-list",
          "events": [],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AtomicResultFieldsList",
          "declaration": {
            "name": "AtomicResultFieldsList",
            "module": "src/components/search/result-template-components/atomic-result-fields-list/atomic-result-fields-list.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "atomic-result-fields-list",
          "declaration": {
            "name": "AtomicResultFieldsList",
            "module": "src/components/search/result-template-components/atomic-result-fields-list/atomic-result-fields-list.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/search/result-template-components/atomic-result-html/atomic-result-html.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "The `atomic-result-html` component renders the HTML value of a string result field.\n\nThere is an inherent XSS security concern associated with the usage of this component.\n\nUse only with fields for which you are certain the data is harmless.",
          "name": "AtomicResultHtml",
          "members": [
            {
              "kind": "field",
              "name": "bindings",
              "type": {
                "text": "Bindings"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "error",
              "type": {
                "text": "Error"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "field",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "description": "The result field which the component should use.\nIf set, Atomic searches for the specified field in the `Result` object first.\nIf there's no such a field, Atomic searches through the `Result.raw` object.\nIt's important to include the necessary field in the `ResultList` component."
            },
            {
              "kind": "field",
              "name": "sanitize",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "true",
              "description": "Specify if the content should be sanitized, using [`DOMPurify`](https://www.npmjs.com/package/dompurify)."
            },
            {
              "kind": "method",
              "name": "render",
              "privacy": "public"
            }
          ],
          "attributes": [
            {
              "name": "field",
              "fieldName": "field",
              "type": {
                "text": "string"
              },
              "description": "The result field which the component should use.\nIf set, Atomic searches for the specified field in the `Result` object first.\nIf there's no such a field, Atomic searches through the `Result.raw` object.\nIt's important to include the necessary field in the `ResultList` component."
            },
            {
              "name": "sanitize",
              "fieldName": "sanitize",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "description": "Specify if the content should be sanitized, using [`DOMPurify`](https://www.npmjs.com/package/dompurify)."
            }
          ],
          "tagName": "atomic-result-html",
          "events": [],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AtomicResultHtml",
          "declaration": {
            "name": "AtomicResultHtml",
            "module": "src/components/search/result-template-components/atomic-result-html/atomic-result-html.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "atomic-result-html",
          "declaration": {
            "name": "AtomicResultHtml",
            "module": "src/components/search/result-template-components/atomic-result-html/atomic-result-html.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/search/result-template-components/atomic-result-icon/atomic-result-icon.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "The `atomic-result-icon` component outputs the corresponding icon for a given file type.\nThe component searches for a suitable icon, or outputs a generic icon if the search is unsuccessful.",
          "name": "AtomicResultIcon",
          "members": [
            {
              "kind": "field",
              "name": "license",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "\"Salesforce's specific icons originally from lightning design system (https://www.lightningdesignsystem.com/icons/). Icons licensed under Creative Commons Attribution-NoDerivatives 4.0 (https://github.com/salesforce-ux/design-system).\""
            },
            {
              "kind": "field",
              "name": "host",
              "type": {
                "text": "HTMLElement"
              }
            },
            {
              "kind": "method",
              "name": "render",
              "privacy": "public"
            }
          ],
          "tagName": "atomic-result-icon",
          "events": [],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AtomicResultIcon",
          "declaration": {
            "name": "AtomicResultIcon",
            "module": "src/components/search/result-template-components/atomic-result-icon/atomic-result-icon.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "atomic-result-icon",
          "declaration": {
            "name": "AtomicResultIcon",
            "module": "src/components/search/result-template-components/atomic-result-icon/atomic-result-icon.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/search/result-template-components/atomic-result-link/atomic-result-link.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "The `atomic-result-link` component automatically transforms a search result title into a clickable link that points to the original item.",
          "name": "AtomicResultLink",
          "slots": [
            {
              "description": "Lets you display alternative content inside the link",
              "name": "default"
            },
            {
              "description": "Lets you pass [attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#attributes) down to the link element, overriding other attributes, to be used exclusively with an \"a\" tag such as `<a slot=\"attributes\" target=\"_blank\" download></a>`.",
              "name": "attributes"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "bindings",
              "type": {
                "text": "Bindings"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "error",
              "type": {
                "text": "Error"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "hrefTemplate",
              "type": {
                "text": "string | undefined"
              },
              "description": "Specifies a template literal from which to generate the `href` attribute value (see\n[Template literals](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Template_literals)).\n\nThe template literal can reference any number of result properties from the parent result. It can also reference the window object.\n\nFor example, the following markup generates an `href` value such as `http://uri.com?id=itemTitle`, using the result's `clickUri` and `itemtitle` fields.\n```html\n<atomic-result-link href-template='${clickUri}?id=${raw.itemtitle}'></atomic-result-link>\n```"
            },
            {
              "kind": "method",
              "name": "initialize",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "render",
              "privacy": "public"
            }
          ],
          "attributes": [
            {
              "name": "href-template",
              "fieldName": "hrefTemplate",
              "type": {
                "text": "string | undefined"
              },
              "description": "Specifies a template literal from which to generate the `href` attribute value (see\n[Template literals](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Template_literals)).\n\nThe template literal can reference any number of result properties from the parent result. It can also reference the window object.\n\nFor example, the following markup generates an `href` value such as `http://uri.com?id=itemTitle`, using the result's `clickUri` and `itemtitle` fields.\n```html\n<atomic-result-link href-template='${clickUri}?id=${raw.itemtitle}'></atomic-result-link>\n```"
            }
          ],
          "tagName": "atomic-result-link",
          "events": [],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AtomicResultLink",
          "declaration": {
            "name": "AtomicResultLink",
            "module": "src/components/search/result-template-components/atomic-result-link/atomic-result-link.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "atomic-result-link",
          "declaration": {
            "name": "AtomicResultLink",
            "module": "src/components/search/result-template-components/atomic-result-link/atomic-result-link.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/search/result-template-components/atomic-result-image/atomic-result-image.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "The `atomic-result-image` component renders an image from a result field.",
          "name": "AtomicResultImage",
          "members": [
            {
              "kind": "field",
              "name": "bindings",
              "type": {
                "text": "Bindings"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "field",
              "type": {
                "text": "string"
              },
              "description": "The result field which the component should use. This will look for the field in the Result object first, then in the Result.raw object. It is important to include the necessary field in the `atomic-search-interface` component."
            },
            {
              "kind": "field",
              "name": "fallback",
              "type": {
                "text": "string | undefined"
              },
              "description": "An optional fallback image URL that will be used in case the specified image field is not available or encounters an error."
            },
            {
              "kind": "field",
              "name": "error",
              "type": {
                "text": "Error"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "url",
              "privacy": "public",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "render",
              "privacy": "public"
            }
          ],
          "attributes": [
            {
              "name": "field",
              "fieldName": "field",
              "type": {
                "text": "string"
              },
              "description": "The result field which the component should use. This will look for the field in the Result object first, then in the Result.raw object. It is important to include the necessary field in the `atomic-search-interface` component."
            },
            {
              "name": "fallback",
              "fieldName": "fallback",
              "type": {
                "text": "string | undefined"
              },
              "description": "An optional fallback image URL that will be used in case the specified image field is not available or encounters an error."
            }
          ],
          "tagName": "atomic-result-image",
          "events": [],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AtomicResultImage",
          "declaration": {
            "name": "AtomicResultImage",
            "module": "src/components/search/result-template-components/atomic-result-image/atomic-result-image.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "atomic-result-image",
          "declaration": {
            "name": "AtomicResultImage",
            "module": "src/components/search/result-template-components/atomic-result-image/atomic-result-image.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/search/result-template-components/atomic-result-multi-value-text/atomic-result-multi-value-text.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "The `atomic-result-multi-value-text` component renders the values of a multi-value string field.",
          "name": "AtomicResultMultiText",
          "cssParts": [
            {
              "description": "The list of field values.",
              "name": "result-multi-value-text-list"
            },
            {
              "description": "The separator to display between each of the field values.",
              "name": "result-multi-value-text-separator"
            },
            {
              "description": "A field value.",
              "name": "result-multi-value-text-value"
            },
            {
              "description": "A label indicating some values were omitted.",
              "name": "result-multi-value-text-value-more"
            }
          ],
          "slots": [
            {
              "description": "A custom caption value that's specified for a given part of a multi-text field value. For example, if you want to use `Off-Campus Resident` as a caption value for `Off-campus apartment` in `Off-campus apartment;On-campus apartment`, you'd use `<span slot=\"result-multi-value-text-value-off-campus-apartment\">Off-Campus Resident</span>`). The suffix of this slot corresponds with the field value, written in kebab case.",
              "name": "result-multi-value-text-value-*"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "breadcrumbManager",
              "type": {
                "text": "BreadcrumbManager"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "bindings",
              "type": {
                "text": "Bindings"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "host",
              "type": {
                "text": "HTMLElement"
              }
            },
            {
              "kind": "field",
              "name": "error",
              "type": {
                "text": "Error"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "field",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "description": "The field that the component should use.\nThe component will try to find this field in the `Result.raw` object unless it finds it in the `Result` object first.\nMake sure this field is present in the `fieldsToInclude` property of the `atomic-search-interface` component."
            },
            {
              "kind": "field",
              "name": "maxValuesToDisplay",
              "type": {
                "text": "number"
              },
              "privacy": "public",
              "default": "3",
              "description": "The maximum number of field values to display.\nIf there are _n_ more values than the specified maximum, the last displayed value will be \"_n_ more...\"."
            },
            {
              "kind": "field",
              "name": "delimiter",
              "type": {
                "text": "string | null"
              },
              "privacy": "public",
              "default": "null",
              "description": "The delimiter used to separate values when the field isn't indexed as a multi value field."
            },
            {
              "kind": "method",
              "name": "initialize",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "render",
              "privacy": "public"
            }
          ],
          "attributes": [
            {
              "name": "field",
              "fieldName": "field",
              "type": {
                "text": "string"
              },
              "description": "The field that the component should use.\nThe component will try to find this field in the `Result.raw` object unless it finds it in the `Result` object first.\nMake sure this field is present in the `fieldsToInclude` property of the `atomic-search-interface` component."
            },
            {
              "name": "max-values-to-display",
              "fieldName": "maxValuesToDisplay",
              "type": {
                "text": "number"
              },
              "default": "3",
              "description": "The maximum number of field values to display.\nIf there are _n_ more values than the specified maximum, the last displayed value will be \"_n_ more...\"."
            },
            {
              "name": "delimiter",
              "fieldName": "delimiter",
              "type": {
                "text": "string | null"
              },
              "default": "null",
              "description": "The delimiter used to separate values when the field isn't indexed as a multi value field."
            }
          ],
          "tagName": "atomic-result-multi-value-text",
          "events": [],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AtomicResultMultiText",
          "declaration": {
            "name": "AtomicResultMultiText",
            "module": "src/components/search/result-template-components/atomic-result-multi-value-text/atomic-result-multi-value-text.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "atomic-result-multi-value-text",
          "declaration": {
            "name": "AtomicResultMultiText",
            "module": "src/components/search/result-template-components/atomic-result-multi-value-text/atomic-result-multi-value-text.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/search/result-template-components/atomic-result-number/atomic-result-number.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "The `atomic-result-number` component renders the value of a number result field.\n\nThe number can be formatted by adding a `atomic-format-number`, `atomic-format-currency` or `atomic-format-unit` component into this component.",
          "name": "AtomicResultNumber",
          "members": [
            {
              "kind": "field",
              "name": "bindings",
              "type": {
                "text": "Bindings"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "host",
              "type": {
                "text": "HTMLElement"
              }
            },
            {
              "kind": "field",
              "name": "error",
              "type": {
                "text": "Error"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "field",
              "type": {
                "text": "string"
              },
              "description": "The field that the component should use.\nThe component will try to find this field in the `Result.raw` object unless it finds it in the `Result` object first.\nMake sure this field is present in the `fieldsToInclude` property of the `atomic-search-interface` component."
            },
            {
              "kind": "field",
              "name": "formatter",
              "type": {
                "text": "NumberFormatter"
              },
              "default": "defaultNumberFormatter"
            },
            {
              "kind": "field",
              "name": "valueToDisplay",
              "type": {
                "text": "string | null"
              },
              "default": "null"
            },
            {
              "kind": "method",
              "name": "setFormat",
              "privacy": "public",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "CustomEvent<NumberFormatter>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "render",
              "privacy": "public"
            }
          ],
          "attributes": [
            {
              "name": "field",
              "fieldName": "field",
              "type": {
                "text": "string"
              },
              "description": "The field that the component should use.\nThe component will try to find this field in the `Result.raw` object unless it finds it in the `Result` object first.\nMake sure this field is present in the `fieldsToInclude` property of the `atomic-search-interface` component."
            }
          ],
          "tagName": "atomic-result-number",
          "events": [],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AtomicResultNumber",
          "declaration": {
            "name": "AtomicResultNumber",
            "module": "src/components/search/result-template-components/atomic-result-number/atomic-result-number.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "atomic-result-number",
          "declaration": {
            "name": "AtomicResultNumber",
            "module": "src/components/search/result-template-components/atomic-result-number/atomic-result-number.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/search/result-template-components/atomic-result-rating/atomic-result-rating.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "The `atomic-result-rating` element renders a star rating.",
          "name": "AtomicResultRating",
          "cssParts": [
            {
              "description": "The wrapper that contains the row of inactive stars and the row of active stars.",
              "name": "value-rating"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "bindings",
              "type": {
                "text": "Bindings"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "host",
              "type": {
                "text": "HTMLElement"
              }
            },
            {
              "kind": "field",
              "name": "field",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "description": "The field whose values you want to display as a rating."
            },
            {
              "kind": "field",
              "name": "maxValueInIndex",
              "type": {
                "text": "number"
              },
              "privacy": "public",
              "default": "5",
              "description": "The maximum value of the field. This value is also used as the number of icons to be displayed."
            },
            {
              "kind": "field",
              "name": "icon",
              "privacy": "public",
              "default": "Star",
              "description": "The SVG icon to use to display the rating.\n\n- Use a value that starts with `http://`, `https://`, `./`, or `../`, to fetch and display an icon from a given location.\n- Use a value that starts with `assets://`, to display an icon from the Atomic package.\n- Use a stringified SVG to display it directly.\n\nWhen using a custom icon, at least part of your icon should have the color set to `fill=\"currentColor\"`.\nThis part of the SVG will take on the colors set in the following [variables](https://developer.mozilla.org/en-US/docs/Web/CSS/Using_CSS_custom_properties):\n\n- `--atomic-rating-icon-active-color`\n- `--atomic-rating-icon-inactive-color`"
            },
            {
              "kind": "field",
              "name": "error",
              "type": {
                "text": "Error"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "numberOfStars",
              "type": {
                "text": "number | null"
              },
              "default": "null"
            },
            {
              "kind": "method",
              "name": "render"
            }
          ],
          "attributes": [
            {
              "name": "field",
              "fieldName": "field",
              "type": {
                "text": "string"
              },
              "description": "The field whose values you want to display as a rating."
            },
            {
              "name": "max-value-in-index",
              "fieldName": "maxValueInIndex",
              "type": {
                "text": "number"
              },
              "default": "5",
              "description": "The maximum value of the field. This value is also used as the number of icons to be displayed."
            },
            {
              "name": "icon",
              "fieldName": "icon",
              "default": "Star",
              "description": "The SVG icon to use to display the rating.\n\n- Use a value that starts with `http://`, `https://`, `./`, or `../`, to fetch and display an icon from a given location.\n- Use a value that starts with `assets://`, to display an icon from the Atomic package.\n- Use a stringified SVG to display it directly.\n\nWhen using a custom icon, at least part of your icon should have the color set to `fill=\"currentColor\"`.\nThis part of the SVG will take on the colors set in the following [variables](https://developer.mozilla.org/en-US/docs/Web/CSS/Using_CSS_custom_properties):\n\n- `--atomic-rating-icon-active-color`\n- `--atomic-rating-icon-inactive-color`"
            }
          ],
          "tagName": "atomic-result-rating",
          "events": [],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AtomicResultRating",
          "declaration": {
            "name": "AtomicResultRating",
            "module": "src/components/search/result-template-components/atomic-result-rating/atomic-result-rating.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "atomic-result-rating",
          "declaration": {
            "name": "AtomicResultRating",
            "module": "src/components/search/result-template-components/atomic-result-rating/atomic-result-rating.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/search/result-template-components/atomic-result-printable-uri/atomic-result-printable-uri.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "The `atomic-result-printable-uri` component displays the URI, or path, to access a result.",
          "name": "AtomicResultPrintableUri",
          "slots": [
            {
              "description": "Lets you pass [attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#attributes) down to anchor elements, overriding other attributes. To be used exclusively in anchor elements, such as: `<a slot=\"attributes\" target=\"_blank\" download></a>`.",
              "name": "attributes"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "bindings",
              "type": {
                "text": "Bindings"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "host",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "listExpanded",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "error",
              "type": {
                "text": "Error"
              }
            },
            {
              "kind": "field",
              "name": "maxNumberOfParts",
              "type": {
                "text": "number"
              },
              "default": "5",
              "description": "The maximum number of Uri parts to display. This has to be over the minimum of `3` in order to be effective. Putting `Infinity` will disable the ellipsis."
            },
            {
              "kind": "method",
              "name": "initialize",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "render",
              "privacy": "public"
            }
          ],
          "attributes": [
            {
              "name": "max-number-of-parts",
              "fieldName": "maxNumberOfParts",
              "type": {
                "text": "number"
              },
              "default": "5",
              "description": "The maximum number of Uri parts to display. This has to be over the minimum of `3` in order to be effective. Putting `Infinity` will disable the ellipsis."
            }
          ],
          "tagName": "atomic-result-printable-uri",
          "events": [],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AtomicResultPrintableUri",
          "declaration": {
            "name": "AtomicResultPrintableUri",
            "module": "src/components/search/result-template-components/atomic-result-printable-uri/atomic-result-printable-uri.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "atomic-result-printable-uri",
          "declaration": {
            "name": "AtomicResultPrintableUri",
            "module": "src/components/search/result-template-components/atomic-result-printable-uri/atomic-result-printable-uri.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/search/result-template-components/atomic-result-text/atomic-result-text.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "The `atomic-result-text` component renders the value of a string result field.",
          "name": "AtomicResultText",
          "members": [
            {
              "kind": "field",
              "name": "bindings",
              "type": {
                "text": "Bindings"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "error",
              "type": {
                "text": "Error"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "field",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "description": "The result field which the component should use.\nThis will look in the Result object first, and then in the Result.raw object for the fields.\nIt is important to include the necessary field in the `atomic-search-interface` component."
            },
            {
              "kind": "field",
              "name": "shouldHighlight",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "true",
              "description": "When this is set to `true`, the component attempts to highlight text based on the highlighting properties provided by the search API response."
            },
            {
              "kind": "field",
              "name": "default",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "public",
              "description": "The locale key for the text to display when the configured field has no value."
            },
            {
              "kind": "method",
              "name": "render",
              "privacy": "public"
            }
          ],
          "attributes": [
            {
              "name": "field",
              "fieldName": "field",
              "type": {
                "text": "string"
              },
              "description": "The result field which the component should use.\nThis will look in the Result object first, and then in the Result.raw object for the fields.\nIt is important to include the necessary field in the `atomic-search-interface` component."
            },
            {
              "name": "should-highlight",
              "fieldName": "shouldHighlight",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "description": "When this is set to `true`, the component attempts to highlight text based on the highlighting properties provided by the search API response."
            },
            {
              "name": "default",
              "fieldName": "default",
              "type": {
                "text": "string | undefined"
              },
              "description": "The locale key for the text to display when the configured field has no value."
            }
          ],
          "tagName": "atomic-result-text",
          "events": [],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AtomicResultText",
          "declaration": {
            "name": "AtomicResultText",
            "module": "src/components/search/result-template-components/atomic-result-text/atomic-result-text.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "atomic-result-text",
          "declaration": {
            "name": "AtomicResultText",
            "module": "src/components/search/result-template-components/atomic-result-text/atomic-result-text.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/search/result-template-components/atomic-result-sections/atomic-result-section-actions.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "This section allows the information seeker to perform an action on an item without having to view its details.\nFor example, in Commerce you can add an item to the cart directly or add it to a wish list to view at a later time.\n\nBehavior:\n* Exposes the `--line-height` CSS variable so child elements can adjust to the current line height.\n** You should ensure that elements inside of it have `height: var(--line-height)`.\n* Is a wrapping flexbox with a gap.\n* May appear over, next to, or beneath the visual section.",
          "name": "AtomicResultSectionActions",
          "members": [],
          "tagName": "atomic-result-section-actions",
          "events": [],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AtomicResultSectionActions",
          "declaration": {
            "name": "AtomicResultSectionActions",
            "module": "src/components/search/result-template-components/atomic-result-sections/atomic-result-section-actions.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "atomic-result-section-actions",
          "declaration": {
            "name": "AtomicResultSectionActions",
            "module": "src/components/search/result-template-components/atomic-result-sections/atomic-result-section-actions.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/search/result-template-components/atomic-result-sections/atomic-result-section-badges.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "This section provides badges that highlight special features of the item.\n\nBehavior:\n* Exposes the `--line-height` CSS variable so child elements can adjust to the current line height.\n** You should ensure that elements inside of it have `height: var(--line-height)`.\n* Is a wrapping flexbox with a gap.\n* May appear over, next to, or beneath the visual section.",
          "name": "AtomicResultSectionBadges",
          "members": [],
          "tagName": "atomic-result-section-badges",
          "events": [],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AtomicResultSectionBadges",
          "declaration": {
            "name": "AtomicResultSectionBadges",
            "module": "src/components/search/result-template-components/atomic-result-sections/atomic-result-section-badges.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "atomic-result-section-badges",
          "declaration": {
            "name": "AtomicResultSectionBadges",
            "module": "src/components/search/result-template-components/atomic-result-sections/atomic-result-section-badges.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/search/result-template-components/atomic-result-sections/atomic-result-section-bottom-metadata.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "This section displays additional descriptive information about the item.\n\nBehavior:\n* Has a maximum height of two lines.\n** We recommend that you use `atomic-result-fields-list` to ensure that the fields in this section don’t overflow.\n* Exposes the `--line-height` variable so child elements can adjust to the current line height.\n* Has a defined CSS `color` property for text.\n* Has a font weight.",
          "name": "AtomicResultSectionBottomMetadata",
          "members": [],
          "tagName": "atomic-result-section-bottom-metadata",
          "events": [],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AtomicResultSectionBottomMetadata",
          "declaration": {
            "name": "AtomicResultSectionBottomMetadata",
            "module": "src/components/search/result-template-components/atomic-result-sections/atomic-result-section-bottom-metadata.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "atomic-result-section-bottom-metadata",
          "declaration": {
            "name": "AtomicResultSectionBottomMetadata",
            "module": "src/components/search/result-template-components/atomic-result-sections/atomic-result-section-bottom-metadata.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/search/result-template-components/atomic-result-sections/atomic-result-section-children.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "This section displays the folded results, available when using the <atomic-result-children> component.\n\nBehavior:\n* Shows children at the bottom of the result, indented and wrapped in a border.",
          "name": "AtomicResultSectionChildren",
          "members": [],
          "tagName": "atomic-result-section-children",
          "events": [],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AtomicResultSectionChildren",
          "declaration": {
            "name": "AtomicResultSectionChildren",
            "module": "src/components/search/result-template-components/atomic-result-sections/atomic-result-section-children.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "atomic-result-section-children",
          "declaration": {
            "name": "AtomicResultSectionChildren",
            "module": "src/components/search/result-template-components/atomic-result-sections/atomic-result-section-children.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/search/result-template-components/atomic-result-sections/atomic-result-section-emphasized.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "This section displays the field that's important for its search criteria.\nFor example, in Commerce, a product's cost is often more important than the title itself.\n\nBehavior:\n* Has a very large font size.\n* Is the second closest element beneath the title section.",
          "name": "AtomicResultSectionEmphasized",
          "members": [],
          "tagName": "atomic-result-section-emphasized",
          "events": [],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AtomicResultSectionEmphasized",
          "declaration": {
            "name": "AtomicResultSectionEmphasized",
            "module": "src/components/search/result-template-components/atomic-result-sections/atomic-result-section-emphasized.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "atomic-result-section-emphasized",
          "declaration": {
            "name": "AtomicResultSectionEmphasized",
            "module": "src/components/search/result-template-components/atomic-result-sections/atomic-result-section-emphasized.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/search/result-template-components/atomic-result-sections/atomic-result-section-excerpt.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "This section contains an informative summary of the item's content.\n\nBehavior:\n* Has a fixed height of one to three lines, depending on the layout and density.\n* Ellipses overflowing text.\n* Exposes the `--line-height` CSS variable so child elements can adjust to the current line height.\n* Has a defined CSS `color` property for text.",
          "name": "AtomicResultSectionExcerpt",
          "members": [],
          "tagName": "atomic-result-section-excerpt",
          "events": [],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AtomicResultSectionExcerpt",
          "declaration": {
            "name": "AtomicResultSectionExcerpt",
            "module": "src/components/search/result-template-components/atomic-result-sections/atomic-result-section-excerpt.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "atomic-result-section-excerpt",
          "declaration": {
            "name": "AtomicResultSectionExcerpt",
            "module": "src/components/search/result-template-components/atomic-result-sections/atomic-result-section-excerpt.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/search/result-template-components/atomic-result-sections/atomic-result-section-title-metadata.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "This section surfaces some fields that are directly related to the title of the item.\nFor example, in Commerce, this could be the item's rating, which is tied to the nature of the product itself,\nrather than to the product's description.\n\nBehavior:\n* Has a very small font size.\n* Is the closest element beneath the title section.",
          "name": "AtomicResultSectionTitleMetadata",
          "members": [],
          "tagName": "atomic-result-section-title-metadata",
          "events": [],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AtomicResultSectionTitleMetadata",
          "declaration": {
            "name": "AtomicResultSectionTitleMetadata",
            "module": "src/components/search/result-template-components/atomic-result-sections/atomic-result-section-title-metadata.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "atomic-result-section-title-metadata",
          "declaration": {
            "name": "AtomicResultSectionTitleMetadata",
            "module": "src/components/search/result-template-components/atomic-result-sections/atomic-result-section-title-metadata.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/search/result-template-components/atomic-result-sections/atomic-result-section-title.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "This section identifies the item by its name, and its main use is to make the result list scannable.\nThis is usually the page title.\n\nBehavior:\n* Has a fixed height of two lines on grid layouts.\n* Exposes the `--line-height` CSS variable so child elements can adjust to the current line height.\n* Has a defined CSS `color` property for text.",
          "name": "AtomicResultSectionTitle",
          "members": [],
          "tagName": "atomic-result-section-title",
          "events": [],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AtomicResultSectionTitle",
          "declaration": {
            "name": "AtomicResultSectionTitle",
            "module": "src/components/search/result-template-components/atomic-result-sections/atomic-result-section-title.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "atomic-result-section-title",
          "declaration": {
            "name": "AtomicResultSectionTitle",
            "module": "src/components/search/result-template-components/atomic-result-sections/atomic-result-section-title.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/search/result-template-components/atomic-result-sections/atomic-result-section-visual.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "This section provides visual information about the item.\nFor example, in Commerce, an image is a great shorthand for a product category.\nAn icon can quickly show the item type, or an avatar can help identify to whom it is related.\n\nBehavior:\n* Has a fixed size that depends on the specified image size, the layout, the density, and the screen size.\n** When the image size is set to `icon`, this section stays very small.\n** You should ensure that elements inside of it take the available space.\n* Always has a 1:1 aspect ratio.",
          "name": "AtomicResultSectionVisual",
          "members": [
            {
              "kind": "field",
              "name": "imageSize",
              "type": {
                "text": "ItemDisplayImageSize | undefined"
              },
              "privacy": "public",
              "description": "How large or small the visual section of results using this template should be."
            }
          ],
          "attributes": [
            {
              "name": "image-size",
              "fieldName": "imageSize",
              "type": {
                "text": "ItemDisplayImageSize | undefined"
              },
              "description": "How large or small the visual section of results using this template should be."
            }
          ],
          "tagName": "atomic-result-section-visual",
          "events": [],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AtomicResultSectionVisual",
          "declaration": {
            "name": "AtomicResultSectionVisual",
            "module": "src/components/search/result-template-components/atomic-result-sections/atomic-result-section-visual.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "atomic-result-section-visual",
          "declaration": {
            "name": "AtomicResultSectionVisual",
            "module": "src/components/search/result-template-components/atomic-result-sections/atomic-result-section-visual.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/search/result-template-components/atomic-result-timespan/atomic-result-timespan.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "The `atomic-result-timespan` component renders a target result number field value as a duration.",
          "name": "AtomicResultTimespan",
          "members": [
            {
              "kind": "field",
              "name": "bindings",
              "type": {
                "text": "Bindings"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "error",
              "type": {
                "text": "Error"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "field",
              "type": {
                "text": "string"
              },
              "description": "The target result field.\nThe component first looks for the field in the Result object, and then in the Result.raw object.\nIt is important to include the necessary field in the `atomic-search-interface` component."
            },
            {
              "kind": "field",
              "name": "unit",
              "type": {
                "text": "string"
              },
              "default": "'ms'",
              "description": "The unit of measurement of the field value.\nAvailable units: https://day.js.org/docs/en/durations/creating"
            },
            {
              "kind": "field",
              "name": "format",
              "type": {
                "text": "string | undefined"
              },
              "description": "The format to apply to the result field value.\n\nBy default, the format is HH:mm:ss when the duration is under a day, and it is an approximation when longer (days, months or years).\n\nThe string displayed when there is an approximation can be modified with [localization](https://docs.coveo.com/en/atomic/latest/usage/atomic-localization/).\n\nAvailable formats: https://day.js.org/docs/en/durations/format"
            },
            {
              "kind": "method",
              "name": "initialize",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "render",
              "privacy": "public"
            }
          ],
          "attributes": [
            {
              "name": "field",
              "fieldName": "field",
              "type": {
                "text": "string"
              },
              "description": "The target result field.\nThe component first looks for the field in the Result object, and then in the Result.raw object.\nIt is important to include the necessary field in the `atomic-search-interface` component."
            },
            {
              "name": "unit",
              "fieldName": "unit",
              "type": {
                "text": "string"
              },
              "default": "'ms'",
              "description": "The unit of measurement of the field value.\nAvailable units: https://day.js.org/docs/en/durations/creating"
            },
            {
              "name": "format",
              "fieldName": "format",
              "type": {
                "text": "string | undefined"
              },
              "description": "The format to apply to the result field value.\n\nBy default, the format is HH:mm:ss when the duration is under a day, and it is an approximation when longer (days, months or years).\n\nThe string displayed when there is an approximation can be modified with [localization](https://docs.coveo.com/en/atomic/latest/usage/atomic-localization/).\n\nAvailable formats: https://day.js.org/docs/en/durations/format"
            }
          ],
          "tagName": "atomic-result-timespan",
          "events": [],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AtomicResultTimespan",
          "declaration": {
            "name": "AtomicResultTimespan",
            "module": "src/components/search/result-template-components/atomic-result-timespan/atomic-result-timespan.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "atomic-result-timespan",
          "declaration": {
            "name": "AtomicResultTimespan",
            "module": "src/components/search/result-template-components/atomic-result-timespan/atomic-result-timespan.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/search/result-template-components/quickview-iframe/quickview-iframe.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/search/result-template-components/quickview-word-highlight/quickview-word-highlight.tsx",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/search/result-templates/atomic-result-children-template/atomic-result-children-template.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "The `atomic-result-children-template` component determines the format of the child results, depending on the conditions that are defined for each template. A `template` element must be the child of an `atomic-result-children-template`, and an `atomic-result-children` must be the parent of each `atomic-result-children-template`.\n\nNote: Any `<script>` tags defined inside of a `<template>` element will not be executed when results are being rendered.",
          "name": "AtomicResultChildrenTemplate",
          "members": [
            {
              "kind": "field",
              "name": "host",
              "type": {
                "text": "HTMLDivElement"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "error",
              "type": {
                "text": "Error"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "conditions",
              "type": {
                "text": "ResultTemplateCondition[]"
              },
              "privacy": "public",
              "default": "[]",
              "description": "A function that must return true on results for the result template to apply.\nSet programmatically before initialization, not via attribute.\n\nFor example, the following targets a template and sets a condition to make it apply only to results whose `title` contains `singapore`:\n`document.querySelector('#target-template').conditions = [(result) => /singapore/i.test(result.title)];`"
            },
            {
              "kind": "field",
              "name": "mustMatch",
              "type": {
                "text": "Record<string, string[]>"
              },
              "privacy": "public",
              "default": "{}"
            },
            {
              "kind": "field",
              "name": "mustNotMatch",
              "type": {
                "text": "Record<string, string[]>"
              },
              "privacy": "public",
              "default": "{}"
            },
            {
              "kind": "field",
              "name": "resultTemplateCommon",
              "type": {
                "text": "ResultTemplateCommon"
              },
              "privacy": "public",
              "default": "new ResultTemplateCommon({ host: this.host, setError: (err) => { this.error = err; }, validParents: ['atomic-result-children'], })"
            },
            {
              "kind": "method",
              "name": "getTemplate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "Promise<ResultTemplate<DocumentFragment> | null>"
                }
              },
              "description": "Gets the appropriate result template based on conditions applied."
            },
            {
              "kind": "method",
              "name": "render",
              "privacy": "public"
            }
          ],
          "attributes": [
            {
              "name": "conditions",
              "fieldName": "conditions",
              "type": {
                "text": "ResultTemplateCondition[]"
              },
              "default": "[]",
              "description": "A function that must return true on results for the result template to apply.\nSet programmatically before initialization, not via attribute.\n\nFor example, the following targets a template and sets a condition to make it apply only to results whose `title` contains `singapore`:\n`document.querySelector('#target-template').conditions = [(result) => /singapore/i.test(result.title)];`"
            }
          ],
          "tagName": "atomic-result-children-template",
          "events": [],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AtomicResultChildrenTemplate",
          "declaration": {
            "name": "AtomicResultChildrenTemplate",
            "module": "src/components/search/result-templates/atomic-result-children-template/atomic-result-children-template.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "atomic-result-children-template",
          "declaration": {
            "name": "AtomicResultChildrenTemplate",
            "module": "src/components/search/result-templates/atomic-result-children-template/atomic-result-children-template.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/search/result-templates/atomic-result-template/atomic-result-template.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "A [result template](https://docs.coveo.com/en/atomic/latest/usage/displaying-results#defining-a-result-template) determines the format of the query results, depending on the conditions that are defined for each template.\n\nA `template` element must be the child of an `atomic-result-template`, and either an `atomic-result-list` or `atomic-folded-result-list` must be the parent of each `atomic-result-template`.\n\n**Note:** Any `<script>` tags that are defined inside a `<template>` element will not be executed when the results are being rendered.",
          "name": "AtomicResultTemplate",
          "members": [
            {
              "kind": "field",
              "name": "error",
              "type": {
                "text": "Error"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "host",
              "type": {
                "text": "HTMLDivElement"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "conditions",
              "type": {
                "text": "ResultTemplateCondition[]"
              },
              "privacy": "public",
              "default": "[]",
              "description": "A function that must return true on results for the result template to apply.\nSet programmatically before initialization, not via attribute.\n\nFor example, the following targets a template and sets a condition to make it apply only to results whose `title` contains `singapore`:\n`document.querySelector('#target-template').conditions = [(result) => /singapore/i.test(result.title)];`"
            },
            {
              "kind": "field",
              "name": "mustMatch",
              "type": {
                "text": "Record<string, string[]>"
              },
              "privacy": "public",
              "default": "{}"
            },
            {
              "kind": "field",
              "name": "mustNotMatch",
              "type": {
                "text": "Record<string, string[]>"
              },
              "privacy": "public",
              "default": "{}"
            },
            {
              "kind": "method",
              "name": "getTemplate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "Promise<ResultTemplate<DocumentFragment> | null>"
                }
              },
              "description": "Gets the appropriate result template based on conditions applied."
            },
            {
              "kind": "method",
              "name": "render",
              "privacy": "public"
            }
          ],
          "attributes": [
            {
              "name": "conditions",
              "fieldName": "conditions",
              "type": {
                "text": "ResultTemplateCondition[]"
              },
              "default": "[]",
              "description": "A function that must return true on results for the result template to apply.\nSet programmatically before initialization, not via attribute.\n\nFor example, the following targets a template and sets a condition to make it apply only to results whose `title` contains `singapore`:\n`document.querySelector('#target-template').conditions = [(result) => /singapore/i.test(result.title)];`"
            }
          ],
          "tagName": "atomic-result-template",
          "events": [],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AtomicResultTemplate",
          "declaration": {
            "name": "AtomicResultTemplate",
            "module": "src/components/search/result-templates/atomic-result-template/atomic-result-template.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "atomic-result-template",
          "declaration": {
            "name": "AtomicResultTemplate",
            "module": "src/components/search/result-templates/atomic-result-template/atomic-result-template.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/search/search-box-suggestions/atomic-search-box-instant-results/atomic-search-box-instant-results.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "The `atomic-search-box-instant-results` component can be added as a child of an `atomic-search-box` component, allowing for the configuration of instant results behavior.\n\nThis component does not support accessibility out-of-the-box. To do so, see [Instant Results Accessibility](https://docs.coveo.com/en/atomic/latest/usage/accessibility/#instant-results-accessibility).\n\nThis component is not supported on mobile.",
          "name": "AtomicSearchBoxInstantResults",
          "members": [
            {
              "kind": "field",
              "name": "bindings",
              "type": {
                "text": "SearchBoxSuggestionsBindings<SearchBox, Bindings>"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "host",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "error",
              "type": {
                "text": "Error"
              },
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "setRenderFunction",
              "privacy": "public",
              "parameters": [
                {
                  "name": "resultRenderingFunction",
                  "type": {
                    "text": "ItemRenderingFunction"
                  }
                }
              ],
              "description": "Sets a rendering function to bypass the standard HTML template mechanism for rendering results.\nYou can use this function while working with web frameworks that don't use plain HTML syntax, e.g., React, Angular or Vue.\n\nDo not use this method if you integrate Atomic in a plain HTML deployment."
            },
            {
              "kind": "field",
              "name": "maxResultsPerQuery",
              "type": {
                "text": "number"
              },
              "privacy": "public",
              "default": "4",
              "description": "The maximum number of results to show."
            },
            {
              "kind": "field",
              "name": "density",
              "type": {
                "text": "ItemDisplayDensity"
              },
              "privacy": "public",
              "default": "'normal'",
              "description": "The spacing of various elements in the result list, including the gap between results, the gap between parts of a result, and the font sizes of different parts in a result."
            },
            {
              "kind": "field",
              "name": "imageSize",
              "type": {
                "text": "ItemDisplayImageSize"
              },
              "privacy": "public",
              "default": "'icon'",
              "description": "The expected size of the image displayed in the results."
            },
            {
              "kind": "field",
              "name": "ariaLabelGenerator",
              "type": {
                "text": "AriaLabelGenerator | undefined"
              },
              "privacy": "public",
              "description": "The callback to generate an [`aria-label`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-label) for a given result so that accessibility tools can fully describe what's visually rendered by a result.\n\nBy default, or if an empty string is returned, `result.title` is used."
            },
            {
              "kind": "method",
              "name": "initialize",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "SearchBoxSuggestions"
                }
              }
            },
            {
              "kind": "method",
              "name": "render",
              "privacy": "public"
            }
          ],
          "attributes": [
            {
              "name": "max-results-per-query",
              "fieldName": "maxResultsPerQuery",
              "type": {
                "text": "number"
              },
              "default": "4",
              "description": "The maximum number of results to show."
            },
            {
              "name": "density",
              "fieldName": "density",
              "type": {
                "text": "ItemDisplayDensity"
              },
              "default": "'normal'",
              "description": "The spacing of various elements in the result list, including the gap between results, the gap between parts of a result, and the font sizes of different parts in a result."
            },
            {
              "name": "image-size",
              "fieldName": "imageSize",
              "type": {
                "text": "ItemDisplayImageSize"
              },
              "default": "'icon'",
              "description": "The expected size of the image displayed in the results."
            },
            {
              "name": "aria-label-generator",
              "fieldName": "ariaLabelGenerator",
              "type": {
                "text": "AriaLabelGenerator | undefined"
              },
              "description": "The callback to generate an [`aria-label`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-label) for a given result so that accessibility tools can fully describe what's visually rendered by a result.\n\nBy default, or if an empty string is returned, `result.title` is used."
            }
          ],
          "tagName": "atomic-search-box-instant-results",
          "events": [],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AtomicSearchBoxInstantResults",
          "declaration": {
            "name": "AtomicSearchBoxInstantResults",
            "module": "src/components/search/search-box-suggestions/atomic-search-box-instant-results/atomic-search-box-instant-results.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "atomic-search-box-instant-results",
          "declaration": {
            "name": "AtomicSearchBoxInstantResults",
            "module": "src/components/search/search-box-suggestions/atomic-search-box-instant-results/atomic-search-box-instant-results.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/search/search-box-suggestions/atomic-search-box-recent-queries/atomic-search-box-recent-queries.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "The `atomic-search-box-recent-queries` component can be added as a child of an `atomic-search-box` component, allowing for the configuration of recent query suggestions.",
          "name": "AtomicSearchBoxRecentQueries",
          "cssParts": [
            {
              "description": "The 'Recent queries' title.",
              "name": "recent-query-title"
            },
            {
              "description": "The 'Clear' button for clearing recent queries    .",
              "name": "recent-query-clear"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "error",
              "type": {
                "text": "Error"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "icon",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "public",
              "description": "The SVG icon to display.\n\n- Use a value that starts with `http://`, `https://`, `./`, or `../`, to fetch and display an icon from a given location.\n- Use a value that starts with `assets://`, to display an icon from the Atomic package.\n- Use a stringified SVG to display it directly."
            },
            {
              "kind": "field",
              "name": "maxWithQuery",
              "type": {
                "text": "number"
              },
              "privacy": "public",
              "default": "3",
              "description": "The maximum number of suggestions that will be displayed if the user has typed something into the input field."
            },
            {
              "kind": "field",
              "name": "maxWithoutQuery",
              "type": {
                "text": "number | undefined"
              },
              "privacy": "public",
              "description": "The maximum number of suggestions that will be displayed initially when the input field is empty."
            },
            {
              "kind": "method",
              "name": "render",
              "privacy": "public"
            }
          ],
          "attributes": [
            {
              "name": "icon",
              "fieldName": "icon",
              "type": {
                "text": "string | undefined"
              },
              "description": "The SVG icon to display.\n\n- Use a value that starts with `http://`, `https://`, `./`, or `../`, to fetch and display an icon from a given location.\n- Use a value that starts with `assets://`, to display an icon from the Atomic package.\n- Use a stringified SVG to display it directly."
            },
            {
              "name": "max-with-query",
              "fieldName": "maxWithQuery",
              "type": {
                "text": "number"
              },
              "default": "3",
              "description": "The maximum number of suggestions that will be displayed if the user has typed something into the input field."
            },
            {
              "name": "max-without-query",
              "fieldName": "maxWithoutQuery",
              "type": {
                "text": "number | undefined"
              },
              "description": "The maximum number of suggestions that will be displayed initially when the input field is empty."
            }
          ],
          "tagName": "atomic-search-box-recent-queries",
          "events": [],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AtomicSearchBoxRecentQueries",
          "declaration": {
            "name": "AtomicSearchBoxRecentQueries",
            "module": "src/components/search/search-box-suggestions/atomic-search-box-recent-queries/atomic-search-box-recent-queries.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "atomic-search-box-recent-queries",
          "declaration": {
            "name": "AtomicSearchBoxRecentQueries",
            "module": "src/components/search/search-box-suggestions/atomic-search-box-recent-queries/atomic-search-box-recent-queries.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/search/search-box-suggestions/atomic-search-box-query-suggestions/atomic-search-box-query-suggestions.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "The `atomic-search-box-query-suggestions` component can be added as a child of an `atomic-search-box` component, allowing for the configuration of query suggestion behavior.",
          "name": "AtomicSearchBoxQuerySuggestions",
          "members": [
            {
              "kind": "field",
              "name": "error",
              "type": {
                "text": "Error"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "icon",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "public",
              "description": "The SVG icon to display.\n\n- Use a value that starts with `http://`, `https://`, `./`, or `../`, to fetch and display an icon from a given location.\n- Use a value that starts with `assets://`, to display an icon from the Atomic package.\n- Use a stringified SVG to display it directly."
            },
            {
              "kind": "field",
              "name": "maxWithQuery",
              "type": {
                "text": "number | undefined"
              },
              "privacy": "public",
              "description": "The maximum number of suggestions that will be displayed if the user has typed something into the input field."
            },
            {
              "kind": "field",
              "name": "maxWithoutQuery",
              "type": {
                "text": "number | undefined"
              },
              "privacy": "public",
              "description": "The maximum number of suggestions that will be displayed initially when the input field is empty."
            },
            {
              "kind": "method",
              "name": "render",
              "privacy": "public"
            }
          ],
          "attributes": [
            {
              "name": "icon",
              "fieldName": "icon",
              "type": {
                "text": "string | undefined"
              },
              "description": "The SVG icon to display.\n\n- Use a value that starts with `http://`, `https://`, `./`, or `../`, to fetch and display an icon from a given location.\n- Use a value that starts with `assets://`, to display an icon from the Atomic package.\n- Use a stringified SVG to display it directly."
            },
            {
              "name": "max-with-query",
              "fieldName": "maxWithQuery",
              "type": {
                "text": "number | undefined"
              },
              "description": "The maximum number of suggestions that will be displayed if the user has typed something into the input field."
            },
            {
              "name": "max-without-query",
              "fieldName": "maxWithoutQuery",
              "type": {
                "text": "number | undefined"
              },
              "description": "The maximum number of suggestions that will be displayed initially when the input field is empty."
            }
          ],
          "tagName": "atomic-search-box-query-suggestions",
          "events": [],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AtomicSearchBoxQuerySuggestions",
          "declaration": {
            "name": "AtomicSearchBoxQuerySuggestions",
            "module": "src/components/search/search-box-suggestions/atomic-search-box-query-suggestions/atomic-search-box-query-suggestions.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "atomic-search-box-query-suggestions",
          "declaration": {
            "name": "AtomicSearchBoxQuerySuggestions",
            "module": "src/components/search/search-box-suggestions/atomic-search-box-query-suggestions/atomic-search-box-query-suggestions.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/search/smart-snippets/atomic-smart-snippet/atomic-smart-snippet.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "The `atomic-smart-snippet` component displays the excerpt of a document that would be most likely to answer a particular query.\n\nYou can style the snippet by inserting a template element as follows:\n```html\n<atomic-smart-snippet>\n  <template>\n    <style>\n      b {\n        color: blue;\n      }\n    </style>\n  </template>\n</atomic-smart-snippet>\n```",
          "name": "AtomicSmartSnippet",
          "cssParts": [
            {
              "description": "The wrapper of the entire smart snippet.",
              "name": "smart-snippet"
            },
            {
              "description": "The header displaying the question that is answered by the found document excerpt.",
              "name": "question"
            },
            {
              "description": "The container displaying the full document excerpt.",
              "name": "answer"
            },
            {
              "description": "The container displaying only part of the answer.",
              "name": "truncated-answer"
            },
            {
              "description": "The show more button.",
              "name": "show-more-button"
            },
            {
              "description": "The show less button.",
              "name": "show-less-button"
            },
            {
              "description": "The body of the smart snippet, containing the truncated answer and the show more or show less button.",
              "name": "body"
            },
            {
              "description": "The footer underneath the answer.",
              "name": "footer"
            },
            {
              "description": "The URL to the document the excerpt is from.",
              "name": "source-url"
            },
            {
              "description": "The title of the document the excerpt is from.",
              "name": "source-title"
            },
            {
              "description": "The feedback banner underneath the source.",
              "name": "feedback-banner"
            },
            {
              "description": "A wrapper around the feedback inquiry and the feedback buttons.",
              "name": "feedback-inquiry-and-buttons"
            },
            {
              "description": "The message asking the end user to provide feedback on whether the excerpt was useful.",
              "name": "feedback-inquiry"
            },
            {
              "description": "The wrapper around the buttons after the inquiry.",
              "name": "feedback-buttons"
            },
            {
              "description": "The button allowing the end user to signal that the excerpt was useful.",
              "name": "feedback-like-button"
            },
            {
              "description": "The button allowing the end user to signal that the excerpt wasn't useful.",
              "name": "feedback-dislike-button"
            },
            {
              "description": "The wrapper around the 'thank you' message and feedback button.",
              "name": "feedback-thank-you-container"
            },
            {
              "description": "The message thanking the end user for providing feedback.",
              "name": "feedback-thank-you"
            },
            {
              "description": "The button a user can press to provide detailed feedback.",
              "name": "feedback-explain-why-button"
            }
          ],
          "slots": [
            {
              "description": "Lets you pass [attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#attributes) down to anchor elements, overriding other attributes. To be used exclusively in anchor elements, such as: `<a slot=\"source-anchor-attributes\" target=\"_blank\"></a>`.",
              "name": "source-anchor-attributes"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "bindings",
              "type": {
                "text": "Bindings"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "smartSnippet",
              "type": {
                "text": "SmartSnippet"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "smartSnippetState",
              "type": {
                "text": "SmartSnippetState"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "error",
              "type": {
                "text": "Error"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "host",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "headingLevel",
              "type": {
                "text": "number"
              },
              "privacy": "public",
              "default": "0",
              "description": "The [heading level](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/Heading_Elements) to use for the question at the top of the snippet, from 1 to 5."
            },
            {
              "kind": "field",
              "name": "maximumHeight",
              "type": {
                "text": "number"
              },
              "default": "250",
              "description": "The maximum height (in pixels) a snippet can have before the component truncates it and displays a \"show more\" button."
            },
            {
              "kind": "field",
              "name": "collapsedHeight",
              "type": {
                "text": "number"
              },
              "default": "180",
              "description": "When the answer is partly hidden, how much of its height (in pixels) should be visible."
            },
            {
              "kind": "field",
              "name": "snippetStyle",
              "type": {
                "text": "string | undefined"
              },
              "description": "Sets the style of the snippet.\n\nExample:\n```ts\nsmartSnippet.snippetStyle = `\n  b {\n    color: blue;\n  }\n`;\n```"
            },
            {
              "kind": "field",
              "name": "feedbackSent",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "snippetMaximumHeight",
              "type": {
                "text": "number | undefined"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "snippetCollapsedHeight",
              "type": {
                "text": "number | undefined"
              },
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "onSelectInlineLink",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "CustomEvent<InlineLink>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onBeginDelayedSelectInlineLink",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "CustomEvent<InlineLink>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onCancelPendingSelectInlineLink",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "CustomEvent<InlineLink>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "initialize",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "render",
              "privacy": "public"
            }
          ],
          "attributes": [
            {
              "name": "heading-level",
              "fieldName": "headingLevel",
              "type": {
                "text": "number"
              },
              "default": "0",
              "description": "The [heading level](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/Heading_Elements) to use for the question at the top of the snippet, from 1 to 5."
            },
            {
              "name": "maximum-height",
              "fieldName": "maximumHeight",
              "type": {
                "text": "number"
              },
              "default": "250",
              "description": "The maximum height (in pixels) a snippet can have before the component truncates it and displays a \"show more\" button."
            },
            {
              "name": "collapsed-height",
              "fieldName": "collapsedHeight",
              "type": {
                "text": "number"
              },
              "default": "180",
              "description": "When the answer is partly hidden, how much of its height (in pixels) should be visible."
            },
            {
              "name": "snippet-style",
              "fieldName": "snippetStyle",
              "type": {
                "text": "string | undefined"
              },
              "description": "Sets the style of the snippet.\n\nExample:\n```ts\nsmartSnippet.snippetStyle = `\n  b {\n    color: blue;\n  }\n`;\n```"
            },
            {
              "name": "snippet-maximum-height",
              "fieldName": "snippetMaximumHeight",
              "type": {
                "text": "number | undefined"
              }
            },
            {
              "name": "snippet-collapsed-height",
              "fieldName": "snippetCollapsedHeight",
              "type": {
                "text": "number | undefined"
              }
            }
          ],
          "tagName": "atomic-smart-snippet",
          "events": [],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AtomicSmartSnippet",
          "declaration": {
            "name": "AtomicSmartSnippet",
            "module": "src/components/search/smart-snippets/atomic-smart-snippet/atomic-smart-snippet.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "atomic-smart-snippet",
          "declaration": {
            "name": "AtomicSmartSnippet",
            "module": "src/components/search/smart-snippets/atomic-smart-snippet/atomic-smart-snippet.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/search/smart-snippets/atomic-smart-snippet-feedback-modal/atomic-smart-snippet-feedback-modal.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "The `atomic-smart-snippet-feedback-modal` is automatically created as a child of the `atomic-search-interface` when the `atomic-smart-snippet` is initialized.\n\nWhen the modal is opened, the class `atomic-modal-opened` is added to the body, allowing further customization.",
          "name": "AtomicSmartSnippetFeedbackModal",
          "cssParts": [
            {
              "description": "The transparent backdrop hiding the content behind the modal.",
              "name": "backdrop"
            },
            {
              "description": "The modal's outermost container with the outline and background.",
              "name": "container"
            },
            {
              "description": "The wrapper around the header.",
              "name": "header-wrapper"
            },
            {
              "description": "The header of the modal, containing the title.",
              "name": "header"
            },
            {
              "description": "The horizontal ruler underneath the header.",
              "name": "header-ruler"
            },
            {
              "description": "The wrapper around the body.",
              "name": "body-wrapper"
            },
            {
              "description": "The body of the modal, between the header and the footer.",
              "name": "body"
            },
            {
              "description": "The wrapper around the reason and details.",
              "name": "form"
            },
            {
              "description": "The title above the reason radio buttons.",
              "name": "reason-title"
            },
            {
              "description": "A wrapper around the radio button and the label of a reason.",
              "name": "reason"
            },
            {
              "description": "A radio button representing a reason.",
              "name": "reason-radio"
            },
            {
              "description": "A label linked to a radio button representing a reason.",
              "name": "reason-label"
            },
            {
              "description": "The title above the details input.",
              "name": "details-title"
            },
            {
              "description": "The input to specify additional details.",
              "name": "details-input"
            },
            {
              "description": "The wrapper with a shadow around the footer.",
              "name": "footer-wrapper"
            },
            {
              "description": "The footer at the bottom of the modal.",
              "name": "footer"
            },
            {
              "description": "The wrapper around the cancel and submit buttons.",
              "name": "buttons"
            },
            {
              "description": "The cancel button.",
              "name": "cancel-button"
            },
            {
              "description": "The submit button.",
              "name": "submit-button"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "bindings",
              "type": {
                "text": "Bindings"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "host",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "smartSnippet",
              "type": {
                "text": "SmartSnippet"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "error",
              "type": {
                "text": "Error"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "source",
              "type": {
                "text": "HTMLElement | undefined"
              }
            },
            {
              "kind": "field",
              "name": "isOpen",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "currentAnswer",
              "type": {
                "text": "SmartSnippetFeedback | 'other' | undefined | undefined"
              }
            },
            {
              "kind": "method",
              "name": "watchToggleOpen",
              "parameters": [
                {
                  "name": "isOpen",
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "initialize"
            },
            {
              "kind": "method",
              "name": "render",
              "privacy": "public"
            }
          ],
          "attributes": [
            {
              "name": "source",
              "fieldName": "source",
              "type": {
                "text": "HTMLElement | undefined"
              }
            },
            {
              "name": "is-open",
              "fieldName": "isOpen",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            }
          ],
          "tagName": "atomic-smart-snippet-feedback-modal",
          "events": [
            {
              "name": "feedbackSent",
              "type": {
                "text": "EventEmitter"
              }
            }
          ],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AtomicSmartSnippetFeedbackModal",
          "declaration": {
            "name": "AtomicSmartSnippetFeedbackModal",
            "module": "src/components/search/smart-snippets/atomic-smart-snippet-feedback-modal/atomic-smart-snippet-feedback-modal.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "atomic-smart-snippet-feedback-modal",
          "declaration": {
            "name": "AtomicSmartSnippetFeedbackModal",
            "module": "src/components/search/smart-snippets/atomic-smart-snippet-feedback-modal/atomic-smart-snippet-feedback-modal.tsx"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/search/smart-snippets/atomic-smart-snippet-suggestions/atomic-smart-snippet-suggestions.tsx",
      "declarations": [
        {
          "kind": "class",
          "description": "The `atomic-smart-snippet-suggestions-suggestions` component displays an accordion of questions related to the query with their corresponding answers.\n\nYou can style the snippets by inserting a template element like this:\n```html\n<atomic-smart-snippet-suggestions>\n  <template>\n    <style>\n      b {\n        color: blue;\n      }\n    </style>\n  </template>\n</atomic-smart-snippet-suggestions>\n```",
          "name": "AtomicSmartSnippetSuggestions",
          "cssParts": [
            {
              "description": "The wrapper with a border around the entire component.",
              "name": "container"
            },
            {
              "description": "The heading above the list of related questions.",
              "name": "heading"
            },
            {
              "description": "The list of related questions.",
              "name": "questions"
            },
            {
              "description": "An expanded related question.",
              "name": "question-answer-expanded"
            },
            {
              "description": "A collapsed related question.",
              "name": "question-answer-collapsed"
            },
            {
              "description": "The button to collapse a related question.",
              "name": "question-button-expanded"
            },
            {
              "description": "The button to expand a related question.",
              "name": "question-button-collapsed"
            },
            {
              "description": "The caret of an expanded related question.",
              "name": "question-icon-expanded"
            },
            {
              "description": "The caret of a collapsed related question.",
              "name": "question-icon-collapsed"
            },
            {
              "description": "The title of an expanded related question.",
              "name": "question-text-expanded"
            },
            {
              "description": "The title of a collapsed related question.",
              "name": "question-text-collapsed"
            },
            {
              "description": "The wrapper around the answer and source of a related question.",
              "name": "answer-and-source"
            },
            {
              "description": "The container displaying the full document excerpt of a related question's answer.",
              "name": "answer"
            },
            {
              "description": "The wrapper around the source of a related question's answer.",
              "name": "footer"
            },
            {
              "description": "The URL to the document a related question's answer is extracted from.",
              "name": "source-url"
            },
            {
              "description": "The title of the document a related question's answer is extracted from.",
              "name": "source-title"
            }
          ],
          "slots": [
            {
              "description": "Lets you pass [attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#attributes) down to anchor elements, overriding other attributes. To be used exclusively in anchor elements, such as: `<a slot=\"source-anchor-attributes\" target=\"_blank\"></a>`.",
              "name": "source-anchor-attributes"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "bindings",
              "type": {
                "text": "Bindings"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "smartSnippetQuestionsList",
              "type": {
                "text": "SmartSnippetQuestionsList"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "smartSnippetQuestionsListState",
              "type": {
                "text": "SmartSnippetQuestionsListState"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "error",
              "type": {
                "text": "Error"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "host",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "headingLevel",
              "type": {
                "text": "number"
              },
              "privacy": "public",
              "default": "0",
              "description": "The [heading level](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/Heading_Elements) to use for the \"People also ask\" heading over the snippets, from 1 to 5."
            },
            {
              "kind": "field",
              "name": "snippetStyle",
              "type": {
                "text": "string | undefined"
              },
              "description": "Sets the style of the snippets.\n\nExample:\n```ts\nsmartSnippet.snippetStyle = `\n  b {\n    color: blue;\n  }\n`;\n```"
            },
            {
              "kind": "method",
              "name": "initialize",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "renderRelatedQuestion",
              "privacy": "public",
              "parameters": [
                {
                  "name": "relatedQuestion",
                  "type": {
                    "text": "SmartSnippetRelatedQuestion"
                  }
                },
                {
                  "name": "index",
                  "type": {
                    "text": "number"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "render",
              "privacy": "public"
            }
          ],
          "attributes": [
            {
              "name": "heading-level",
              "fieldName": "headingLevel",
              "type": {
                "text": "number"
              },
              "default": "0",
              "description": "The [heading level](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/Heading_Elements) to use for the \"People also ask\" heading over the snippets, from 1 to 5."
            },
            {
              "name": "snippet-style",
              "fieldName": "snippetStyle",
              "type": {
                "text": "string | undefined"
              },
              "description": "Sets the style of the snippets.\n\nExample:\n```ts\nsmartSnippet.snippetStyle = `\n  b {\n    color: blue;\n  }\n`;\n```"
            }
          ],
          "tagName": "atomic-smart-snippet-suggestions",
          "events": [],
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AtomicSmartSnippetSuggestions",
          "declaration": {
            "name": "AtomicSmartSnippetSuggestions",
            "module": "src/components/search/smart-snippets/atomic-smart-snippet-suggestions/atomic-smart-snippet-suggestions.tsx"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "atomic-smart-snippet-suggestions",
          "declaration": {
            "name": "AtomicSmartSnippetSuggestions",
            "module": "src/components/search/smart-snippets/atomic-smart-snippet-suggestions/atomic-smart-snippet-suggestions.tsx"
          }
        }
      ]
    }
  ]
}
