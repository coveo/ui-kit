/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { FacetSortCriterion } from "@coveo/headless";
export namespace Components {
    interface AtomicSegmentedFacet {
        /**
          * Specifies a unique identifier for the facet.
         */
        "facetId"?: string;
        /**
          * The field whose values you want to display in the facet.
         */
        "field": string;
        /**
          * Whether to exclude the parents of folded results when estimating the result count for each facet value.
         */
        "filterFacetCount": boolean;
        /**
          * The maximum number of results to scan in the index to ensure that the facet lists all potential facet values. Note: A high injectionDepth may negatively impact the facet request performance. Minimum: `0`
         */
        "injectionDepth": number;
        /**
          * The non-localized label for the facet.
         */
        "label": string;
        /**
          * The number of values to request for this facet. Also determines the number of additional values to request each time more values are shown.
         */
        "numberOfValues": number;
        /**
          * The sort criterion to apply to the returned facet values. Possible values are 'score', 'alphanumeric', 'occurrences', and 'automatic'.
         */
        "sortCriteria": FacetSortCriterion;
    }
}
declare global {
    interface HTMLAtomicSegmentedFacetElement extends Components.AtomicSegmentedFacet, HTMLStencilElement {
    }
    var HTMLAtomicSegmentedFacetElement: {
        prototype: HTMLAtomicSegmentedFacetElement;
        new (): HTMLAtomicSegmentedFacetElement;
    };
    interface HTMLElementTagNameMap {
        "atomic-segmented-facet": HTMLAtomicSegmentedFacetElement;
    }
}
declare namespace LocalJSX {
    interface AtomicSegmentedFacet {
        /**
          * Specifies a unique identifier for the facet.
         */
        "facetId"?: string;
        /**
          * The field whose values you want to display in the facet.
         */
        "field": string;
        /**
          * Whether to exclude the parents of folded results when estimating the result count for each facet value.
         */
        "filterFacetCount"?: boolean;
        /**
          * The maximum number of results to scan in the index to ensure that the facet lists all potential facet values. Note: A high injectionDepth may negatively impact the facet request performance. Minimum: `0`
         */
        "injectionDepth"?: number;
        /**
          * The non-localized label for the facet.
         */
        "label"?: string;
        /**
          * The number of values to request for this facet. Also determines the number of additional values to request each time more values are shown.
         */
        "numberOfValues"?: number;
        /**
          * The sort criterion to apply to the returned facet values. Possible values are 'score', 'alphanumeric', 'occurrences', and 'automatic'.
         */
        "sortCriteria"?: FacetSortCriterion;
    }
    interface IntrinsicElements {
        "atomic-segmented-facet": AtomicSegmentedFacet;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "atomic-segmented-facet": LocalJSX.AtomicSegmentedFacet & JSXBase.HTMLAttributes<HTMLAtomicSegmentedFacetElement>;
        }
    }
}
