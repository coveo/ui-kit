node('linux && docker') {
  def commitHash = params.packageName.substring(params.packageName.lastIndexOf('/') + 1)

  checkout([
    $class: 'GitSCM',
    branches: [[name: commitHash ]],
    extensions: [],
    userRemoteConfigs: [[credentialsId: 'github-app-dev', url: 'https://github.com/coveo/ui-kit']]
  ])

  withDockerContainer(image: 'node:16', args: '-u=root -e HOME=/tmp -e NPM_CONFIG_PREFIX=/tmp/.npm') {
    stage('Setup') {
      sh 'npm run setup'
    }
    
    stage('Npm publish') {
      withCredentials([
      string(credentialsId: 'NPM_TOKEN', variable: 'NPM_TOKEN')]) {
        sh "echo //registry.npmjs.org/:_authToken=${NPM_TOKEN} > ~/.npmrc"
        sh 'npm run npm:tag:latest'
      }
    }

    stage('Notify Docs') {
      withCredentials([
        usernamePassword(credentialsId: 'github-commit-token', usernameVariable: 'GITHUB_USERNAME', passwordVariable: 'GITHUB_TOKEN')
      ]) {
        sh 'npm run notify:docs'
      }
    }

    stage('Cloudfront invalidation') {
      withCredentials([
        [
          $class: "AmazonWebServicesCredentialsBinding",
          credentialsId: "CloudfrontCacheInvalidation",
        ]
      ]) {
          sh 'npm ci';
          sh 'node ./scripts/deploy/invalidate-cloudfront.js'
      }
    }
  }
}
