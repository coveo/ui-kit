library(
    identifier: "jenkins-common-lib@master",
    retriever: modernSCM(github(credentialsId: "github-app-dev", repository: "jenkins-common-lib", repoOwner: "coveo")),
    changelog: false
)

node('heavy && linux && docker') {
  def commitHash = params.packageName.substring(params.packageName.lastIndexOf('/') + 1)

  checkout([
    $class: 'GitSCM',
    branches: [[name: commitHash ]],
    extensions: [],
    userRemoteConfigs: [[credentialsId: 'github-app-dev', url: 'https://github.com/coveo/ui-kit']]
  ])

  dockerUtils.withDocker(image: 'node:18', args: '-e HOME=/tmp -e NPM_CONFIG_PREFIX=/tmp/.npm -v /etc/passwd:/etc/passwd:ro') {
    stage('Setup') {
      sh 'npm ci'
    }

    stage('Approve production release') {
      withCredentials([
        string(credentialsId: 'ui-kit-releaser-app-id', variable: 'RELEASER_APP_ID'),
        string(credentialsId: 'ui-kit-releaser-private-key', variable: 'RELEASER_PRIVATE_KEY'),
        string(credentialsId: 'ui-kit-releaser-client-id', variable: 'RELEASER_CLIENT_ID'),
        string(credentialsId: 'ui-kit-releaser-client-secret', variable: 'RELEASER_CLIENT_SECRET'),
        string(credentialsId: 'ui-kit-releaser-installation-id', variable: 'RELEASER_INSTALLATION_ID'),
      ]) {
        sh "node ./scripts/deploy/approve-production-release.mjs ${params.GITHUB_RUN_ID}"
      }
    }

    stage('Cloudfront invalidation') {
      withCredentials([
        [
          $class: "AmazonWebServicesCredentialsBinding",
          credentialsId: "CloudfrontCacheInvalidation",
        ]
      ]) {
          sh 'npm ci';
          sh 'node ./scripts/deploy/invalidate-cloudfront.mjs'
      }
    }
  }
}
